<?xml version="1.0"?>
<doc>
  <assembly>
    <name>Aspose.GIS</name>
  </assembly>
  <members>
    <member name="T:Aspose.Gis.AbstractPath">
      <summary>
            An <c>AbstractPath</c> is a base class for classes that specify a unique location in an environment similar to a filesystem,
            like a local filesystem, a remote file storage or a ZIP archive, among others.
            </summary>
      <remarks>
            An <c>AbstractPath</c> might specify a location on a local filesystem, a location on a remote filesystem
            or an external storage like the Azure Blob storage, and so on. The location might point to an existing or not existing
            file-like objects, directory-like objects, or have any other meaning reasonable for the environment it belongs to.<br />
            As an example, an <c>AbstractPath</c> inheritor that represents a location on the local filesystem can point to an existing
            file, directory, or to a place in the filesystem that has not been created yet.<cr />
            In order to make a new filesystem-like storage available to <c>Aspose.GIS</c>, one should inherit this class
            and implement its abstract methods.
            </remarks>
    </member>
    <member name="M:Aspose.Gis.AbstractPath.FromLocalPath(System.String)">
      <summary>
            Creates an <see cref="T:Aspose.Gis.AbstractPath" /> that represents a location on the local filesystem.
            </summary>
      <param name="path">A path on the local filesystem, like <c>"C:\\file.shp"</c> or <c>"D:\\directory\\"</c>.</param>
      <returns>
            An <see cref="T:Aspose.Gis.AbstractPath" /> that represents the location defined by the <paramref name="path" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">The argument is <see langword="null" />.</exception>
    </member>
    <member name="M:Aspose.Gis.AbstractPath.FromStream(System.IO.Stream)">
      <summary>
            Creates an <see cref="T:Aspose.Gis.AbstractPath" /> from a <see cref="T:System.IO.Stream" />.
            </summary>
      <param name="stream">A stream to create an <see cref="T:Aspose.Gis.AbstractPath" /> from. <c>Aspose.GIS</c> does not dispose the stream.</param>
      <returns>
            An instance of <see cref="T:Aspose.Gis.AbstractPath" /> with the specified <see cref="T:System.IO.Stream" /> as its content.
            </returns>
      <remarks>
            This method is useful for passing a stream of data in a single-file format (such as GeoJSON or KML) to methods that expect an <see cref="T:Aspose.Gis.AbstractPath" /> .
            </remarks>
    </member>
    <member name="P:Aspose.Gis.AbstractPath.Location">
      <summary>
            Gets a string representation of the location of this <c>AbstractPath</c>.
            </summary>
      <remarks>
            Any two <see cref="T:Aspose.Gis.AbstractPath" />s that equal <see cref="P:Aspose.Gis.AbstractPath.Location" />s point to the same file or directory.
            The string representation must use <see cref="P:Aspose.Gis.AbstractPath.Separator" /> to separate directory levels. <cr />
            As an example, for the local file system a location is a filesystem path, 
            for Azure blobs it can be a path to the blob within a blob container.
            </remarks>
    </member>
    <member name="P:Aspose.Gis.AbstractPath.Separator">
      <summary> Gets a separator character used to separate directory levels of the <see cref="P:Aspose.Gis.AbstractPath.Location" /> string. </summary>
      <value> A separator character used to separate directory levels of the <see cref="P:Aspose.Gis.AbstractPath.Location" /> string. </value>
      <remarks> Usually this is equal to forward '/' or backward slash '\\'. </remarks>
    </member>
    <member name="M:Aspose.Gis.AbstractPath.IsFile">
      <summary> Gets a value indicating whether this path points to an existing file that can be opened for reading. </summary>
      <returns>
        <see langword="true" /> if location points to a file; <see langword="false" /> otherwise.</returns>
    </member>
    <member name="M:Aspose.Gis.AbstractPath.Delete">
      <summary> Deletes a file pointed to by this path. </summary>
      <remarks>
            No exception is thrown if the file doesn't exist.
            </remarks>
      <exception cref="T:System.InvalidOperationException">The argument points to a directory instead of a file.</exception>
    </member>
    <member name="M:Aspose.Gis.AbstractPath.Open(System.IO.FileAccess)">
      <summary>
            Opens this <c>AbstractPath</c> as a file.
            </summary>
      <param name="access">Specifies a subset of operations that can be performed on a <see cref="T:System.IO.Stream" />.</param>
      <returns>A <see cref="T:System.IO.Stream" /> opened with the specified <see cref="T:System.IO.FileAccess" />. </returns>
      <remarks>
            If <paramref name="access" /> has the flag <see cref="F:System.IO.FileAccess.Write" /> set, and the file does not exist, 
            an inheritor must create it. <cr />
            An <c>AbstractPath</c> can be opened multiple times by <c>Aspose.GIS</c>. This is required in order to read a file
            independently with multiple streams. You should not cache the result but rather return new <see cref="T:System.IO.Stream" /> every time
            this method is called.
            </remarks>
    </member>
    <member name="M:Aspose.Gis.AbstractPath.ListDirectory">
      <summary>
            Returns paths located inside this <c>AbstractPath</c>, if it's a directory.
            </summary>
      <returns>
            Paths located inside this <c>AbstractPath</c>.
            </returns>
    </member>
    <member name="M:Aspose.Gis.AbstractPath.Combine(System.String)">
      <summary>
            Combines this <see cref="T:Aspose.Gis.AbstractPath" /> with specified path components.
            </summary>
      <param name="location">A path component to append to this <see cref="T:Aspose.Gis.AbstractPath" />.</param>
      <returns>
            A new <see cref="T:Aspose.Gis.AbstractPath" /> pointing to a <see cref="P:Aspose.Gis.AbstractPath.Location" /> that is a combination of locations of this <see cref="T:Aspose.Gis.AbstractPath" /> and
            the argument.
            </returns>
      <remarks>
            Usually this method should not be overridden by an inheritor. The default implementation 
            concatenates this <see cref="P:Aspose.Gis.AbstractPath.Location" /> with the argument and calls the <see cref="M:Aspose.Gis.AbstractPath.WithLocation(System.String)" />
            method with the concatenated string as an argument.<cr />
            The combination result is defined in the following way:
            <ul><li>If the argument starts with the <see cref="P:Aspose.Gis.AbstractPath.Separator" />, the combination result equals to the argument;</li><li>Otherwise, if <see cref="P:Aspose.Gis.AbstractPath.Location" /> ends with the <see cref="P:Aspose.Gis.AbstractPath.Separator" />,
            the combination result equals to <c><see cref="P:Aspose.Gis.AbstractPath.Location" /> + <paramref name="location" /></c>;</li><li>Otherwise, the result is equal to <c><see cref="P:Aspose.Gis.AbstractPath.Location" /> + <see cref="P:Aspose.Gis.AbstractPath.Separator" /> + <paramref name="location" /></c></li></ul></remarks>
    </member>
    <member name="M:Aspose.Gis.AbstractPath.WithExtension(System.String)">
      <summary>
            Returns a new <see cref="T:Aspose.Gis.AbstractPath" /> with the file extension changed to the specified value.
            </summary>
      <param name="newExtension">A new extension.</param>
      <returns>
            A new <see cref="T:Aspose.Gis.AbstractPath" />, that points to a file in the same directory, but with a new extension.
            </returns>
      <remarks>
            Usually, an inheritor should not override this method. The default implementation substitutes
            the extension and calls <see cref="M:Aspose.Gis.AbstractPath.WithLocation(System.String)" />.
            </remarks>
    </member>
    <member name="M:Aspose.Gis.AbstractPath.GetFileName">
      <summary>
            Returns the file name and extension of this <see cref="T:Aspose.Gis.AbstractPath" />.
            </summary>
      <returns>
            The characters after the last <see cref="P:Aspose.Gis.AbstractPath.Separator" /> character in the <see cref="P:Aspose.Gis.AbstractPath.Location" />. If the
            last character is the <see cref="P:Aspose.Gis.AbstractPath.Separator" /> character, an empty string is returned. If there is no
            <see cref="P:Aspose.Gis.AbstractPath.Separator" /> characters in the <see cref="P:Aspose.Gis.AbstractPath.Location" />, the <see cref="P:Aspose.Gis.AbstractPath.Location" /> itself
            is returned.
            </returns>
      <example>
            For an <c>AbstractPath</c> with <see cref="P:Aspose.Gis.AbstractPath.Location" /> equal to <c>"/directory/file.txt"</c>
            and <see cref="P:Aspose.Gis.AbstractPath.Separator" /> equal to <c>'/'</c>, this method returns <c>"file.txt"</c>.
            </example>
    </member>
    <member name="M:Aspose.Gis.AbstractPath.GetFileNameWithoutExtension">
      <summary>
            Returns the file name of this <see cref="T:Aspose.Gis.AbstractPath" /> without the extension.
            </summary>
      <returns>
            The string returned by <see cref="M:Aspose.Gis.AbstractPath.GetFileName" /> minus the last period and all characters following it.
            </returns>
      <example>
            For an <c>AbstractPath</c> with <see cref="P:Aspose.Gis.AbstractPath.Location" /> equal to <c>"/directory/file.txt"</c>
            and <see cref="P:Aspose.Gis.AbstractPath.Separator" /> equal to <c>'/'</c>, this method returns <c>"file"</c>.
            </example>
    </member>
    <member name="M:Aspose.Gis.AbstractPath.GetExtension">
      <summary>
            Returns the extension of this <see cref="T:Aspose.Gis.AbstractPath" />.
            </summary>
      <returns>
            The extension of this <see cref="T:Aspose.Gis.AbstractPath" /> (including the period ".") or 
            an empty string if the <see cref="T:Aspose.Gis.AbstractPath" /> has no extension.
            </returns>
      <example>
            For an <c>AbstractPath</c> with <see cref="P:Aspose.Gis.AbstractPath.Location" /> equal to <c>"/directory/file.txt"</c> this 
            property returns <c>".txt"</c>.
            </example>
    </member>
    <member name="M:Aspose.Gis.AbstractPath.WithLocation(System.String)">
      <summary>
            Returns a copy of this <see cref="T:Aspose.Gis.AbstractPath" /> with its <see cref="P:Aspose.Gis.AbstractPath.Location" /> changed to the specified value.
            </summary>
      <param name="newLocation">The new <see cref="P:Aspose.Gis.AbstractPath.Location" />.</param>
      <returns>A new <see cref="T:Aspose.Gis.AbstractPath" /> with <see cref="P:Aspose.Gis.AbstractPath.Location" /> changed to the specified value.</returns>
    </member>
    <member name="T:Aspose.Gis.AttributeDataType">
      <summary>
            The data type of a feature attribute.
            </summary>
    </member>
    <member name="F:Aspose.Gis.AttributeDataType.Integer">
      <summary>
            32-bit integer.
            </summary>
    </member>
    <member name="F:Aspose.Gis.AttributeDataType.Long">
      <summary>
            64-bit integer.
            </summary>
    </member>
    <member name="F:Aspose.Gis.AttributeDataType.Guid">
      <summary>
            A globally unique identifier (GUID).
            </summary>
    </member>
    <member name="F:Aspose.Gis.AttributeDataType.Boolean">
      <summary>
            Boolean (true/false) value.
            </summary>
    </member>
    <member name="F:Aspose.Gis.AttributeDataType.Double">
      <summary>
            Double-precision real number.
            </summary>
    </member>
    <member name="F:Aspose.Gis.AttributeDataType.Date">
      <summary>
            Date value.
            </summary>
    </member>
    <member name="F:Aspose.Gis.AttributeDataType.Time">
      <summary>
            Time value.
            </summary>
    </member>
    <member name="F:Aspose.Gis.AttributeDataType.DateTime">
      <summary>
            Date and time value.
            </summary>
    </member>
    <member name="F:Aspose.Gis.AttributeDataType.String">
      <summary>
            String value.
            </summary>
    </member>
    <member name="T:Aspose.Gis.ConversionOptions">
      <summary>
            Options for converting data between formats.
            </summary>
    </member>
    <member name="P:Aspose.Gis.ConversionOptions.SourceDriverOptions">
      <summary>
            Driver-specific options for the source layer.
            </summary>
    </member>
    <member name="P:Aspose.Gis.ConversionOptions.DestinationDriverOptions">
      <summary>
            Driver-specific options for the destination layer.
            </summary>
    </member>
    <member name="P:Aspose.Gis.ConversionOptions.AttributesConverter">
      <summary>
            A custom converter for attributes.
            If not <see langword="null" />, it is called for each attribute of the source layer and is expected to change it if necessary. 
            </summary>
      <remarks>
            Attribute name and data type cannot be changed.
            </remarks>
    </member>
    <member name="P:Aspose.Gis.ConversionOptions.DestinationSpatialReferenceSystem">
      <summary>
            Spatial reference system to assign to destination layer.
            </summary>
    </member>
    <member name="T:Aspose.Gis.DatabaseDriver">
      <summary>
            A driver for a specific database based format.
            </summary>
    </member>
    <member name="M:Aspose.Gis.DatabaseDriver.OpenDataset(System.Data.IDbConnection)">
      <summary>
            Opens the dataset.
            </summary>
      <param name="connection">Opened connection to the database.</param>
      <returns>An instance of <see cref="T:Aspose.Gis.Dataset" />.</returns>
      <exception cref="T:System.ArgumentNullException">The connection is <see langword="null" />.</exception>
      <exception cref="T:Aspose.Gis.GisException">Error reading the dataset.</exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
    </member>
    <member name="T:Aspose.Gis.Dataset">
      <summary>
            A dataset is the collection of <see cref="T:Aspose.Gis.VectorLayer" /> instances.
            </summary>
    </member>
    <member name="M:Aspose.Gis.Dataset.Open(System.String,Aspose.Gis.FileDriver)">
      <summary>
            Opens the dataset.
            </summary>
      <param name="path">Path to the dataset.</param>
      <param name="driver">Driver to use.</param>
      <returns>An instance of <see cref="T:Aspose.Gis.Dataset" />.</returns>
      <exception cref="T:System.ArgumentNullException">The path is <see langword="null" />.</exception>
      <exception cref="T:Aspose.Gis.GisException">Error reading the dataset.</exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
    </member>
    <member name="M:Aspose.Gis.Dataset.Open(Aspose.Gis.AbstractPath,Aspose.Gis.FileDriver)">
      <summary>
            Opens the dataset.
            </summary>
      <param name="path">Path to the dataset.</param>
      <param name="driver">Driver to use.</param>
      <returns>An instance of <see cref="T:Aspose.Gis.Dataset" />.</returns>
      <exception cref="T:System.ArgumentNullException">The path is <see langword="null" />.</exception>
      <exception cref="T:Aspose.Gis.GisException">Error reading the dataset.</exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
    </member>
    <member name="M:Aspose.Gis.Dataset.Open(System.String,Aspose.Gis.FileDriver,Aspose.Gis.DriverOptions)">
      <summary>
            Opens the dataset.
            </summary>
      <param name="path">Path to the dataset.</param>
      <param name="driver">Driver to use.</param>
      <param name="options">Driver-specific options.</param>
      <returns>An instance of <see cref="T:Aspose.Gis.Dataset" />.</returns>
      <exception cref="T:System.ArgumentException">Options object has an incorrect type for this driver.</exception>
      <exception cref="T:System.ArgumentNullException">The path is <see langword="null" />.</exception>
      <exception cref="T:Aspose.Gis.GisException">Error reading the dataset.</exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
    </member>
    <member name="M:Aspose.Gis.Dataset.Open(Aspose.Gis.AbstractPath,Aspose.Gis.FileDriver,Aspose.Gis.DriverOptions)">
      <summary>
            Opens the dataset.
            </summary>
      <param name="path">Path to the dataset.</param>
      <param name="driver">Driver to use.</param>
      <param name="options">Driver-specific options.</param>
      <returns>An instance of <see cref="T:Aspose.Gis.Dataset" />.</returns>
      <exception cref="T:System.ArgumentException">Options object has an incorrect type for this driver.</exception>
      <exception cref="T:System.ArgumentNullException">The path is <see langword="null" />.</exception>
      <exception cref="T:Aspose.Gis.GisException">Error reading the dataset.</exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
    </member>
    <member name="M:Aspose.Gis.Dataset.Open(System.Data.IDbConnection,Aspose.Gis.DatabaseDriver)">
      <summary>
            Opens the dataset.
            </summary>
      <param name="connection">Opened connection to the database.</param>
      <param name="driver">Driver to use.</param>
      <returns>An instance of <see cref="T:Aspose.Gis.Dataset" />.</returns>
      <exception cref="T:System.ArgumentException">Options object has an incorrect type for this driver.</exception>
      <exception cref="T:System.ArgumentNullException">The path is <see langword="null" />.</exception>
      <exception cref="T:Aspose.Gis.GisException">Error reading the dataset.</exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
    </member>
    <member name="M:Aspose.Gis.Dataset.Create(System.String,Aspose.Gis.FileDriver)">
      <summary>
            Creates a dataset.
            </summary>
      <param name="path">Path to the dataset.</param>
      <param name="driver">Driver to use.</param>
      <returns>An instance of <see cref="T:Aspose.Gis.Dataset" />.</returns>
      <exception cref="T:System.ArgumentException">Options object has an incorrect type for this driver.</exception>
      <exception cref="T:System.ArgumentNullException">The path is <see langword="null" />.</exception>
      <exception cref="T:Aspose.Gis.GisException">Error while creating the dataset.</exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
      <exception cref="T:System.NotSupportedException">Driver can not open datasets.</exception>
      <exception cref="T:System.InvalidOperationException">Dataset already exists.</exception>
    </member>
    <member name="M:Aspose.Gis.Dataset.Create(Aspose.Gis.AbstractPath,Aspose.Gis.FileDriver)">
      <summary>
            Creates a dataset.
            </summary>
      <param name="path">Path to the dataset.</param>
      <param name="driver">Driver to use.</param>
      <returns>An instance of <see cref="T:Aspose.Gis.Dataset" />.</returns>
      <exception cref="T:System.ArgumentException">Options object has an incorrect type for this driver.</exception>
      <exception cref="T:System.ArgumentNullException">The path is <see langword="null" />.</exception>
      <exception cref="T:Aspose.Gis.GisException">Error while creating the dataset.</exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
      <exception cref="T:System.NotSupportedException">Driver can not open datasets.</exception>
      <exception cref="T:System.InvalidOperationException">Dataset already exists.</exception>
    </member>
    <member name="M:Aspose.Gis.Dataset.Create(System.String,Aspose.Gis.FileDriver,Aspose.Gis.DriverOptions)">
      <summary>
            Creates a dataset.
            </summary>
      <param name="path">Path to the dataset.</param>
      <param name="driver">Driver to use.</param>
      <param name="options">Driver-specific options.</param>
      <returns>An instance of <see cref="T:Aspose.Gis.Dataset" />.</returns>
      <exception cref="T:System.ArgumentException">Options object has an incorrect type for this driver.</exception>
      <exception cref="T:System.ArgumentNullException">The path is <see langword="null" />.</exception>
      <exception cref="T:Aspose.Gis.GisException">Error while creating the dataset.</exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
      <exception cref="T:System.NotSupportedException">Driver can not open datasets.</exception>
      <exception cref="T:System.InvalidOperationException">Dataset already exists.</exception>
    </member>
    <member name="M:Aspose.Gis.Dataset.Create(Aspose.Gis.AbstractPath,Aspose.Gis.FileDriver,Aspose.Gis.DriverOptions)">
      <summary>
            Creates a dataset.
            </summary>
      <param name="path">Path to the dataset.</param>
      <param name="driver">Driver to use.</param>
      <param name="options">Driver-specific options.</param>
      <returns>An instance of <see cref="T:Aspose.Gis.Dataset" />.</returns>
      <exception cref="T:System.ArgumentException">Options object has an incorrect type for this driver.</exception>
      <exception cref="T:System.ArgumentNullException">The path is <see langword="null" />.</exception>
      <exception cref="T:Aspose.Gis.GisException">Error while creating the dataset.</exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
      <exception cref="T:System.NotSupportedException">Driver can not open datasets.</exception>
      <exception cref="T:System.InvalidOperationException">Dataset already exists.</exception>
    </member>
    <member name="P:Aspose.Gis.Dataset.CanCreateLayers">
      <summary>
            Gets a value indicating whether this dataset can create vector layers.
            </summary>
      <value>
        <see langword="true" />, if this dataset can create vector layers; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:Aspose.Gis.Dataset.CanRemoveLayers">
      <summary>
            Gets a value indicating whether this dataset can remove vector layers.
            </summary>
      <value>
        <see langword="true" />, if this dataset can remove vector layers; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:Aspose.Gis.Dataset.Driver">
      <summary>
            Gets the <see cref="P:Aspose.Gis.Dataset.Driver" /> that instantiated this dataset.
            </summary>
    </member>
    <member name="P:Aspose.Gis.Dataset.LayersCount">
      <summary>
            Gets the number of layers in this dataset.
            </summary>
    </member>
    <member name="M:Aspose.Gis.Dataset.GetLayerName(System.Int32)">
      <summary>
            Gets the name of the layer at specified index.
            </summary>
      <param name="index">Index of the layer.</param>
      <returns>Name of the layer.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Index is out of range.</exception>
    </member>
    <member name="M:Aspose.Gis.Dataset.OpenLayer(System.String,Aspose.Gis.DriverOptions)">
      <summary>
            Opens the layer with specified name for reading.
            </summary>
      <param name="name">Name of the layer to open.</param>
      <param name="options">Open options.</param>
      <returns>The layer opened for reading.</returns>
      <exception cref="T:System.ArgumentException">
            Layer with specified name does not exist;<cr />
            Options object has an incorrect type for this dataset.
            </exception>
      <exception cref="T:System.ArgumentException">Options object has an incorrect type for this dataset.</exception>
      <exception cref="T:System.ArgumentNullException">The name is <see langword="null" />.</exception>
      <exception cref="T:Aspose.Gis.GisException">Error reading the feature from the layer.</exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
    </member>
    <member name="M:Aspose.Gis.Dataset.OpenLayerAt(System.Int32,Aspose.Gis.DriverOptions)">
      <summary>
            Opens the layer at specified index for reading.
            </summary>
      <param name="index">Index of the layer to open.</param>
      <param name="options">Open options.</param>
      <returns>The layer opened for reading.</returns>
      <exception cref="T:System.ArgumentException">Options object has an incorrect type for this dataset.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Index is out of range</exception>
      <exception cref="T:System.ArgumentException">Options object has an incorrect type for this dataset.</exception>
      <exception cref="T:Aspose.Gis.GisException">Error reading the feature from the layer.</exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
    </member>
    <member name="M:Aspose.Gis.Dataset.CreateLayer">
      <summary>
            Creates a new vector layer and opens it for appending.
            </summary>
      <returns>A <see cref="T:Aspose.Gis.VectorLayer" /> opened for writing.</returns>
    </member>
    <member name="M:Aspose.Gis.Dataset.CreateLayer(Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
      <summary>
            Creates a new vector layer and opens it for appending.
            </summary>
      <param name="spatialReferenceSystem">Spatial reference system of the new layer.</param>
      <returns>A <see cref="T:Aspose.Gis.VectorLayer" /> opened for writing.</returns>
    </member>
    <member name="M:Aspose.Gis.Dataset.CreateLayer(Aspose.Gis.DriverOptions,Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
      <summary>
            Creates a new vector layer and opens it for appending.
            </summary>
      <param name="options">Open options.</param>
      <param name="spatialReferenceSystem">Spatial reference system of the new layer.</param>
      <returns>A <see cref="T:Aspose.Gis.VectorLayer" /> opened for writing.</returns>
      <exception cref="T:System.NotSupportedException">Layer creation is not supported for this dataset.</exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
      <exception cref="T:Aspose.Gis.GisException">Error while creating the layer.</exception>
    </member>
    <member name="M:Aspose.Gis.Dataset.CreateLayer(System.String,Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
      <summary>
            Creates a new vector layer with specified name and opens it for appending.
            </summary>
      <param name="name">Name of the layer.</param>
      <param name="spatialReferenceSystem">Spatial reference system of the new layer.</param>
      <returns>A <see cref="T:Aspose.Gis.VectorLayer" /> opened for writing.</returns>
      <exception cref="T:System.NotSupportedException">Layer creation is not supported for this dataset.</exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
      <exception cref="T:Aspose.Gis.GisException">Error while creating the layer.</exception>
    </member>
    <member name="M:Aspose.Gis.Dataset.CreateLayer(System.String,Aspose.Gis.DriverOptions,Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
      <summary>
            Creates a new vector layer with specified name and opens it for appending.
            </summary>
      <param name="name">Name of the layer.</param>
      <param name="options">Open options.</param>
      <param name="spatialReferenceSystem">Spatial reference system of the new layer.</param>
      <returns>A <see cref="T:Aspose.Gis.VectorLayer" /> opened for writing.</returns>
      <exception cref="T:System.NotSupportedException">Layer creation is not supported for this dataset.</exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
      <exception cref="T:Aspose.Gis.GisException">Error while creating the layer.</exception>
    </member>
    <member name="M:Aspose.Gis.Dataset.RemoveLayer(System.String)">
      <summary>
            Removes the vector layer with specified name.
            </summary>
      <param name="name">Name of the layer</param>
      <exception cref="T:System.ArgumentException">No layer with specified name found.</exception>
      <exception cref="T:System.NotSupportedException">Layer removing is not supported.</exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
      <exception cref="T:Aspose.Gis.GisException">Error while removing the layer.</exception>
    </member>
    <member name="M:Aspose.Gis.Dataset.RemoveLayerAt(System.Int32)">
      <summary>
            Removes the vector layer at specified index.
            </summary>
      <param name="index">Index of the layer</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The index is out of range.</exception>
      <exception cref="T:System.NotSupportedException">Layer removing is not supported.</exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
      <exception cref="T:Aspose.Gis.GisException">Error while removing the layer.</exception>
    </member>
    <member name="M:Aspose.Gis.Dataset.Dispose">
      <summary>
            Releases the resources used by the <see cref="T:Aspose.Gis.Dataset" />.
            </summary>
    </member>
    <member name="M:Aspose.Gis.Dataset.Dispose(System.Boolean)">
      <summary>
            Releases the resources used by the <see cref="T:Aspose.Gis.Dataset" />.
            </summary>
      <param name="disposing">
        <see langword="true" /> to release both managed and unmanaged resources; 
            <see langword="false" /> to release only unmanaged resources.
            </param>
    </member>
    <member name="T:Aspose.Gis.Driver">
      <summary>
            A base class for drivers to GIS data.
            </summary>
    </member>
    <member name="T:Aspose.Gis.DriverOptions">
      <summary>
            Options for a <see cref="T:Aspose.Gis.Driver" />.
            </summary>
    </member>
    <member name="P:Aspose.Gis.DriverOptions.ValidateGeometriesOnWrite">
      <summary>
            Determines if geometries should be validated when they are added to the layer.
            If set to <see langword="true" />, <see cref="P:Aspose.Gis.Geometries.Geometry.IsValid" /> is called for each 
            geometry when it's added to the layer, and if validation fails (<see cref="P:Aspose.Gis.Geometries.Geometry.IsValid" /> is <see langword="false" />), <see cref="T:Aspose.Gis.GisException" /> is thrown.
            </summary>
      <remarks>
            This is a creation option - it does not affect opening.
            </remarks>
    </member>
    <member name="P:Aspose.Gis.DriverOptions.XYPrecisionModel">
      <summary>
            A <see cref="T:Aspose.Gis.PrecisionModel" /> that will be applied to X and Y coordinates
            when geometries are added to the <see cref="T:Aspose.Gis.VectorLayer" /> or when they are read from the <see cref="T:Aspose.Gis.VectorLayer" />.
            The default value is <see cref="P:Aspose.Gis.PrecisionModel.Exact" />.
            </summary>
    </member>
    <member name="P:Aspose.Gis.DriverOptions.ZPrecisionModel">
      <summary>
            A <see cref="T:Aspose.Gis.PrecisionModel" /> that will be applied to Z coordinate
            when geometries are added to the <see cref="T:Aspose.Gis.VectorLayer" /> or when they are read from the <see cref="T:Aspose.Gis.VectorLayer" />.
            The default value is <see cref="P:Aspose.Gis.PrecisionModel.Exact" />.
            </summary>
    </member>
    <member name="P:Aspose.Gis.DriverOptions.MPrecisionModel">
      <summary>
            A <see cref="T:Aspose.Gis.PrecisionModel" /> that will be applied to M coordinate
            when geometries are added to the <see cref="T:Aspose.Gis.VectorLayer" /> or when they are read from the <see cref="T:Aspose.Gis.VectorLayer" />.
            The default value is <see cref="P:Aspose.Gis.PrecisionModel.Exact" />.
            </summary>
    </member>
    <member name="P:Aspose.Gis.DriverOptions.LinearizationTolerance">
      <summary>
            A tolerance to use to linearize curve geometries.
            </summary>
      <value>
            The tolerance to pass to <see cref="M:Aspose.Gis.Geometries.Geometry.ToLinearGeometry(System.Double)" /> before adding geometries.
            </value>
      <remarks>
            This is a creation options - it does not affect opening.
            If driver does not support non-linear geometries they are automatically linearized.
            This property specifies an argument to the <see cref="M:Aspose.Gis.Geometries.Geometry.ToLinearGeometry(System.Double)" /> method that is used
            for linearization.
            </remarks>
    </member>
    <member name="M:Aspose.Gis.DriverOptions.#ctor">
      <summary>
            Create new instance.
            </summary>
    </member>
    <member name="T:Aspose.Gis.Drivers">
      <summary>
            Drivers for all supported formats.
            </summary>
    </member>
    <member name="P:Aspose.Gis.Drivers.GeoJson">
      <summary>
            A driver for the GeoJSON format.
            </summary>
    </member>
    <member name="P:Aspose.Gis.Drivers.Kml">
      <summary>
            A driver for the KML format.
            </summary>
    </member>
    <member name="P:Aspose.Gis.Drivers.Shapefile">
      <summary>
            A driver for the Shapefile format.
            </summary>
    </member>
    <member name="P:Aspose.Gis.Drivers.OsmXml">
      <summary>
            A driver for the OSM XML format.
            </summary>
    </member>
    <member name="P:Aspose.Gis.Drivers.Gpx">
      <summary>
            A driver for the GPX format.
            </summary>
    </member>
    <member name="P:Aspose.Gis.Drivers.Gml">
      <summary>
            A driver for the GML format.
            </summary>
    </member>
    <member name="P:Aspose.Gis.Drivers.FileGdb">
      <summary>
            A driver for the ESRI File Geodatabase format.
            </summary>
    </member>
    <member name="P:Aspose.Gis.Drivers.TopoJson">
      <summary>
            A driver for the TopoJSON format.
            </summary>
    </member>
    <member name="P:Aspose.Gis.Drivers.MapInfoInterchange">
      <summary>
            A driver for the MapInfo Interchange Format.
            </summary>
    </member>
    <member name="P:Aspose.Gis.Drivers.MapInfoTab">
      <summary>
            A driver for the MapInfo Tab format.
            </summary>
    </member>
    <member name="P:Aspose.Gis.Drivers.PostGis">
      <summary>
            A driver for the PostGIS database.
            </summary>
    </member>
    <member name="P:Aspose.Gis.Drivers.SqlServer">
      <summary>
            A driver for the SQL Server database.
            </summary>
    </member>
    <member name="T:Aspose.Gis.Extent">
      <summary>
            A two-dimensional spatial bounding box.
            </summary>
    </member>
    <member name="M:Aspose.Gis.Extent.#ctor">
      <summary>
            Creates new instance.
            </summary>
    </member>
    <member name="M:Aspose.Gis.Extent.#ctor(Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
      <summary>
            Creates new instance.
            </summary>
      <param name="srs">
        <see cref="T:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem" /> associated with this extent.
            Can be <see langword="null" /> to indicate that SRS is unknown.
            </param>
    </member>
    <member name="M:Aspose.Gis.Extent.#ctor(System.Double,System.Double,System.Double,System.Double,Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
      <summary>
            Creates new instance.
            </summary>
      <param name="xMin">Minimum X value.</param>
      <param name="yMin">Minimum Y value.</param>
      <param name="xMax">Maximum X value.</param>
      <param name="yMax">Maximum Y value.</param>
      <param name="srs">
        <see cref="T:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem" /> associated with this extent.
            Can be <see langword="null" /> to indicate that SRS is unknown.
            </param>
    </member>
    <member name="P:Aspose.Gis.Extent.XMin">
      <summary> Minimum value of the X coordinate. </summary>
    </member>
    <member name="P:Aspose.Gis.Extent.XMax">
      <summary> Maximum value of the X coordinate. </summary>
    </member>
    <member name="P:Aspose.Gis.Extent.YMin">
      <summary> Minimum value of the Y coordinate. </summary>
    </member>
    <member name="P:Aspose.Gis.Extent.YMax">
      <summary> Maximum value of the Y coordinate. </summary>
    </member>
    <member name="P:Aspose.Gis.Extent.SpatialReferenceSystem">
      <summary>
        <see cref="T:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem" /> associated with this extent.
            Can be <see langword="null" /> if <see cref="P:Aspose.Gis.Extent.SpatialReferenceSystem" /> is unknown.
            Use <see cref="M:Aspose.Gis.Extent.GetTransformed(Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)" />
            in order to transform extent between difference spatial reference systems.
            </summary>
    </member>
    <member name="P:Aspose.Gis.Extent.Center">
      <summary> Center of the extent. </summary>
    </member>
    <member name="P:Aspose.Gis.Extent.Width">
      <summary> Width of the extent. </summary>
    </member>
    <member name="P:Aspose.Gis.Extent.Height">
      <summary> Height of the extent. </summary>
    </member>
    <member name="P:Aspose.Gis.Extent.IsValid">
      <summary>
            Determines whether this <see cref="T:Aspose.Gis.Extent" /> is valid.
            </summary>
      <remarks>
            A valid extent has non negative <see cref="P:Aspose.Gis.Extent.Width" /> and <see cref="P:Aspose.Gis.Extent.Height" />. Also,
            all of its values are not <c>NaN</c> and finite.
            </remarks>
    </member>
    <member name="M:Aspose.Gis.Extent.GetTransformed(Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
      <summary>
            Returns new extent in specified <see cref="T:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem" /> that contains this extent.
            </summary>
      <param name="targetSrs">
        <see cref="T:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem" /> to transform to.</param>
      <exception cref="T:System.ArgumentNullException"> Argument is <see langword="null" />. </exception>
      <exception cref="T:System.NotSupportedException"> Transformation to the provided SRS is not supported. </exception>
      <exception cref="T:Aspose.Gis.SpatialReferencing.TransformationException"> Transformation failed. </exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:Aspose.Gis.Extent.SpatialReferenceSystem" /> of this extent is <see langword="null" />.
            </exception>
      <returns>
            The result of transformation this extent to the specified SRS.
            </returns>
    </member>
    <member name="M:Aspose.Gis.Extent.Normalize">
      <summary>
            Swaps <see cref="P:Aspose.Gis.Extent.XMin" /> with <see cref="P:Aspose.Gis.Extent.XMax" /> if <see cref="P:Aspose.Gis.Extent.Width" /> is negative and
            <see cref="P:Aspose.Gis.Extent.YMin" /> with <see cref="P:Aspose.Gis.Extent.YMax" /> if <see cref="P:Aspose.Gis.Extent.Height" /> is negative.
            </summary>
    </member>
    <member name="M:Aspose.Gis.Extent.Clone">
      <summary>
            Clones this instance.
            </summary>
      <returns>Clone of this instance.</returns>
    </member>
    <member name="M:Aspose.Gis.Extent.ToPolygon">
      <summary>
            Converts this extent to a rectangular polygon that represents it.
            </summary>
      <returns>
            A rectangular <see cref="T:Aspose.Gis.Geometries.Polygon" /> that represents this extent. For invalid extents
            an empty polygon is returned.
            </returns>
    </member>
    <member name="M:Aspose.Gis.Extent.Grow(Aspose.Gis.Extent)">
      <summary>
            Grows this extent so it includes the argument.
            </summary>
      <param name="extent">Other extent.</param>
      <exception cref="T:System.ArgumentNullException">Argument is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="P:Aspose.Gis.Extent.SpatialReferenceSystem" /> of this extent and the argument are both not <see langword="null" /> and not equal to each other.
            </exception>
      <remarks>
            If <see cref="P:Aspose.Gis.Extent.SpatialReferenceSystem" /> of this SRS is <see langword="null" /> then it is updated with SRS of the argument.
            </remarks>
    </member>
    <member name="M:Aspose.Gis.Extent.Grow(System.Double,System.Double)">
      <summary> Grows this extent so it includes the specified point. </summary>
      <param name="x">X coordinate to include.</param>
      <param name="y">Y coordinate to include.</param>
    </member>
    <member name="M:Aspose.Gis.Extent.GrowX(System.Double)">
      <summary> Grows this extent along the X axis so it includes the specified value. </summary>
      <param name="value">Value to include.</param>
    </member>
    <member name="M:Aspose.Gis.Extent.GrowY(System.Double)">
      <summary> Grows this extent along the Y axis so it includes the specified value. </summary>
      <param name="value">Value to include.</param>
    </member>
    <member name="M:Aspose.Gis.Extent.Contains(System.Double,System.Double)">
      <summary>
            Determines whether this extent contains a coordinate defined by the arguments.
            </summary>
      <param name="x">X of the coordinate.</param>
      <param name="y">Y of the coordinate.</param>
      <returns>Value, indicating whether coordinate is inside bounding box.</returns>
      <remarks>
            Coordinates located on the bounds of this <see cref="T:Aspose.Gis.Extent" /> are
            considered to be contained by this <see cref="T:Aspose.Gis.Extent" />.
            </remarks>
    </member>
    <member name="M:Aspose.Gis.Extent.Contains(Aspose.Gis.Extent)">
      <summary>
            Determines whether this extent contains the argument.
            </summary>
      <param name="extent">Another extent.</param>
      <returns>Value, indicating whether this extent contains the argument.</returns>
      <remarks>
            Coordinates located on the bounds of this <see cref="T:Aspose.Gis.Extent" /> are
            considered to be contained by this <see cref="T:Aspose.Gis.Extent" />. For this reason, equal extents are considered
            to contain each other.
            </remarks>
      <exception cref="T:System.ArgumentNullException">Argument is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="P:Aspose.Gis.Extent.SpatialReferenceSystem" /> of this extent and the argument are both not <see langword="null" /> and not equal to each other.
            </exception>
    </member>
    <member name="M:Aspose.Gis.Extent.Contains(Aspose.Gis.Geometries.IGeometry)">
      <summary>
             Determines whether this extent contains the argument.
             </summary>
      <param name="geometry">A geometry to test for containment.</param>
      <returns>Value, indicating whether this extent contains the argument.</returns>
      <remarks>
             Coordinates located on the bounds of this <see cref="T:Aspose.Gis.Extent" /> are
             considered to be contained by this <see cref="T:Aspose.Gis.Extent" />.
            </remarks>
      <exception cref="T:System.ArgumentNullException">Argument is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="P:Aspose.Gis.Extent.SpatialReferenceSystem" /> of this extent and the argument are both not <see langword="null" /> and not equal to each other.
             </exception>
    </member>
    <member name="M:Aspose.Gis.Extent.Intersects(Aspose.Gis.Extent)">
      <summary>
            Determines whether this extent intersects with the argument.
            </summary>
      <param name="extent">Another extent.</param>
      <returns>Value, indicating whether this extent intersects with the argument.</returns>
      <exception cref="T:System.ArgumentNullException">Argument is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="P:Aspose.Gis.Extent.SpatialReferenceSystem" /> of this extent and the argument are both not <see langword="null" /> and not equal to each other.
            </exception>
    </member>
    <member name="M:Aspose.Gis.Extent.Intersects(Aspose.Gis.Geometries.IGeometry)">
      <summary>
            Determines whether this extent intersects with the argument.
            </summary>
      <param name="geometry">A geometry to test for intersection</param>
      <returns>Value, indicating whether this extent intersects with the argument.</returns>
      <exception cref="T:System.ArgumentNullException">Argument is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="P:Aspose.Gis.Extent.SpatialReferenceSystem" /> of this extent and the argument are both not <see langword="null" /> and not equal to each other.
            </exception>
    </member>
    <member name="M:Aspose.Gis.Extent.ToString">
      <summary>Returns a string that represents the current object.</summary>
      <returns>A string that represents the current object.</returns>
    </member>
    <member name="M:Aspose.Gis.Extent.Equals(Aspose.Gis.Extent)">
      <summary>Indicates whether the current object is equal to another object of the same type.</summary>
      <param name="other">An object to compare with this object.</param>
      <returns>
        <see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:Aspose.Gis.Extent.Equals(System.Object)">
      <summary>Determines whether the specified object is equal to the current object.</summary>
      <param name="obj">The object to compare with the current object. </param>
      <returns>
        <see langword="true" /> if the specified object  is equal to the current object; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:Aspose.Gis.Extent.GetHashCode">
      <summary>Serves as the default hash function. </summary>
      <returns>A hash code for the current object.</returns>
    </member>
    <member name="M:Aspose.Gis.Extent.op_Equality(Aspose.Gis.Extent,Aspose.Gis.Extent)">
      <summary>
            Implements the '==' operator.
            </summary>
      <param name="left">First argument.</param>
      <param name="right">Second argument.</param>
      <returns>Value indicating whether arguments are equal.</returns>
    </member>
    <member name="M:Aspose.Gis.Extent.op_Inequality(Aspose.Gis.Extent,Aspose.Gis.Extent)">
      <summary>
            Implements the '!=' operator.
            </summary>
      <param name="left">First argument.</param>
      <param name="right">Second argument.</param>
      <returns>Value indicating whether arguments are not equal.</returns>
    </member>
    <member name="T:Aspose.Gis.Feature">
      <summary>
            A geographic feature composed of a geometry and user-defined attributes.
            </summary>
    </member>
    <member name="P:Aspose.Gis.Feature.Geometry">
      <summary>
            Gets or sets geometry of the feature.
            Cannot be <see langword="null" />, use <see cref="P:Aspose.Gis.Geometries.Geometry.Null" /> to indicate missing geometry.
            </summary>
      <exception cref="T:System.ArgumentNullException" accessor="set">The value is <see langword="null" />.</exception>
    </member>
    <member name="M:Aspose.Gis.Feature.GetValue``1(System.String)">
      <summary>
            Gets the value of an attribute.
            </summary>
      <typeparam name="T">Desired type for the value.</typeparam>
      <param name="attributeName">Name of the attribute.</param>
      <returns>Value of the attribute.</returns>
      <remarks>
            This method converts the value automatically to the type requested in the generic type parameter.
            <br />
            If the layer does not require its features to have values for all attributes defined for the layer,
            this method may fail with <see cref="T:System.InvalidOperationException" /> when a missing value is requested.
            When working with such layers, consider using <see cref="M:Aspose.Gis.Feature.GetValueOrDefault``1(System.String)" />.
            </remarks>
      <exception cref="T:System.ArgumentNullException">The attribute name is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">The attribute with this name does not exist in this layer.</exception>
      <exception cref="T:System.InvalidOperationException">The attribute is not locked.</exception>
      <exception cref="T:System.InvalidOperationException">The value of this attribute is not set for this feature.</exception>
      <exception cref="T:System.InvalidCastException">The requested type does not implement <see cref="T:System.IConvertible" />.</exception>
      <exception cref="T:System.InvalidCastException">Value of the attribute is <see langword="null" />, but the requested type is a value type.</exception>
      <exception cref="T:System.FormatException">Conversion failed because the value is in incorrect format.</exception>
      <exception cref="T:System.OverflowException">Conversion failed because of overflow.</exception>
    </member>
    <member name="M:Aspose.Gis.Feature.GetValueOrDefault``1(System.String)">
      <summary>
            Gets the value of an attribute, or <see cref="P:Aspose.Gis.FeatureAttribute.DefaultValue" /> if the value is unset or <c>null</c>.
            </summary>
      <typeparam name="T">Desired type for the value.</typeparam>
      <param name="attributeName">Name of the attribute.</param>
      <returns>Value of the attribute.</returns>
      <remarks>
            This method converts the value automatically to the type requested in the generic type parameter.
            </remarks>
      <exception cref="T:System.ArgumentNullException">The attribute name is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">The attribute with this name does not exist in this layer.</exception>
      <exception cref="T:System.InvalidOperationException">The attribute is not locked.</exception>
      <exception cref="T:System.InvalidOperationException">The value of this attribute is not set for this feature.</exception>
      <exception cref="T:System.InvalidCastException">The requested type does not implement <see cref="T:System.IConvertible" />.</exception>
      <exception cref="T:System.InvalidCastException">Value of the attribute is <see langword="null" />, but the requested type is a value type.</exception>
      <exception cref="T:System.FormatException">Conversion failed because the value is in incorrect format.</exception>
      <exception cref="T:System.OverflowException">Conversion failed because of overflow.</exception>
    </member>
    <member name="M:Aspose.Gis.Feature.GetValueOrDefault``1(System.String,System.Object)">
      <summary>
            Gets the value of an attribute, or <see cref="P:Aspose.Gis.FeatureAttribute.DefaultValue" /> if the value is unset or <c>null</c>.
            </summary>
      <typeparam name="T">Desired type for the value.</typeparam>
      <param name="attributeName">Name of the attribute.</param>
      <param name="defaultValue">The value to return if the attribute value is missing.</param>
      <returns>Value of the attribute.</returns>
      <remarks>
            This method converts the value automatically to the type requested in the generic type parameter.
            </remarks>
      <exception cref="T:System.ArgumentNullException">The attribute name is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">The attribute with this name does not exist in this layer.</exception>
      <exception cref="T:System.InvalidOperationException">The attribute is not locked.</exception>
      <exception cref="T:System.InvalidOperationException">The value of this attribute is not set for this feature.</exception>
      <exception cref="T:System.InvalidCastException">The requested type does not implement <see cref="T:System.IConvertible" />.</exception>
      <exception cref="T:System.InvalidCastException">Value of the attribute is <see langword="null" />, but the requested type is a value type.</exception>
      <exception cref="T:System.FormatException">Conversion failed because the value is in incorrect format.</exception>
      <exception cref="T:System.OverflowException">Conversion failed because of overflow.</exception>
    </member>
    <member name="M:Aspose.Gis.Feature.SetValue``1(System.String,``0)">
      <summary>
            Sets a new value of an attribute.
            </summary>
      <typeparam name="T">The type of the value.</typeparam>
      <param name="attributeName">The name of the attribute.</param>
      <param name="value">The value of the attribute.</param>
      <remarks>
            This method converts the value automatically to the type of the attribute.
            </remarks>
      <exception cref="T:System.ArgumentNullException">The attribute name is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">The attribute with this name does not exist in this layer.</exception>
      <exception cref="T:System.InvalidOperationException">The attribute is not locked.</exception>
      <exception cref="T:System.InvalidCastException">The type of the value does not implement <see cref="T:System.IConvertible" />.</exception>
      <exception cref="T:System.FormatException">Conversion failed because the value is in incorrect format.</exception>
      <exception cref="T:System.OverflowException">Conversion failed because of overflow.</exception>
    </member>
    <member name="M:Aspose.Gis.Feature.IsValueNull(System.String)">
      <summary>
            Determines whether the specified attribute has been explicitly set to <c>null</c> value.
            </summary>
      <param name="attributeName">Name of the attribute.</param>
      <returns>
        <see langword="true" /> if the attribute value is <c>null</c>; otherwise, <see langword="false" />.
            </returns>
      <exception cref="T:System.InvalidOperationException">The attribute is not locked.</exception>
      <exception cref="T:System.ArgumentException">The attribute with this name does not exist in this layer.</exception>
      <exception cref="T:System.ArgumentNullException">The attribute name is <c>null</c>.</exception>
    </member>
    <member name="M:Aspose.Gis.Feature.SetValueNull(System.String)">
      <summary>
            Sets value of the attribute to <c>null</c>.
            </summary>
      <param name="attributeName">The name of the attribute.</param>
      <exception cref="T:System.InvalidOperationException">The attribute is not locked.</exception>
      <exception cref="T:System.InvalidOperationException">Value of this attribute cannot be Null.</exception>
      <exception cref="T:System.ArgumentException">The attribute with this name does not exist in this layer.</exception>
      <exception cref="T:System.ArgumentNullException">The attribute name is <see langword="null" />.</exception>
    </member>
    <member name="M:Aspose.Gis.Feature.UnsetValue(System.String)">
      <summary>
            Removes the attribute value from this feature.
            </summary>
      <param name="attributeName">Name of the attribute.</param>
      <exception cref="T:System.InvalidOperationException">The attribute is not locked.</exception>
      <exception cref="T:System.InvalidOperationException">Value of this attribute cannot be unset.</exception>
      <exception cref="T:System.ArgumentException">The attribute with this name does not exist in this layer.</exception>
      <exception cref="T:System.ArgumentNullException">The attribute name is <see langword="null" />.</exception>
    </member>
    <member name="M:Aspose.Gis.Feature.IsValueSet(System.String)">
      <summary>
            Checks if the attribute value is set in this feature.
            </summary>
      <param name="attributeName">Name of the attribute.</param>
      <returns>
        <see langword="true" /> if value for the specified attribute is set; otherwise, <see langword="false" />.
            </returns>
      <exception cref="T:System.InvalidOperationException">The attribute is not locked.</exception>
      <exception cref="T:System.ArgumentException">The attribute with this name does not exist in this layer.</exception>
      <exception cref="T:System.ArgumentNullException">The attribute name is <see langword="null" />.</exception>
    </member>
    <member name="M:Aspose.Gis.Feature.CopyValues(Aspose.Gis.Feature)">
      <summary>
            Copies values of attributes from another feature.
            </summary>
      <param name="inputFeature">The feature to copy values from.</param>
      <remarks>
            This method only copies attributes with matching names.
            </remarks>
      <exception cref="T:System.ArgumentNullException">The argument is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">The attribute with this name does not exist in this layer.</exception>
      <exception cref="T:System.InvalidOperationException">The attribute is not locked.</exception>
      <exception cref="T:System.InvalidOperationException">Input value is null an the attribute in this feature cannot be null.</exception>
      <exception cref="T:Aspose.Gis.GisException">An attribute has same name but different data types in the features.</exception>
    </member>
    <member name="T:Aspose.Gis.FeatureAttribute">
      <summary>
            An attribute of a <see cref="T:Aspose.Gis.Feature" />.
            </summary>
    </member>
    <member name="M:Aspose.Gis.FeatureAttribute.#ctor(System.String,Aspose.Gis.AttributeDataType)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.FeatureAttribute" /> class.
            </summary>
      <param name="name">The name of the attribute.</param>
      <param name="dataType">The data type of the attribute.</param>
    </member>
    <member name="M:Aspose.Gis.FeatureAttribute.#ctor(System.String,Aspose.Gis.AttributeDataType,System.Boolean)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.FeatureAttribute" /> class.
            </summary>
      <param name="name">The name of the attribute.</param>
      <param name="dataType">The data type of the attribute.</param>
      <param name="canBeNull">
        <see langword="true" /> if this instance can be null; otherwise, <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException">The attribute name is <see langword="null" />.</exception>
    </member>
    <member name="P:Aspose.Gis.FeatureAttribute.Name">
      <summary>
            Gets the name of the attribute.
            </summary>
      <value>
            The name of the attribute.
            </value>
      <exception cref="T:System.ArgumentNullException" accessor="set">The attribute name is <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" accessor="set">The attribute is locked.</exception>
    </member>
    <member name="P:Aspose.Gis.FeatureAttribute.DataType">
      <summary>
            Gets the data type of the attribute.
            </summary>
      <value>
            The data type of the attribute.
            </value>
      <exception cref="T:System.InvalidOperationException" accessor="set">The attribute is locked.</exception>
    </member>
    <member name="P:Aspose.Gis.FeatureAttribute.CanBeNull">
      <summary>
            Gets a value indicating whether this instance can be null.
            </summary>
      <value>
        <see langword="true" /> if this instance can be null; otherwise, <see langword="false" />.
            </value>
      <exception cref="T:System.InvalidOperationException" accessor="set">The attribute is locked.</exception>
    </member>
    <member name="P:Aspose.Gis.FeatureAttribute.CanBeUnset">
      <summary>
            Gets or sets a value indicating whether value for this attribute can be omitted.
            </summary>
      <value>
        <see langword="true" /> if this instance can be unset; otherwise, <see langword="false" />.
            </value>
      <exception cref="T:System.InvalidOperationException" accessor="set">The attribute is locked.</exception>
    </member>
    <member name="P:Aspose.Gis.FeatureAttribute.DefaultValue">
      <summary>
            Gets or sets a value for the attribute, that indicates missing data.
            </summary>
      <exception cref="T:System.InvalidOperationException" accessor="set">The attribute is locked.</exception>
      <exception cref="T:System.InvalidOperationException" accessor="set">The attribute does not allow <c>null</c> values.</exception>
      <remarks>
            This is the value representing a missing piece of information, when an attribute does not allow the <c>null</c> value.
            For attributes that do allow <c>null</c> values (<see cref="P:Aspose.Gis.FeatureAttribute.CanBeNull" /> == <c>true</c>), <see cref="P:Aspose.Gis.FeatureAttribute.DefaultValue" /> is <c>null</c> unless explicitly changed.
            </remarks>
    </member>
    <member name="P:Aspose.Gis.FeatureAttribute.HasCustomDefaultValue">
      <summary>
            Gets a value indicating whether the pre-defined default value for this attribute was overridden with a custom value.
            </summary>
      <value>
        <c>true</c> if this instance has a custom default value; otherwise, <c>false</c>.
            </value>
      <remarks>
            Unless <see cref="M:Aspose.Gis.FeatureAttribute.set_DefaultValue(System.Object)" /> was called, value of this property is <c>false</c>.
            </remarks>
    </member>
    <member name="P:Aspose.Gis.FeatureAttribute.Width">
      <summary>
            Gets or sets maximum allowed width of character representation of the attribute.
            </summary>
      <exception cref="T:System.InvalidOperationException" accessor="set">The attribute is locked.</exception>
    </member>
    <member name="P:Aspose.Gis.FeatureAttribute.Precision">
      <summary>
            Gets or sets maximum number of decimal digits to store.
            </summary>
      <exception cref="T:System.InvalidOperationException" accessor="set">The attribute is locked.</exception>
    </member>
    <member name="P:Aspose.Gis.FeatureAttribute.IsLocked">
      <summary>
            Gets a value indicating whether this attribute is locked.
            </summary>
      <value>
        <see langword="true" /> if this attribute is locked; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="M:Aspose.Gis.FeatureAttribute.Lock">
      <summary>
            Locks this attribute.
            </summary>
    </member>
    <member name="T:Aspose.Gis.FeatureAttributeCollection">
      <summary>
            A <see cref="T:Aspose.Gis.FeatureAttributeCollection" /> defines what attributes are available for a <see cref="T:Aspose.Gis.Feature" />.
            </summary>
    </member>
    <member name="P:Aspose.Gis.FeatureAttributeCollection.Count">
      <summary>
            Gets the number of attributes in a <see cref="T:Aspose.Gis.Feature" />.
            </summary>
      <value>
            The number of attributes in a <see cref="T:Aspose.Gis.Feature" />.
            </value>
    </member>
    <member name="P:Aspose.Gis.FeatureAttributeCollection.IsLocked">
      <summary>
            Gets a value indicating whether this attribute collection is locked.
            </summary>
      <value>
        <see langword="true" /> if this attribute collection is locked; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:Aspose.Gis.FeatureAttributeCollection.Item(System.Int32)">
      <summary>
            Gets or sets the <see cref="T:Aspose.Gis.FeatureAttribute" /> at the specified index.
            </summary>
      <param name="index">The zero-based index of the attribute to get or set.</param>
      <returns>The attribute at the specified index.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The index is out of range.</exception>
      <exception cref="T:System.InvalidOperationException">Attempt to modify a locked collection.</exception>
    </member>
    <member name="P:Aspose.Gis.FeatureAttributeCollection.Item(System.String)">
      <summary>
            Gets or sets the <see cref="T:Aspose.Gis.FeatureAttribute" /> with a specified name.
            </summary>
      <param name="name">Name of the attributes.</param>
      <returns>The attribute with the specified name, or <see langword="null" /> if it's not found.</returns>
      <exception cref="T:System.ArgumentNullException" accessor="get">The attribute name is <see langword="null" />.</exception>
    </member>
    <member name="M:Aspose.Gis.FeatureAttributeCollection.Lock">
      <summary>
            Locks this attribute collection to prevent further modifications.
            </summary>
    </member>
    <member name="M:Aspose.Gis.FeatureAttributeCollection.Contains(System.String)">
      <summary>
            Determines whether the attribute collection contains an attribute with the specified name.
            </summary>
      <param name="name">Name of the attribute.</param>
      <returns>
        <see langword="true" /> if the attribute collection contains and attribute with the specified name; otherwise, <see langword="false" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">The argument is <see langword="null" />.</exception>
    </member>
    <member name="M:Aspose.Gis.FeatureAttributeCollection.IndexOf(System.String)">
      <summary>
            Searches for the attribute and returns the its zero-based index.
            </summary>
      <param name="name">Name of the attribute.</param>
      <returns>The zero-based index of the attribute within the collection, if found; otherwise, –1.</returns>
      <exception cref="T:System.ArgumentNullException">The attribute name is <see langword="null" />.</exception>
    </member>
    <member name="M:Aspose.Gis.FeatureAttributeCollection.Add(Aspose.Gis.FeatureAttribute)">
      <summary>
            Adds an attribute to the collection.
            </summary>
      <param name="attribute">The attribute to add.</param>
      <exception cref="T:System.ArgumentNullException">The attribute is <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">The collection is locked.</exception>
      <exception cref="T:System.ArgumentException">An attribute with the same name already exists in the collection.</exception>
    </member>
    <member name="M:Aspose.Gis.FeatureAttributeCollection.Remove(System.String)">
      <summary>
            Removes the attribute from the collection.
            </summary>
      <param name="name">Name of the attribute.</param>
      <exception cref="T:System.ArgumentNullException">The argument is <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">The collection is locked.</exception>
    </member>
    <member name="M:Aspose.Gis.FeatureAttributeCollection.Remove(System.Int32)">
      <summary>
            Removes the attribute from the collection.
            </summary>
      <param name="index">Index of the attribute.</param>
      <exception cref="T:System.InvalidOperationException">The collection is locked.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The index is out of range.</exception>
    </member>
    <member name="M:Aspose.Gis.FeatureAttributeCollection.GetEnumerator">
      <summary>Returns an enumerator that iterates through the collection.</summary>
      <returns>An enumerator that can be used to iterate through the collection.</returns>
    </member>
    <member name="T:Aspose.Gis.FeaturesSequence">
      <summary>
        <see cref="T:Aspose.Gis.FeaturesSequence" /> represents a set of vector features.
            </summary>
    </member>
    <member name="M:Aspose.Gis.FeaturesSequence.GetEnumerator">
      <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
      <returns>
            An enumerator that can be used to iterate through the collection.
            </returns>
      <exception cref="T:System.InvalidOperationException"> is thrown if the operation is not supported by the layer.</exception>
    </member>
    <member name="P:Aspose.Gis.FeaturesSequence.SpatialReferenceSystem">
      <summary> Gets spatial reference system of this features sequence. </summary>
      <value> Spatial reference system. Can be <see langword="null" /> if it is unknown. </value>
    </member>
    <member name="P:Aspose.Gis.FeaturesSequence.Attributes">
      <summary> Gets the collection of custom attributes for features in this <see cref="T:Aspose.Gis.VectorLayer" />. </summary>
      <value> The collection of attributes. </value>
    </member>
    <member name="M:Aspose.Gis.FeaturesSequence.GetExtent">
      <summary> Gets a spatial extent of this layer. </summary>
      <returns>A spatial extent of this layer.</returns>
      <exception cref="T:System.InvalidOperationException"> is thrown if layer is opened write-only.</exception>
    </member>
    <member name="M:Aspose.Gis.FeaturesSequence.WhereIntersects(Aspose.Gis.FeaturesSequence)">
      <summary>Filters features based on the union of all geometries in other features sequence.</summary>
      <param name="sequence">Other features sequence.</param>
      <returns>Features that intersect with the union of all geometries in other features sequence.</returns>
    </member>
    <member name="M:Aspose.Gis.FeaturesSequence.WhereIntersects(Aspose.Gis.Geometries.IGeometry)">
      <summary>Filters features based on the provided geometry.</summary>
      <param name="geometry">Filter geometry.</param>
      <returns>Features that intersect with the provided geometry.</returns>
    </member>
    <member name="M:Aspose.Gis.FeaturesSequence.WhereIntersects(Aspose.Gis.Extent)">
      <summary>Filters features based on the extent.</summary>
      <param name="extent">Filter extent.</param>
      <returns>Features that intersect with the provided geometry.</returns>
    </member>
    <member name="M:Aspose.Gis.FeaturesSequence.WhereGreater``1(System.String,``0)">
      <summary>Selects features with attribute value greater than the provided value.</summary>
      <param name="attributeName">Attribute to filter by.</param>
      <param name="value">Value to compare against.</param>
      <typeparam name="T">Type of the value to compare against.</typeparam>
      <returns>Features with attribute value greater than the provided value.</returns>
      <exception cref="T:System.ArgumentException">No attribute with such name exists in this features sequence.</exception>
    </member>
    <member name="M:Aspose.Gis.FeaturesSequence.WhereGreaterOrEqual``1(System.String,``0)">
      <summary>Selects features with attribute value greater or equal to the provided value.</summary>
      <param name="attributeName">Attribute to filter by.</param>
      <param name="value">Value to compare against.</param>
      <typeparam name="T">Type of the value to compare against.</typeparam>
      <returns>Features with attribute value greater or equal to the provided value.</returns>
      <exception cref="T:System.ArgumentException">No attribute with such name exists in this features sequence.</exception>
    </member>
    <member name="M:Aspose.Gis.FeaturesSequence.WhereSmaller``1(System.String,``0)">
      <summary>Selects features with attribute value smaller than the provided value.</summary>
      <param name="attributeName">Attribute to filter by.</param>
      <param name="value">Value to compare against.</param>
      <typeparam name="T">Type of the value to compare against.</typeparam>
      <returns>Features with attribute value smaller than the provided value.</returns>
      <exception cref="T:System.ArgumentException">No attribute with such name exists in this features sequence.</exception>
    </member>
    <member name="M:Aspose.Gis.FeaturesSequence.WhereSmallerOrEqual``1(System.String,``0)">
      <summary>Selects features with attribute value smaller or equal to the provided value.</summary>
      <param name="attributeName">Attribute to filter by.</param>
      <param name="value">Value to compare against.</param>
      <typeparam name="T">Type of the value to compare against.</typeparam>
      <returns>Features with attribute value smaller or equal to the provided value.</returns>
      <exception cref="T:System.ArgumentException">No attribute with such name exists in this features sequence.</exception>
    </member>
    <member name="M:Aspose.Gis.FeaturesSequence.WhereEqual``1(System.String,``0)">
      <summary>Selects features with attribute value equal to the provided value.</summary>
      <param name="attributeName">Attribute to filter by.</param>
      <param name="value">Value to compare against.</param>
      <typeparam name="T">Type of the value to compare against.</typeparam>
      <returns>Features with attribute value equal to the provided value.</returns>
      <exception cref="T:System.ArgumentException">No attribute with such name exists in this features sequence.</exception>
    </member>
    <member name="M:Aspose.Gis.FeaturesSequence.WhereNotEqual``1(System.String,``0)">
      <summary>Selects features with attribute value not equal to the provided value.</summary>
      <param name="attributeName">Attribute to filter by.</param>
      <param name="value">Value to compare against.</param>
      <typeparam name="T">Type of the value to compare against.</typeparam>
      <returns>Features with attribute value not equal to the provided value.</returns>
      <exception cref="T:System.ArgumentException">No attribute with such name exists in this features sequence.</exception>
    </member>
    <member name="M:Aspose.Gis.FeaturesSequence.WhereNull(System.String)">
      <summary>Selects features with attribute equal to null.</summary>
      <param name="attributeName">Attribute to filter by.</param>
      <returns>Features with attribute value equal to null.</returns>
      <exception cref="T:System.ArgumentException">No attribute with such name exists in this features sequence.</exception>
    </member>
    <member name="M:Aspose.Gis.FeaturesSequence.WhereNotNull(System.String)">
      <summary>Selects features with attribute not equal to null.</summary>
      <param name="attributeName">Attribute to filter by.</param>
      <returns>Features with attribute value not equal to null.</returns>
      <exception cref="T:System.ArgumentException">No attribute with such name exists in this features sequence.</exception>
    </member>
    <member name="M:Aspose.Gis.FeaturesSequence.WhereSet(System.String)">
      <summary>Selects features with attribute set.</summary>
      <param name="attributeName">Attribute to filter by.</param>
      <returns>Features with set attribute value.</returns>
      <exception cref="T:System.ArgumentException">No attribute with such name exists in this features sequence.</exception>
    </member>
    <member name="M:Aspose.Gis.FeaturesSequence.WhereUnset(System.String)">
      <summary>Selects features where specified attribute is not set.</summary>
      <param name="attributeName">Attribute to filter by.</param>
      <returns>Features with unset attribute value.</returns>
    </member>
    <member name="M:Aspose.Gis.FeaturesSequence.SaveTo(System.String,Aspose.Gis.FileDriver)">
      <summary> Saves features sequence to layer. </summary>
      <param name="destinationPath">Path to the output layer.</param>
      <param name="destinationDriver">The format driver for the output layer.</param>
      <exception cref="T:System.ArgumentNullException">Any argument is <see langword="null" />.</exception>
      <exception cref="T:Aspose.Gis.GisException">Error reading or writing the feature to/from the file.</exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
      <exception cref="T:Aspose.Gis.SpatialReferencing.TransformationException">
            Transformation of features geometry from source spatial reference system to target spatial reference system failed.
            </exception>
    </member>
    <member name="M:Aspose.Gis.FeaturesSequence.SaveTo(Aspose.Gis.AbstractPath,Aspose.Gis.FileDriver)">
      <summary> Saves features sequence to layer. </summary>
      <param name="destinationPath">Path to the output layer.</param>
      <param name="destinationDriver">The format driver for the output layer.</param>
      <exception cref="T:Aspose.Gis.GisException">Error reading or writing the feature to/from the file.</exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
      <exception cref="T:Aspose.Gis.SpatialReferencing.TransformationException">
            Transformation of features geometry from source spatial reference system to target spatial reference system failed.
            </exception>
    </member>
    <member name="M:Aspose.Gis.FeaturesSequence.SaveTo(System.String,Aspose.Gis.FileDriver,Aspose.Gis.SavingOptions)">
      <summary> Saves features sequence to layer. </summary>
      <param name="destinationPath">Path to the output layer.</param>
      <param name="destinationDriver">The format driver for the output layer.</param>
      <param name="options">Options for the saving procedure.</param>
      <exception cref="T:Aspose.Gis.GisException">Error reading or writing the feature to/from the file.</exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
      <exception cref="T:Aspose.Gis.SpatialReferencing.TransformationException">
            Transformation of features geometry from source spatial reference system to target spatial reference system failed.
            </exception>
      <exception cref="T:System.NotSupportedException">
            Spatial reference system specified in <paramref name="options" /> is not supported by <paramref name="destinationDriver" />.
            </exception>
    </member>
    <member name="M:Aspose.Gis.FeaturesSequence.SaveTo(Aspose.Gis.AbstractPath,Aspose.Gis.FileDriver,Aspose.Gis.SavingOptions)">
      <summary> Saves features sequence to layer. </summary>
      <param name="destinationPath">Path to the output layer.</param>
      <param name="destinationDriver">The format driver for the output layer.</param>
      <param name="options">Options for the saving procedure.</param>
      <exception cref="T:Aspose.Gis.GisException">Error reading or writing the feature to/from the file.</exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
      <exception cref="T:Aspose.Gis.SpatialReferencing.TransformationException">
            Transformation of features geometry from source spatial reference system to target spatial reference system failed.
            </exception>
      <exception cref="T:System.NotSupportedException">
            Spatial reference system specified in <paramref name="options" /> is not supported by <paramref name="destinationDriver" />.
            </exception>
    </member>
    <member name="T:Aspose.Gis.FileDriver">
      <summary>
            A driver for a specific file based format.
            </summary>
    </member>
    <member name="M:Aspose.Gis.FileDriver.SupportsSpatialReferenceSystem(Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
      <summary>
            Determines, whether specified spatial reference system is supported by the driver.
            </summary>
      <param name="spatialReferenceSystem">Spatial reference system.</param>
      <returns>
            Boolean value, indicating whether specified spatial reference system is supported by the driver.
            <see langword="null" /> is considered supported by any driver.
            </returns>
      <remarks>
            If spatial reference system is not supported, and you pass it to <see cref="M:Aspose.Gis.FileDriver.CreateLayer(System.String,Aspose.Gis.DriverOptions,Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)" /> method,
            a <see cref="T:System.NotSupportedException" /> will be thrown.
            </remarks>
    </member>
    <member name="P:Aspose.Gis.FileDriver.CanCreateLayers">
      <summary>
            Gets a value indicating whether this driver can create vector layers.
            </summary>
      <value>
        <see langword="true" />, if this driver can create vector layers; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:Aspose.Gis.FileDriver.CanOpenLayers">
      <summary>
            Gets a value indicating whether this driver can open vector layers.
            </summary>
      <value>
        <see langword="true" />, if this driver can open vector layers; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="M:Aspose.Gis.FileDriver.OpenLayer(System.String)">
      <summary>
            Opens the layer for reading.
            </summary>
      <param name="path">Path to the file.</param>
      <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
      <exception cref="T:System.ArgumentNullException">The path is <see langword="null" />.</exception>
      <exception cref="T:Aspose.Gis.GisException">Error reading the feature from the file.</exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
      <exception cref="T:System.NotSupportedException">Driver can not open vector layers (see <see cref="P:Aspose.Gis.FileDriver.CanOpenLayers" />).</exception>
    </member>
    <member name="M:Aspose.Gis.FileDriver.OpenLayer(Aspose.Gis.AbstractPath)">
      <summary>
            Opens the layer for reading.
            </summary>
      <param name="path">Path to the file.</param>
      <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
      <exception cref="T:System.ArgumentNullException">The path is <see langword="null" />.</exception>
      <exception cref="T:Aspose.Gis.GisException">Error reading the feature from the file.</exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
      <exception cref="T:System.NotSupportedException">Driver can not open vector layers (see <see cref="P:Aspose.Gis.FileDriver.CanOpenLayers" />).</exception>
    </member>
    <member name="M:Aspose.Gis.FileDriver.OpenLayer(System.String,Aspose.Gis.DriverOptions)">
      <summary>
            Opens the layer for reading.
            </summary>
      <param name="path">Path to the file.</param>
      <param name="options">Driver-specific options.</param>
      <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
      <exception cref="T:System.ArgumentException">Options object has an incorrect type for this driver.</exception>
      <exception cref="T:System.ArgumentNullException">The path is <see langword="null" />.</exception>
      <exception cref="T:Aspose.Gis.GisException">Error reading the feature from the file.</exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
      <exception cref="T:System.NotSupportedException">Driver can not open vector layers (see <see cref="P:Aspose.Gis.FileDriver.CanOpenLayers" />).</exception>
    </member>
    <member name="M:Aspose.Gis.FileDriver.OpenLayer(Aspose.Gis.AbstractPath,Aspose.Gis.DriverOptions)">
      <summary>
            Opens the layer for reading.
            </summary>
      <param name="path">Path to the file.</param>
      <param name="options">Driver-specific options.</param>
      <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
      <exception cref="T:System.ArgumentException">Options object has an incorrect type for this driver.</exception>
      <exception cref="T:System.ArgumentNullException">The path is <see langword="null" />.</exception>
      <exception cref="T:Aspose.Gis.GisException">Error reading the feature from the file.</exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
      <exception cref="T:System.NotSupportedException">Driver can not open vector layers (see <see cref="P:Aspose.Gis.FileDriver.CanOpenLayers" />).</exception>
    </member>
    <member name="M:Aspose.Gis.FileDriver.CreateLayer(System.String)">
      <summary>
            Creates the layer and opens it for appending.
            </summary>
      <param name="path">Path to the file.</param>
      <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
      <exception cref="T:System.ArgumentNullException">The path is <see langword="null" />.</exception>
      <exception cref="T:Aspose.Gis.GisException">Error writing the feature to the file.</exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
      <exception cref="T:System.NotSupportedException">Driver can not create vector layers (see <see cref="P:Aspose.Gis.FileDriver.CanCreateLayers" />).</exception>
    </member>
    <member name="M:Aspose.Gis.FileDriver.CreateLayer(Aspose.Gis.AbstractPath)">
      <summary>
            Creates the layer and opens it for appending.
            </summary>
      <param name="path">Path to the file.</param>
      <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
      <exception cref="T:System.ArgumentNullException">The path is <see langword="null" />.</exception>
      <exception cref="T:Aspose.Gis.GisException">Error writing the feature to the file.</exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
      <exception cref="T:System.NotSupportedException">Driver can not create vector layers (see <see cref="P:Aspose.Gis.FileDriver.CanCreateLayers" />).</exception>
    </member>
    <member name="M:Aspose.Gis.FileDriver.CreateLayer(System.String,Aspose.Gis.DriverOptions)">
      <summary>
            Creates the layer and opens it for appending.
            </summary>
      <param name="path">Path to the file.</param>
      <param name="options">Driver-specific options.</param>
      <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
      <exception cref="T:System.ArgumentNullException">The path is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Options object has an incorrect type for this driver.</exception>
      <exception cref="T:Aspose.Gis.GisException">Error writing the feature to the file.</exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
      <exception cref="T:System.NotSupportedException">Driver can not create vector layers (see <see cref="P:Aspose.Gis.FileDriver.CanCreateLayers" />).</exception>
    </member>
    <member name="M:Aspose.Gis.FileDriver.CreateLayer(Aspose.Gis.AbstractPath,Aspose.Gis.DriverOptions)">
      <summary>
            Creates the layer and opens it for appending.
            </summary>
      <param name="path">Path to the file.</param>
      <param name="options">Driver-specific options.</param>
      <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
      <exception cref="T:System.ArgumentNullException">The path is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Options object has an incorrect type for this driver.</exception>
      <exception cref="T:Aspose.Gis.GisException">Error writing the feature to the file.</exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
      <exception cref="T:System.NotSupportedException">Driver can not create vector layers (see <see cref="P:Aspose.Gis.FileDriver.CanCreateLayers" />).</exception>
    </member>
    <member name="M:Aspose.Gis.FileDriver.CreateLayer(System.String,Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
      <summary>
            Creates the layer and opens it for appending.
            </summary>
      <param name="path">Path to the file.</param>
      <param name="spatialReferenceSystem">Spatial reference system.</param>
      <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
      <exception cref="T:System.ArgumentNullException">The path is <see langword="null" />.</exception>
      <exception cref="T:Aspose.Gis.GisException">Error writing the feature to the file.</exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
      <exception cref="T:System.NotSupportedException">
            Spatial reference system is not supported by the driver.
            Use <see cref="M:Aspose.Gis.FileDriver.SupportsSpatialReferenceSystem(Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)" /> to check whether spatial reference system is supported.
            </exception>
    </member>
    <member name="M:Aspose.Gis.FileDriver.CreateLayer(Aspose.Gis.AbstractPath,Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
      <summary>
            Creates the layer and opens it for appending.
            </summary>
      <param name="path">Path to the file.</param>
      <param name="spatialReferenceSystem">Spatial reference system.</param>
      <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
      <exception cref="T:System.ArgumentNullException">The path is <see langword="null" />.</exception>
      <exception cref="T:Aspose.Gis.GisException">Error writing the feature to the file.</exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
      <exception cref="T:System.NotSupportedException">
            Spatial reference system is not supported by the driver.
            Use <see cref="M:Aspose.Gis.FileDriver.SupportsSpatialReferenceSystem(Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)" /> to check whether spatial reference system is supported.
            </exception>
    </member>
    <member name="M:Aspose.Gis.FileDriver.CreateLayer(System.String,Aspose.Gis.DriverOptions,Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
      <summary>
            Creates the layer and opens it for appending.
            </summary>
      <param name="path">Path to the file.</param>
      <param name="options">Driver-specific options.</param>
      <param name="spatialReferenceSystem">Spatial reference system.</param>
      <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
      <exception cref="T:System.ArgumentNullException">The path is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Options object has an incorrect type for this driver.</exception>
      <exception cref="T:Aspose.Gis.GisException">Error writing the feature to the file.</exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
      <exception cref="T:System.NotSupportedException">
            Spatial reference system is not supported by the driver.
            Use <see cref="M:Aspose.Gis.FileDriver.SupportsSpatialReferenceSystem(Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)" /> to check whether spatial reference system is supported.
            </exception>
      <exception cref="T:System.NotSupportedException">Driver can not create vector layers (see <see cref="P:Aspose.Gis.FileDriver.CanCreateLayers" />).</exception>
    </member>
    <member name="M:Aspose.Gis.FileDriver.CreateLayer(Aspose.Gis.AbstractPath,Aspose.Gis.DriverOptions,Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
      <summary>
            Creates the layer and opens it for appending.
            </summary>
      <param name="path">Path to the file.</param>
      <param name="options">Driver-specific options.</param>
      <param name="spatialReferenceSystem">Spatial reference system.</param>
      <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
      <exception cref="T:System.ArgumentNullException">The path is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Options object has an incorrect type for this driver.</exception>
      <exception cref="T:Aspose.Gis.GisException">Error writing the feature to the file.</exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
      <exception cref="T:System.NotSupportedException">
            Spatial reference system is not supported by the driver.
            Use <see cref="M:Aspose.Gis.FileDriver.SupportsSpatialReferenceSystem(Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)" /> to check whether spatial reference system is supported.
            </exception>
      <exception cref="T:System.NotSupportedException">Driver can not create vector layers (see <see cref="P:Aspose.Gis.FileDriver.CanCreateLayers" />).</exception>
    </member>
    <member name="P:Aspose.Gis.FileDriver.CanOpenDatasets">
      <summary>
            Gets a value indicating whether this driver can open datasets.
            </summary>
      <value>
        <see langword="true" />, if this driver can open datasets; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:Aspose.Gis.FileDriver.CanCreateDatasets">
      <summary>
            Gets a value indicating whether this driver can create datasets.
            </summary>
      <value>
        <see langword="true" />, if this driver can create datasets; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="M:Aspose.Gis.FileDriver.OpenDataset(System.String)">
      <summary>
            Opens the dataset.
            </summary>
      <param name="path">Path to the dataset.</param>
      <returns>An instance of <see cref="T:Aspose.Gis.Dataset" />.</returns>
      <exception cref="T:System.ArgumentNullException">The path is <see langword="null" />.</exception>
      <exception cref="T:Aspose.Gis.GisException">Error reading the dataset.</exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
      <exception cref="T:System.NotSupportedException">Driver can not open datasets (see <see cref="P:Aspose.Gis.FileDriver.CanOpenDatasets" />).</exception>
    </member>
    <member name="M:Aspose.Gis.FileDriver.OpenDataset(Aspose.Gis.AbstractPath)">
      <summary>
            Opens the dataset.
            </summary>
      <param name="path">Path to the dataset.</param>
      <returns>An instance of <see cref="T:Aspose.Gis.Dataset" />.</returns>
      <exception cref="T:System.ArgumentNullException">The path is <see langword="null" />.</exception>
      <exception cref="T:Aspose.Gis.GisException">Error reading the dataset.</exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
      <exception cref="T:System.NotSupportedException">Driver can not open datasets (see <see cref="P:Aspose.Gis.FileDriver.CanOpenDatasets" />).</exception>
    </member>
    <member name="M:Aspose.Gis.FileDriver.OpenDataset(System.String,Aspose.Gis.DriverOptions)">
      <summary>
            Opens the dataset.
            </summary>
      <param name="path">Path to the dataset.</param>
      <param name="options">Driver-specific options.</param>
      <returns>An instance of <see cref="T:Aspose.Gis.Dataset" />.</returns>
      <exception cref="T:System.ArgumentException">Options object has an incorrect type for this driver.</exception>
      <exception cref="T:System.ArgumentNullException">The path is <see langword="null" />.</exception>
      <exception cref="T:Aspose.Gis.GisException">Error reading the dataset.</exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
      <exception cref="T:System.NotSupportedException">Driver can not open datasets (see <see cref="P:Aspose.Gis.FileDriver.CanOpenDatasets" />).</exception>
    </member>
    <member name="M:Aspose.Gis.FileDriver.OpenDataset(Aspose.Gis.AbstractPath,Aspose.Gis.DriverOptions)">
      <summary>
            Opens the dataset.
            </summary>
      <param name="path">Path to the dataset.</param>
      <param name="options">Driver-specific options.</param>
      <returns>An instance of <see cref="T:Aspose.Gis.Dataset" />.</returns>
      <exception cref="T:System.ArgumentException">Options object has an incorrect type for this driver.</exception>
      <exception cref="T:System.ArgumentNullException">The path is <see langword="null" />.</exception>
      <exception cref="T:Aspose.Gis.GisException">Error reading the dataset.</exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
      <exception cref="T:System.NotSupportedException">Driver can not open datasets (see <see cref="P:Aspose.Gis.FileDriver.CanOpenDatasets" />).</exception>
    </member>
    <member name="M:Aspose.Gis.FileDriver.CreateDataset(System.String)">
      <summary>
            Creates a dataset.
            </summary>
      <returns>An instance of <see cref="T:Aspose.Gis.Dataset" />.</returns>
      <param name="path">Path to the dataset.</param>
      <exception cref="T:System.ArgumentNullException">The path is <see langword="null" />.</exception>
      <exception cref="T:Aspose.Gis.GisException">Error creating the dataset.</exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
      <exception cref="T:System.NotSupportedException">Driver can not open datasets (see <see cref="P:Aspose.Gis.FileDriver.CanOpenDatasets" />).</exception>
      <exception cref="T:System.InvalidOperationException">Dataset already exists.</exception>
    </member>
    <member name="M:Aspose.Gis.FileDriver.CreateDataset(Aspose.Gis.AbstractPath)">
      <summary>
            Creates a dataset.
            </summary>
      <returns>An instance of <see cref="T:Aspose.Gis.Dataset" />.</returns>
      <param name="path">Path to the dataset.</param>
      <exception cref="T:System.ArgumentNullException">The path is <see langword="null" />.</exception>
      <exception cref="T:Aspose.Gis.GisException">Error creating the dataset.</exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
      <exception cref="T:System.NotSupportedException">Driver can not open datasets (see <see cref="P:Aspose.Gis.FileDriver.CanOpenDatasets" />).</exception>
      <exception cref="T:System.InvalidOperationException">Dataset already exists.</exception>
    </member>
    <member name="M:Aspose.Gis.FileDriver.CreateDataset(System.String,Aspose.Gis.DriverOptions)">
      <summary>
            Creates a dataset.
            </summary>
      <param name="path">Path to the dataset.</param>
      <param name="options">Driver-specific options.</param>
      <returns>An instance of <see cref="T:Aspose.Gis.Dataset" />.</returns>
      <exception cref="T:System.ArgumentException">Options object has an incorrect type for this driver.</exception>
      <exception cref="T:System.ArgumentNullException">The path is <see langword="null" />.</exception>
      <exception cref="T:Aspose.Gis.GisException">Error creating the dataset.</exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
      <exception cref="T:System.NotSupportedException">Driver can not open datasets (see <see cref="P:Aspose.Gis.FileDriver.CanOpenDatasets" />).</exception>
      <exception cref="T:System.InvalidOperationException">Dataset already exists.</exception>
    </member>
    <member name="M:Aspose.Gis.FileDriver.CreateDataset(Aspose.Gis.AbstractPath,Aspose.Gis.DriverOptions)">
      <summary>
            Creates a dataset.
            </summary>
      <param name="path">Path to the dataset.</param>
      <param name="options">Driver-specific options.</param>
      <returns>An instance of <see cref="T:Aspose.Gis.Dataset" />.</returns>
      <exception cref="T:System.ArgumentException">Options object has an incorrect type for this driver.</exception>
      <exception cref="T:System.ArgumentNullException">The path is <see langword="null" />.</exception>
      <exception cref="T:Aspose.Gis.GisException">Error creating the dataset.</exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
      <exception cref="T:System.NotSupportedException">Driver can not open datasets (see <see cref="P:Aspose.Gis.FileDriver.CanOpenDatasets" />).</exception>
      <exception cref="T:System.InvalidOperationException">Dataset already exists.</exception>
    </member>
    <member name="T:Aspose.Gis.Formats.Common.NamespaceDoc">
      <summary>
        <c>Aspose.Gis.Formats.Common</c> namespace provides utility classes for working with various formats.
            </summary>
    </member>
    <member name="T:Aspose.Gis.Formats.FileGdb.FileGdbCoordinatePrecisionGrid">
      <summary>
            A coordinate precision grid inside a FileGDB layer.
            </summary>
      <remarks>
            The coordinate precision grid defines the valid domain and resolution of coordinates in FileGDB layer.
            Origin defines the Path to coordinate precision grid in space. Scale defines the resolution (the larger
            scale is, the more precise values are written).
            Precision grid specifies the valid range of values for coordinates:
            <code>
            XMin = XOrigin
            YMin = YOrigin
            ZMin = ZOrigin
            MMin = MOrigin
            XMax = XOrigin + 9e+15 / XYScale
            YMax = YOrigin + 9e+15 / XYScale
            ZMax = ZOrigin + 9e+15 / ZScale
            MMax = MOrigin + 9e+15 / MScale
            </code>
            Every coordinate in the <see cref="T:Aspose.Gis.VectorLayer" /> must be within this range.
            Coordinates that are outside of the range may cause read errors later on and will be processed wrong by ArcGIS.
            If you don't specify any properties (keep them <see langword="null" />) the default values are will be used.
            Default values depends on <see cref="T:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem" /> of the <see cref="T:Aspose.Gis.VectorLayer" />.
            For geographic <see cref="T:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem" /> defaults are:
            <code>
            XOrigin = -400
            YOrigin = -400
            ZOrigin = -1e5
            MOrigin = -1e5
            XYScale = 1e9
            ZScale  = 1 / ZTolerance * 10
            MScale  = 1 / MTolerance * 10
            </code>
            For projected <see cref="T:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem" /> defaults are:
            <code>
            XOrigin = -2147483647
            YOrigin = -2147483647
            ZOrigin = -1e5
            MOrigin = -1e5
            XYScale = 1 / XYTolerance * 10
            ZScale  = 1 / ZTolerance  * 10
            MScale  = 1 / MTolerance  * 10
            </code>
            where <c>XYTolerance</c>, <c>ZTolerance</c> and <c>MTolerance</c> are values from <see cref="T:Aspose.Gis.Formats.FileGdb.FileGdbOptions" />.
            </remarks>
    </member>
    <member name="M:Aspose.Gis.Formats.FileGdb.FileGdbCoordinatePrecisionGrid.CreateFromRectangle(Aspose.Gis.Geometries.IPoint,Aspose.Gis.Geometries.IPoint)">
      <summary>
            Creates new <c>FileGdbCoordinatePrecisionGrid</c> such that all values within a rectangle are representable.
            </summary>
      <param name="p1">One corner of the rectangle.</param>
      <param name="p2">Opposite corner of the rectangle. Must have same dimensions as <paramref name="p1" />.</param>
      <returns>
            The <c>FileGdbCoordinatePrecisionGrid</c> such that all values within a rectangle are representable.
            Values outside of the rectangle are not representable, so all coordinates that will be written to FileGDB layer
            must be inside the rectangle.
            </returns>
      <exception cref="T:System.ArgumentNullException"> Argument is <see langword="null" />. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="p1" /> and <paramref name="p2" /> don't form a valid non empty rectangle:
            <ul><li><paramref name="p1" /> or <paramref name="p2" /> is empty. </li><li>'HasZ' flags of <paramref name="p1" />  does not equal to 'HasZ' flag of <paramref name="p2" /></li><li>'HasM' flags of <paramref name="p1" />  does not equal to 'HasM' flag of <paramref name="p2" /></li><li>'X' coordinate of <paramref name="p1" /> is equal to 'X' coordinate of <paramref name="p2" /></li><li>'Y' coordinate of <paramref name="p1" /> is equal to 'Y' coordinate of <paramref name="p2" /></li><li>'Z' coordinate of <paramref name="p1" /> is equal to 'Z' coordinate of <paramref name="p2" /></li><li>'M' coordinate of <paramref name="p1" /> is equal to 'M' coordinate of <paramref name="p2" /></li><li> Any coordinate is <see cref="F:System.Double.NaN" /> or infinity. </li></ul></exception>
    </member>
    <member name="P:Aspose.Gis.Formats.FileGdb.FileGdbCoordinatePrecisionGrid.XOrigin">
      <summary>
            Gets or sets the origin of X coordinate. If set to <see langword="null" /> the default is used.
            </summary>
      <remarks>
            Default value is -400 for <see cref="T:Aspose.Gis.VectorLayer" /> with geographic <see cref="T:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem" />
            and -2147483647 for <see cref="T:Aspose.Gis.VectorLayer" /> with projected <see cref="T:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem" />.
            </remarks>
    </member>
    <member name="P:Aspose.Gis.Formats.FileGdb.FileGdbCoordinatePrecisionGrid.YOrigin">
      <summary>
            Gets or sets the origin of Y coordinate. If set to <see langword="null" /> the default is used.
            </summary>
      <remarks>
            Default value is -400 for <see cref="T:Aspose.Gis.VectorLayer" /> with geographic <see cref="T:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem" />
            and -2147483647 for <see cref="T:Aspose.Gis.VectorLayer" /> with projected <see cref="T:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem" />.
            </remarks>
    </member>
    <member name="P:Aspose.Gis.Formats.FileGdb.FileGdbCoordinatePrecisionGrid.ZOrigin">
      <summary>
            Gets or sets the origin of Z coordinate. If set to <see langword="null" /> the default is used.
            </summary>
      <remarks>
            Default value is -1e5.
            </remarks>
    </member>
    <member name="P:Aspose.Gis.Formats.FileGdb.FileGdbCoordinatePrecisionGrid.MOrigin">
      <summary>
            Gets or sets the origin of M coordinate. If set to <see langword="null" /> the default is used.
            </summary>
      <remarks>
            Default value is -1e5.
            </remarks>
    </member>
    <member name="P:Aspose.Gis.Formats.FileGdb.FileGdbCoordinatePrecisionGrid.XYScale">
      <summary>
            Gets or sets the scale of X and Y coordinates. If set to <see langword="null" /> the default is used.
            </summary>
      <remarks>
            Default value is <c>1e9</c> for <see cref="T:Aspose.Gis.VectorLayer" /> with geographic <see cref="T:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem" />
            and <c>XYScale = 1 / XYTolerance * 10</c> for <see cref="T:Aspose.Gis.VectorLayer" /> with
            projected <see cref="T:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem" />.
            </remarks>
      <exception cref="T:System.ArgumentOutOfRangeException" accessor="set"> Argument is not positive. </exception>
    </member>
    <member name="P:Aspose.Gis.Formats.FileGdb.FileGdbCoordinatePrecisionGrid.ZScale">
      <summary>
            Gets or sets the scale of Z coordinate. If set to <see langword="null" /> the default is used.
            </summary>
      <remarks>
            Default value is <c>ZScale = 1 / ZTolerance * 10</c>.
            </remarks>
      <exception cref="T:System.ArgumentOutOfRangeException" accessor="set"> Argument is not positive. </exception>
    </member>
    <member name="P:Aspose.Gis.Formats.FileGdb.FileGdbCoordinatePrecisionGrid.MScale">
      <summary>
            Gets or sets the scale of M coordinate. If set to <see langword="null" /> the default is used.
            </summary>
      <remarks>
            Default value is <c>MScale = 1 / MTolerance * 10</c>.
            </remarks>
      <exception cref="T:System.ArgumentOutOfRangeException" accessor="set"> Argument is not positive. </exception>
    </member>
    <member name="T:Aspose.Gis.Formats.FileGdb.FileGdbDriver">
      <summary>
            A driver for the ESRI File Geodatabase format.
            </summary>
    </member>
    <member name="M:Aspose.Gis.Formats.FileGdb.FileGdbDriver.SupportsSpatialReferenceSystem(Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
      <summary>
            Determines, whether specified spatial reference system is supported by the driver.
            </summary>
      <param name="spatialReferenceSystem">Spatial reference system.</param>
      <returns>Boolean value, indicating whether specified spatial reference system is supported by the driver.</returns>
      <remarks>
            ESRI File Geodatabase supports all spatial reference systems.
            </remarks>
    </member>
    <member name="P:Aspose.Gis.Formats.FileGdb.FileGdbDriver.CanOpenDatasets">
      <summary>
            Gets a value indicating whether this driver can open datasets.
            </summary>
      <value>
        <see langword="true" />, if this driver can open datasets; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:Aspose.Gis.Formats.FileGdb.FileGdbDriver.CanCreateDatasets">
      <summary>
            Gets a value indicating whether this driver can create datasets.
            </summary>
      <value>
        <see langword="true" />, if this driver can create datasets; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="M:Aspose.Gis.Formats.FileGdb.FileGdbDriver.OpenDataset(System.String,Aspose.Gis.Formats.FileGdb.FileGdbOptions)">
      <summary>
            Opens the dataset.
            </summary>
      <param name="path">Path to the dataset.</param>
      <param name="options">Driver-specific options.</param>
      <returns>An instance of <see cref="T:Aspose.Gis.Dataset" />.</returns>
      <exception cref="T:System.ArgumentException">Options object has an incorrect type for this driver.</exception>
      <exception cref="T:System.ArgumentNullException">The path is <see langword="null" />.</exception>
      <exception cref="T:Aspose.Gis.GisException">Error reading the layer from the dataset.</exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
      <exception cref="T:System.NotSupportedException">Driver can not open datasets (see <see cref="P:Aspose.Gis.Formats.FileGdb.FileGdbDriver.CanOpenDatasets" />).</exception>
    </member>
    <member name="M:Aspose.Gis.Formats.FileGdb.FileGdbDriver.OpenDataset(Aspose.Gis.AbstractPath,Aspose.Gis.DriverOptions)">
      <summary>
            Opens the dataset.
            </summary>
      <param name="path">Path to the dataset.</param>
      <param name="options">Driver-specific options.</param>
      <returns>An instance of <see cref="T:Aspose.Gis.Dataset" />.</returns>
      <exception cref="T:System.ArgumentException">Options object has an incorrect type for this driver.</exception>
      <exception cref="T:System.ArgumentNullException">The path is <see langword="null" />.</exception>
      <exception cref="T:Aspose.Gis.GisException">Error reading the layer from the dataset.</exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
      <exception cref="T:System.NotSupportedException">Driver can not open datasets (see <see cref="P:Aspose.Gis.Formats.FileGdb.FileGdbDriver.CanOpenDatasets" />).</exception>
    </member>
    <member name="M:Aspose.Gis.Formats.FileGdb.FileGdbDriver.OpenDataset(Aspose.Gis.AbstractPath,Aspose.Gis.Formats.FileGdb.FileGdbOptions)">
      <summary>
            Opens the dataset.
            </summary>
      <param name="path">Path to the dataset.</param>
      <param name="options">Driver-specific options.</param>
      <returns>An instance of <see cref="T:Aspose.Gis.Dataset" />.</returns>
      <exception cref="T:System.ArgumentException">Options object has an incorrect type for this driver.</exception>
      <exception cref="T:System.ArgumentNullException">The path is <see langword="null" />.</exception>
      <exception cref="T:Aspose.Gis.GisException">Error reading the layer from the dataset.</exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
      <exception cref="T:System.NotSupportedException">Driver can not open datasets (see <see cref="P:Aspose.Gis.Formats.FileGdb.FileGdbDriver.CanOpenDatasets" />).</exception>
    </member>
    <member name="P:Aspose.Gis.Formats.FileGdb.FileGdbDriver.CanCreateLayers">
      <summary>
            Gets a value indicating whether this driver can create vector layers.
            </summary>
      <value>
        <see langword="true" />, if this driver can create vector layers; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:Aspose.Gis.Formats.FileGdb.FileGdbDriver.CanOpenLayers">
      <summary>
            Gets a value indicating whether this driver can open vector layers.
            </summary>
      <value>
        <see langword="true" />, if this driver can open vector layers; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="M:Aspose.Gis.Formats.FileGdb.FileGdbDriver.OpenLayer(System.String,Aspose.Gis.Formats.FileGdb.FileGdbOptions)">
      <summary>
            Opens a layer for reading.
            </summary>
      <param name="path">Path to the file.</param>
      <param name="options">Driver-specific options.</param>
      <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
    </member>
    <member name="M:Aspose.Gis.Formats.FileGdb.FileGdbDriver.OpenLayer(Aspose.Gis.AbstractPath,Aspose.Gis.DriverOptions)">
      <summary>
            Opens a layer for reading.
            </summary>
      <param name="path">Path to the file.</param>
      <param name="options">Driver-specific options.</param>
      <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
    </member>
    <member name="M:Aspose.Gis.Formats.FileGdb.FileGdbDriver.OpenLayer(Aspose.Gis.AbstractPath,Aspose.Gis.Formats.FileGdb.FileGdbOptions)">
      <summary>
            Opens a layer for reading.
            </summary>
      <param name="path">Path to the file.</param>
      <param name="options">Driver-specific options.</param>
      <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
    </member>
    <member name="M:Aspose.Gis.Formats.FileGdb.FileGdbDriver.CreateLayer(System.String,Aspose.Gis.Formats.FileGdb.FileGdbOptions)">
      <summary>
            Creates a layer and opens it for adding new features.
            </summary>
      <param name="path">Path to the file.</param>
      <param name="options">Driver-specific options.</param>
      <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
      <exception cref="T:System.InvalidOperationException">The layer already exists.</exception>
    </member>
    <member name="M:Aspose.Gis.Formats.FileGdb.FileGdbDriver.CreateLayer(System.String,Aspose.Gis.Formats.FileGdb.FileGdbOptions,Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
      <summary>
            Creates a layer and opens it for appending.
            </summary>
      <param name="path">Path to the file.</param>
      <param name="options">Driver-specific options.</param>
      <param name="spatialReferenceSystem">Spatial reference system.</param>
      <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
      <exception cref="T:System.InvalidOperationException">The layer already exists.</exception>
      <exception cref="T:System.NotSupportedException">Spatial reference system is not supported by the driver.</exception>
    </member>
    <member name="M:Aspose.Gis.Formats.FileGdb.FileGdbDriver.CreateLayer(Aspose.Gis.AbstractPath,Aspose.Gis.DriverOptions,Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
      <summary>
            Creates a layer and opens it for appending.
            </summary>
      <param name="path">Path to the file.</param>
      <param name="options">Driver-specific options.</param>
      <param name="spatialReferenceSystem">Spatial reference system.</param>
      <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
      <exception cref="T:System.InvalidOperationException">The layer already exists.</exception>
      <exception cref="T:System.NotSupportedException">Spatial reference system is not supported by the driver.</exception>
    </member>
    <member name="M:Aspose.Gis.Formats.FileGdb.FileGdbDriver.CreateLayer(Aspose.Gis.AbstractPath,Aspose.Gis.Formats.FileGdb.FileGdbOptions,Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
      <summary>
            Creates a layer and opens it for appending.
            </summary>
      <param name="path">Path to the file.</param>
      <param name="options">Driver-specific options.</param>
      <param name="spatialReferenceSystem">Spatial reference system.</param>
      <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
      <exception cref="T:System.InvalidOperationException">The layer already exists.</exception>
      <exception cref="T:System.NotSupportedException">Spatial reference system is not supported by the driver.</exception>
    </member>
    <member name="M:Aspose.Gis.Formats.FileGdb.FileGdbDriver.CreateDataset(System.String,Aspose.Gis.Formats.FileGdb.FileGdbOptions)">
      <summary>
            Creates a dataset.
            </summary>
      <param name="path">Path to the dataset.</param>
      <param name="options">Driver-specific options.</param>
      <returns>An instance of <see cref="T:Aspose.Gis.Dataset" />.</returns>
      <exception cref="T:System.ArgumentException">Options object has an incorrect type for this driver.</exception>
      <exception cref="T:System.ArgumentNullException">The path is <see langword="null" />.</exception>
      <exception cref="T:Aspose.Gis.GisException">Error reading the dataset.</exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
      <exception cref="T:System.NotSupportedException">Driver can not open datasets (see <see cref="P:Aspose.Gis.FileDriver.CanOpenDatasets" />).</exception>
      <exception cref="T:System.InvalidOperationException">Dataset already exists.</exception>
    </member>
    <member name="M:Aspose.Gis.Formats.FileGdb.FileGdbDriver.CreateDataset(Aspose.Gis.AbstractPath,Aspose.Gis.DriverOptions)">
      <summary>
            Creates a dataset.
            </summary>
      <param name="path">Path to the dataset.</param>
      <param name="options">Driver-specific options.</param>
      <returns>An instance of <see cref="T:Aspose.Gis.Dataset" />.</returns>
      <exception cref="T:System.ArgumentException">Options object has an incorrect type for this driver.</exception>
      <exception cref="T:System.ArgumentNullException">The path is <see langword="null" />.</exception>
      <exception cref="T:Aspose.Gis.GisException">Error reading the dataset.</exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
      <exception cref="T:System.NotSupportedException">Driver can not open datasets (see <see cref="P:Aspose.Gis.FileDriver.CanOpenDatasets" />).</exception>
      <exception cref="T:System.InvalidOperationException">Dataset already exists.</exception>
    </member>
    <member name="M:Aspose.Gis.Formats.FileGdb.FileGdbDriver.CreateDataset(Aspose.Gis.AbstractPath,Aspose.Gis.Formats.FileGdb.FileGdbOptions)">
      <summary>
            Creates a dataset.
            </summary>
      <param name="path">Path to the dataset.</param>
      <param name="options">Driver-specific options.</param>
      <returns>An instance of <see cref="T:Aspose.Gis.Dataset" />.</returns>
      <exception cref="T:System.ArgumentException">Options object has an incorrect type for this driver.</exception>
      <exception cref="T:System.ArgumentNullException">The path is <see langword="null" />.</exception>
      <exception cref="T:Aspose.Gis.GisException">Error reading the dataset.</exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
      <exception cref="T:System.NotSupportedException">Driver can not open datasets (see <see cref="P:Aspose.Gis.FileDriver.CanOpenDatasets" />).</exception>
      <exception cref="T:System.InvalidOperationException">Dataset already exists.</exception>
    </member>
    <member name="T:Aspose.Gis.Formats.FileGdb.FileGdbOptions">
      <summary>
            Driver-specific options for FileGDB format.
            </summary>
    </member>
    <member name="M:Aspose.Gis.Formats.FileGdb.FileGdbOptions.#ctor">
      <summary>
            Create new instance.
            </summary>
    </member>
    <member name="P:Aspose.Gis.Formats.FileGdb.FileGdbOptions.ObjectIdFieldName">
      <summary>
            Name of the object ID field.
            </summary>
      <remarks>
            This is a creation option and it does not affect reading.
            Defines the name of the object ID field (column).
            Defaults to "OBJECTID".
            If any attribute in <see cref="P:Aspose.Gis.VectorLayer.Attributes" /> has name equal to the value of this property, then
            this attribute is renamed.
            </remarks>
      <exception cref="T:System.ArgumentException" accessor="set">
            Value is not a valid field name. A valid field name must:
            <ul><li>Be not <see langword="null" /> and not empty</li><li>Start with Latin letter or underscore</li><li>Contain only Latin letters, digits or underscores</li></ul></exception>
    </member>
    <member name="P:Aspose.Gis.Formats.FileGdb.FileGdbOptions.GeometryFieldName">
      <summary>
            Name of the geometry field.
            </summary>
      <remarks>
            This is a creation option and it does not affect reading.
            Defines the name of the geometry field (column).
            Defaults to "SHAPE".
            If any attribute in <see cref="P:Aspose.Gis.VectorLayer.Attributes" /> has name equal to the value of this property, then
            this attribute is renamed.
            </remarks>
      <exception cref="T:System.ArgumentException" accessor="set">
            Value is not a valid field name. A valid field name must:
            <ul><li>Be not <see langword="null" /> and not empty</li><li>Start with Latin letter or underscore</li><li>Contain only Latin letters, digits or underscores</li></ul></exception>
    </member>
    <member name="P:Aspose.Gis.Formats.FileGdb.FileGdbOptions.XYTolerance">
      <summary>
            X and Y snapping tolerance.
            </summary>
      <remarks>
            This is a creation option and it does not affect reading.
            This parameter controls a snapping tolerance used for advanced ArcGIS features.
            It does not affect Aspose.GIS behavior, but it can be used by ArcGIS.
            The unit of the parameter is the unit of spatial reference system.
            If set to <see langword="null" />, the default is used. The default depends on spatial reference system
            and equals to 0.000000008983153 degrees for geographic systems or 0.001 meters for projected systems
            (values are transformed to spatial reference system units).
            If spatial reference system is unknown the default is 0.001.
            </remarks>
    </member>
    <member name="P:Aspose.Gis.Formats.FileGdb.FileGdbOptions.ZTolerance">
      <summary>
            Z snapping tolerance.
            </summary>
      <remarks>
            This is a creation option and it does not affect reading.
            This parameter controls a snapping tolerance used for advanced ArcGIS features.
            It does not affect Aspose.GIS behavior, but it can be used by ArcGIS.
            The unit of the parameter is the unit of spatial reference system.
            If set to <see langword="null" />, the default is used. If spatial reference system is unknown
            or has less than three dimensions the default is 0.001. If spatial reference system has three dimensions
            the default is 0.001 meters converted to the unit of the third dimension.
            </remarks>
    </member>
    <member name="P:Aspose.Gis.Formats.FileGdb.FileGdbOptions.MTolerance">
      <summary>
            M snapping tolerance.
            </summary>
      <remarks>
            This is a creation option and it does not affect reading.
            This parameter controls a snapping tolerance used for advanced ArcGIS features.
            It does not affect Aspose.GIS behavior, but it can be used by ArcGIS.
            The unit of the parameter is the unit of spatial reference system.
            If set to <see langword="null" />, the default is used. The default is 0.001.
            </remarks>
    </member>
    <member name="P:Aspose.Gis.Formats.FileGdb.FileGdbOptions.CoordinatePrecisionGrid">
      <summary>
            A coordinate precision grid to use in new layer.
            </summary>
      <remarks>
            This is a creation option and it does not affect reading.
            The coordinate precision grid defines the valid domain and resolution of coordinates in FileGDB.
            When this property is set to <see langword="null" /> default values are used.
            Refer to <see cref="T:Aspose.Gis.Formats.FileGdb.FileGdbCoordinatePrecisionGrid" /> documentation for more details on coordinate 
            precision grids.
            </remarks>
    </member>
    <member name="P:Aspose.Gis.Formats.FileGdb.FileGdbOptions.EnsureValidCoordinatesRange">
      <summary>
            Whether coordinates should be in valid range.
            </summary>
      <remarks>
            This is a creation option and it does not affect reading.
            If set to <see langword="true" /> an exception will be thrown on attempt to write a coordinate with values
            out of valid range. If set to <see langword="false" /> such coordinate will be written silently.
            Valid range is defined by <see cref="P:Aspose.Gis.Formats.FileGdb.FileGdbOptions.CoordinatePrecisionGrid" />. Refer to <see cref="P:Aspose.Gis.Formats.FileGdb.FileGdbOptions.CoordinatePrecisionGrid" />
            documentation to read about how valid range is determined from coordinate precision grid.
            Default is <see langword="false" />.
            </remarks>
    </member>
    <member name="T:Aspose.Gis.Formats.FileGdb.NamespaceDoc">
      <summary>
        <c>Aspose.Gis.Formats.FileGdb</c> namespace provides classes for working with ESRI File Geodatabase format.
            </summary>
    </member>
    <member name="T:Aspose.Gis.Formats.GeoJson.GeoJsonDriver">
      <summary>
            A driver for the GeoJSON format.
            </summary>
    </member>
    <member name="M:Aspose.Gis.Formats.GeoJson.GeoJsonDriver.SupportsSpatialReferenceSystem(Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
      <summary>
            Determines, whether specified spatial reference system is supported by the driver.
            </summary>
      <param name="spatialReferenceSystem">Spatial reference system.</param>
      <returns>Boolean value, indicating whether specified spatial reference system is supported by the driver.</returns>
      <remarks>
            For GeoJSON, the only supported spatial reference system is WGS84.
            </remarks>
    </member>
    <member name="P:Aspose.Gis.Formats.GeoJson.GeoJsonDriver.CanCreateLayers">
      <summary>
            Gets a value indicating whether this driver can create vector layers.
            </summary>
      <value>
        <see langword="true" />, if this driver can create vector layers; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:Aspose.Gis.Formats.GeoJson.GeoJsonDriver.CanOpenLayers">
      <summary>
            Gets a value indicating whether this driver can open vector layers.
            </summary>
      <value>
        <see langword="true" />, if this driver can open vector layers; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:Aspose.Gis.Formats.GeoJson.GeoJsonDriver.CanCreateDatasets">
      <summary>
            Gets a value indicating whether this driver can create datasets.
            </summary>
      <value>
        <see langword="true" />, if this driver can create datasets; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="M:Aspose.Gis.Formats.GeoJson.GeoJsonDriver.OpenLayer(System.String,Aspose.Gis.Formats.GeoJson.GeoJsonOptions)">
      <summary>
            Opens a layer for reading.
            </summary>
      <param name="path">Path to the file.</param>
      <param name="options">Driver-specific options.</param>
      <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
    </member>
    <member name="M:Aspose.Gis.Formats.GeoJson.GeoJsonDriver.OpenLayer(Aspose.Gis.AbstractPath,Aspose.Gis.DriverOptions)">
      <summary>
            Opens a layer for reading.
            </summary>
      <param name="path">Path to the file.</param>
      <param name="options">Driver-specific options.</param>
      <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
    </member>
    <member name="M:Aspose.Gis.Formats.GeoJson.GeoJsonDriver.OpenLayer(Aspose.Gis.AbstractPath,Aspose.Gis.Formats.GeoJson.GeoJsonOptions)">
      <summary>
            Opens a layer for reading.
            </summary>
      <param name="path">Path to the file.</param>
      <param name="options">Driver-specific options.</param>
      <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
    </member>
    <member name="M:Aspose.Gis.Formats.GeoJson.GeoJsonDriver.CreateLayer(System.String,Aspose.Gis.Formats.GeoJson.GeoJsonOptions)">
      <summary>
            Creates a layer and opens it for adding new features.
            </summary>
      <param name="path">Path to the file.</param>
      <param name="options">Driver-specific options.</param>
      <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
      <exception cref="T:System.InvalidOperationException">The layer already exists.</exception>
    </member>
    <member name="M:Aspose.Gis.Formats.GeoJson.GeoJsonDriver.CreateLayer(Aspose.Gis.AbstractPath,Aspose.Gis.Formats.GeoJson.GeoJsonOptions)">
      <summary>
            Creates a layer and opens it for adding new features.
            </summary>
      <param name="path">Path to the file.</param>
      <param name="options">Driver-specific options.</param>
      <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
      <exception cref="T:System.InvalidOperationException">The layer already exists.</exception>
    </member>
    <member name="M:Aspose.Gis.Formats.GeoJson.GeoJsonDriver.CreateLayer(Aspose.Gis.AbstractPath,Aspose.Gis.DriverOptions,Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
      <summary>
            Creates a layer and opens it for adding new features.
            </summary>
      <param name="path">Path to the file.</param>
      <param name="options">Driver-specific options.</param>
      <param name="spatialReferenceSystem">Spatial reference system.</param>
      <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
      <exception cref="T:System.InvalidOperationException">The layer already exists.</exception>
    </member>
    <member name="M:Aspose.Gis.Formats.GeoJson.GeoJsonDriver.CreateLayer(Aspose.Gis.AbstractPath,Aspose.Gis.Formats.GeoJson.GeoJsonOptions,Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
      <summary>
            Creates a layer and opens it for adding new features.
            </summary>
      <param name="path">Path to the file.</param>
      <param name="options">Driver-specific options.</param>
      <param name="spatialReferenceSystem">Spatial reference system.</param>
      <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
      <exception cref="T:System.InvalidOperationException">The layer already exists.</exception>
      <exception cref="T:System.NotSupportedException">Spatial reference system is not supported by the driver.</exception>
    </member>
    <member name="T:Aspose.Gis.Formats.GeoJson.GeoJsonOptions">
      <summary>
            Driver-specific options for GeoJSON format.
            </summary>
    </member>
    <member name="M:Aspose.Gis.Formats.GeoJson.GeoJsonOptions.#ctor">
      <summary>
            Create new instance.
            </summary>
    </member>
    <member name="P:Aspose.Gis.Formats.GeoJson.GeoJsonOptions.NestedPropertiesSeparator">
      <summary>
            Gets or sets a string that is used to separate components of nested attributes.
            Default is "_".
            </summary>
      <remarks>
            This is reading option - it does not affect writing.
            </remarks>
    </member>
    <member name="T:Aspose.Gis.Formats.GeoJson.NamespaceDoc">
      <summary>
        <c>Aspose.Gis.Formats.GeoJson</c> namespace provides classes for working with GeoJSON format.
            </summary>
    </member>
    <member name="T:Aspose.Gis.Formats.Gml.GmlDriver">
      <summary>
            A driver for the GML format.
            </summary>
    </member>
    <member name="M:Aspose.Gis.Formats.Gml.GmlDriver.SupportsSpatialReferenceSystem(Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
      <summary>
            Determines, whether specified spatial reference system is supported by the driver.
            </summary>
      <param name="spatialReferenceSystem">Spatial reference system.</param>
      <returns>Boolean value, indicating whether specified spatial reference system is supported by the driver.</returns>
    </member>
    <member name="P:Aspose.Gis.Formats.Gml.GmlDriver.CanCreateLayers">
      <summary>
            Gets a value indicating whether this driver can create vector layers.
            </summary>
      <value>
        <see langword="true" />, if this driver can create vector layers; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:Aspose.Gis.Formats.Gml.GmlDriver.CanOpenLayers">
      <summary>
            Gets a value indicating whether this driver can open vector layers.
            </summary>
      <value>
        <see langword="true" />, if this driver can open vector layers; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:Aspose.Gis.Formats.Gml.GmlDriver.CanCreateDatasets">
      <summary>
            Gets a value indicating whether this driver can create datasets.
            </summary>
      <value>
        <see langword="true" />, if this driver can create datasets; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="M:Aspose.Gis.Formats.Gml.GmlDriver.OpenLayer(System.String,Aspose.Gis.Formats.Gml.GmlOptions)">
      <summary>
            Opens a layer for reading.
            </summary>
      <param name="path">Path to the file.</param>
      <param name="options">Driver-specific options.</param>
      <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
    </member>
    <member name="M:Aspose.Gis.Formats.Gml.GmlDriver.OpenLayer(Aspose.Gis.AbstractPath,Aspose.Gis.DriverOptions)">
      <summary>
            Opens a layer for reading.
            </summary>
      <param name="path">Path to the file.</param>
      <param name="options">Driver-specific options.</param>
      <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
    </member>
    <member name="M:Aspose.Gis.Formats.Gml.GmlDriver.OpenLayer(Aspose.Gis.AbstractPath,Aspose.Gis.Formats.Gml.GmlOptions)">
      <summary>
            Opens a layer for reading.
            </summary>
      <param name="path">Path to the file.</param>
      <param name="options">Driver-specific options.</param>
      <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
    </member>
    <member name="M:Aspose.Gis.Formats.Gml.GmlDriver.CreateLayer(System.String,Aspose.Gis.Formats.Gml.GmlOptions)">
      <summary>
            Creates a layer and opens it for adding new features.
            </summary>
      <param name="path">Path to the file.</param>
      <param name="options">Driver-specific options.</param>
      <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
      <exception cref="T:System.InvalidOperationException">The layer already exists.</exception>
    </member>
    <member name="M:Aspose.Gis.Formats.Gml.GmlDriver.CreateLayer(Aspose.Gis.AbstractPath,Aspose.Gis.DriverOptions,Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
      <summary>
            Creates a layer and opens it for adding new features.
            </summary>
      <param name="path">Path to the file.</param>
      <param name="options">Driver-specific options.</param>
      <param name="spatialReferenceSystem">Spatial reference system.</param>
      <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
      <exception cref="T:System.InvalidOperationException">The layer already exists.</exception>
    </member>
    <member name="M:Aspose.Gis.Formats.Gml.GmlDriver.CreateLayer(System.String,Aspose.Gis.Formats.Gml.GmlOptions,Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
      <summary>
            Creates a layer and opens it for adding new features.
            </summary>
      <param name="path">Path to the file.</param>
      <param name="options">Driver-specific options.</param>
      <param name="spatialReferenceSystem">Spatial reference system.</param>
      <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
      <exception cref="T:System.InvalidOperationException">The layer already exists.</exception>
      <exception cref="T:System.NotSupportedException">Spatial reference system is not supported by the driver.</exception>
    </member>
    <member name="T:Aspose.Gis.Formats.Gml.GmlOptions">
      <summary>
            Driver-specific options for GML format.
            </summary>
    </member>
    <member name="M:Aspose.Gis.Formats.Gml.GmlOptions.#ctor">
      <summary>
            Create new instance.
            </summary>
    </member>
    <member name="P:Aspose.Gis.Formats.Gml.GmlOptions.LoadSchemasFromInternet">
      <summary>
            Determines whether Aspose.GIS is allowed to load XML schema from Internet.
            If set to <see langword="false" />, schemas with absolute URIs that does not start with 'file://' would not be loaded.
            Default is <see langword="false" />.
            </summary>
      <remarks>
            Aspose.GIS uses XML schema of GML file in order to create <see cref="T:Aspose.Gis.FeatureAttributeCollection" />.
            XML schema files can be distributed alongside with GML files or can be located on the Internet.
            In former case, you need to set this option to <see langword="true" /> to allow Aspose.GIS to load XML schema.
            </remarks>
    </member>
    <member name="P:Aspose.Gis.Formats.Gml.GmlOptions.XmlResolver">
      <summary>
            A <see cref="P:Aspose.Gis.Formats.Gml.GmlOptions.XmlResolver" /> used to resolve external resources. Default is <see cref="T:System.Xml.XmlUrlResolver" />.
            </summary>
    </member>
    <member name="P:Aspose.Gis.Formats.Gml.GmlOptions.NestedPropertiesSeparator">
      <summary>
            Gets or sets a string that is used to separate components of nested attributes.
            Default is "_".
            </summary>
    </member>
    <member name="P:Aspose.Gis.Formats.Gml.GmlOptions.SchemaLocation">
      <summary>
            Space separated list of URI pairs. First URI in every pair is a URI of the namespace, second URI is a Path to XML schema of the namespace.
            If set to <see langword="null" />, <see cref="T:Aspose.Gis.Formats.Gml.GmlDriver" /> will try read schemaLocation from the root element of the document.
            Default is <see langword="null" />.
            </summary>
      <remarks>
            Aspose.GIS uses XML schema of GML file in order to create <see cref="T:Aspose.Gis.FeatureAttributeCollection" />. By defualt, schema location is extracted
            from schemaLocation attribute. If there is no such attribute or it points to invalid location,
            Aspose.GIS will fail to read GML file. In this case - set this option, so Aspose.GIS can load schema.
            </remarks>
      <example>"http://site.com/namespace http://site.com/schema.xsd"</example>
    </member>
    <member name="T:Aspose.Gis.Formats.Gml.NamespaceDoc">
      <summary>
        <c>Aspose.Gis.Formats.Gml</c> namespace provides classes for working with GML format.
            </summary>
    </member>
    <member name="T:Aspose.Gis.Formats.Gpx.GpxDriver">
      <summary>
            A driver for the GPX format.
            </summary>
    </member>
    <member name="M:Aspose.Gis.Formats.Gpx.GpxDriver.SupportsSpatialReferenceSystem(Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
      <summary>
            Determines, whether specified spatial reference system is supported by the driver.
            </summary>
      <param name="spatialReferenceSystem">Spatial reference system.</param>
      <returns>Boolean value, indicating whether specified spatial reference system is supported by the driver.</returns>
      <remarks>
            For GPX, the only supported spatial reference system is WGS84.
            </remarks>
    </member>
    <member name="P:Aspose.Gis.Formats.Gpx.GpxDriver.CanCreateLayers">
      <summary>
            Gets a value indicating whether this driver can create vector layers.
            </summary>
      <value>
        <see langword="true" />, if this driver can create vector layers; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:Aspose.Gis.Formats.Gpx.GpxDriver.CanOpenLayers">
      <summary>
            Gets a value indicating whether this driver can open vector layers.
            </summary>
      <value>
        <see langword="true" />, if this driver can open vector layers; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:Aspose.Gis.Formats.Gpx.GpxDriver.CanCreateDatasets">
      <summary>
            Gets a value indicating whether this driver can create datasets.
            </summary>
      <value>
        <see langword="true" />, if this driver can create datasets; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="M:Aspose.Gis.Formats.Gpx.GpxDriver.OpenLayer(System.String,Aspose.Gis.Formats.Gpx.GpxOptions)">
      <summary>
            Opens a layer for reading.
            </summary>
      <param name="path">Path to the file.</param>
      <param name="options">Driver-specific options.</param>
      <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
    </member>
    <member name="M:Aspose.Gis.Formats.Gpx.GpxDriver.OpenLayer(Aspose.Gis.AbstractPath,Aspose.Gis.DriverOptions)">
      <summary>
            Opens a layer for reading.
            </summary>
      <param name="path">Path to the file.</param>
      <param name="options">Driver-specific options.</param>
      <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
    </member>
    <member name="M:Aspose.Gis.Formats.Gpx.GpxDriver.OpenLayer(Aspose.Gis.AbstractPath,Aspose.Gis.Formats.Gpx.GpxOptions)">
      <summary>
            Opens a layer for reading.
            </summary>
      <param name="path">Path to the file.</param>
      <param name="options">Driver-specific options.</param>
      <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
    </member>
    <member name="M:Aspose.Gis.Formats.Gpx.GpxDriver.CreateLayer(System.String,Aspose.Gis.Formats.Gpx.GpxOptions)">
      <summary>
            Creates a layer and opens it for adding new features.
            </summary>
      <param name="path">Path to the file.</param>
      <param name="options">Driver-specific options.</param>
      <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
      <exception cref="T:System.InvalidOperationException">The layer already exists.</exception>
    </member>
    <member name="M:Aspose.Gis.Formats.Gpx.GpxDriver.CreateLayer(Aspose.Gis.AbstractPath,Aspose.Gis.DriverOptions,Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
      <summary>
            Creates a layer and opens it for adding new features.
            </summary>
      <param name="path">Path to the file.</param>
      <param name="options">Driver-specific options.</param>
      <param name="spatialReferenceSystem">Spatial reference system.</param>
      <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
      <exception cref="T:System.InvalidOperationException">The layer already exists.</exception>
    </member>
    <member name="M:Aspose.Gis.Formats.Gpx.GpxDriver.CreateLayer(System.String,Aspose.Gis.Formats.Gpx.GpxOptions,Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
      <summary>
            Creates a layer and opens it for adding new features.
            </summary>
      <param name="path">Path to the file.</param>
      <param name="options">Driver-specific options.</param>
      <param name="spatialReferenceSystem">Spatial reference system.</param>
      <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
      <exception cref="T:System.InvalidOperationException">The layer already exists.</exception>
      <exception cref="T:System.NotSupportedException">Spatial reference system is not supported by the driver.</exception>
    </member>
    <member name="T:Aspose.Gis.Formats.Gpx.GpxOptions">
      <summary>
            Driver-specific options for GPX format.
            </summary>
    </member>
    <member name="M:Aspose.Gis.Formats.Gpx.GpxOptions.#ctor">
      <summary>
            Create new instance.
            </summary>
    </member>
    <member name="P:Aspose.Gis.Formats.Gpx.GpxOptions.ZAttribute">
      <summary>
            Determines which GPX attribute will be exported as 'Z' coordinate of waypoints, route points and track points.
            If <see langword="null" /> - no attribute will be exported as 'Z' coordinate.
            Defaults to "ele".
            Possible values are names of all GPX XML attribute that can be represented as double (e.g. "speed", "magvar", "geoidheight" etc.)
            </summary>
    </member>
    <member name="P:Aspose.Gis.Formats.Gpx.GpxOptions.MAttribute">
      <summary>
            Determines which GPX attribute will be exported as 'M' coordinate of waypoints, route points and track points.
            Behavior is same with <see cref="P:Aspose.Gis.Formats.Gpx.GpxOptions.ZAttribute" />, defaults to <see langword="null" />.
            </summary>
      <seealso cref="P:Aspose.Gis.Formats.Gpx.GpxOptions.ZAttribute" />
    </member>
    <member name="T:Aspose.Gis.Formats.Gpx.NamespaceDoc">
      <summary>
        <c>Aspose.Gis.Formats.Gpx</c> namespace provides classes for working with GPX format.
            </summary>
    </member>
    <member name="T:Aspose.Gis.Formats.Kml.KmlDriver">
      <summary>
            A driver for the KML format
            </summary>
    </member>
    <member name="M:Aspose.Gis.Formats.Kml.KmlDriver.SupportsSpatialReferenceSystem(Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
      <summary>
            Determines, whether specified spatial reference system is supported by the driver.
            </summary>
      <param name="spatialReferenceSystem">Spatial reference system.</param>
      <returns>Boolean value, indicating whether specified spatial reference system is supported by the driver.</returns>
      <remarks>
            For KML, the only supported spatial reference system is WGS84.
            </remarks>
    </member>
    <member name="P:Aspose.Gis.Formats.Kml.KmlDriver.CanCreateLayers">
      <summary>
            Gets a value indicating whether this driver can create vector layers.
            </summary>
      <value>
        <see langword="true" />, if this driver can create vector layers; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:Aspose.Gis.Formats.Kml.KmlDriver.CanOpenLayers">
      <summary>
            Gets a value indicating whether this driver can open vector layers.
            </summary>
      <value>
        <see langword="true" />, if this driver can open vector layers; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:Aspose.Gis.Formats.Kml.KmlDriver.CanCreateDatasets">
      <summary>
            Gets a value indicating whether this driver can create datasets.
            </summary>
      <value>
        <see langword="true" />, if this driver can create datasets; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="M:Aspose.Gis.Formats.Kml.KmlDriver.OpenLayer(System.String,Aspose.Gis.Formats.Kml.KmlOptions)">
      <summary>
            Opens a layer for reading.
            </summary>
      <param name="path">Path to the file.</param>
      <param name="options">Driver-specific options.</param>
      <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
    </member>
    <member name="M:Aspose.Gis.Formats.Kml.KmlDriver.OpenLayer(Aspose.Gis.AbstractPath,Aspose.Gis.DriverOptions)">
      <summary>
            Opens a layer for reading.
            </summary>
      <param name="path">Path to the file.</param>
      <param name="options">Driver-specific options.</param>
      <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
    </member>
    <member name="M:Aspose.Gis.Formats.Kml.KmlDriver.OpenLayer(Aspose.Gis.AbstractPath,Aspose.Gis.Formats.Kml.KmlOptions)">
      <summary>
            Opens a layer for reading.
            </summary>
      <param name="path">Path to the file.</param>
      <param name="options">Driver-specific options.</param>
      <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
    </member>
    <member name="M:Aspose.Gis.Formats.Kml.KmlDriver.CreateLayer(System.String,Aspose.Gis.Formats.Kml.KmlOptions)">
      <summary>
            Creates a layer and opens it for adding new features.
            </summary>
      <param name="path">Path to the file.</param>
      <param name="options">Driver-specific options.</param>
      <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
      <exception cref="T:System.InvalidOperationException">The layer already exists.</exception>
    </member>
    <member name="M:Aspose.Gis.Formats.Kml.KmlDriver.CreateLayer(Aspose.Gis.AbstractPath,Aspose.Gis.Formats.Kml.KmlOptions)">
      <summary>
            Creates a layer and opens it for adding new features.
            </summary>
      <param name="path">Path to the file.</param>
      <param name="options">Driver-specific options.</param>
      <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
      <exception cref="T:System.InvalidOperationException">The layer already exists.</exception>
    </member>
    <member name="M:Aspose.Gis.Formats.Kml.KmlDriver.CreateLayer(Aspose.Gis.AbstractPath,Aspose.Gis.DriverOptions,Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
      <summary>
            Creates a layer and opens it for adding new features.
            </summary>
      <param name="path">Path to the file.</param>
      <param name="options">Driver-specific options.</param>
      <param name="spatialReferenceSystem">Spatial reference system.</param>
      <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
      <exception cref="T:System.InvalidOperationException">The layer already exists.</exception>
    </member>
    <member name="M:Aspose.Gis.Formats.Kml.KmlDriver.CreateLayer(Aspose.Gis.AbstractPath,Aspose.Gis.Formats.Kml.KmlOptions,Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
      <summary>
            Creates a layer and opens it for adding new features.
            </summary>
      <param name="path">Path to the file.</param>
      <param name="options">Driver-specific options.</param>
      <param name="spatialReferenceSystem">Spatial reference system.</param>
      <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
      <exception cref="T:System.InvalidOperationException">The layer already exists.</exception>
      <exception cref="T:System.NotSupportedException">Spatial reference system is not supported by the driver.</exception>
    </member>
    <member name="T:Aspose.Gis.Formats.Kml.KmlOptions">
      <summary>
            Driver-specific options for KML format.
            </summary>
    </member>
    <member name="M:Aspose.Gis.Formats.Kml.KmlOptions.#ctor">
      <summary>
            Create new instance.
            </summary>
    </member>
    <member name="T:Aspose.Gis.Formats.Kml.NamespaceDoc">
      <summary>
        <c>Aspose.Gis.Formats.Kml</c> namespace provides classes for working with KML format.
            </summary>
    </member>
    <member name="T:Aspose.Gis.Formats.MapInfoInterchange.MapInfoInterchangeDriver">
      <summary>
            A driver for the MapInfo Interchange Format.
            </summary>
    </member>
    <member name="M:Aspose.Gis.Formats.MapInfoInterchange.MapInfoInterchangeDriver.SupportsSpatialReferenceSystem(Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
      <summary>
            Determines, whether specified spatial reference system is supported by the driver.
            </summary>
      <param name="spatialReferenceSystem">Spatial reference system.</param>
      <returns>Boolean value, indicating whether specified spatial reference system is supported by the driver.</returns>
    </member>
    <member name="P:Aspose.Gis.Formats.MapInfoInterchange.MapInfoInterchangeDriver.CanCreateLayers">
      <summary>
            Gets a value indicating whether this driver can create vector layers.
            </summary>
      <value>
        <see langword="true" />, if this driver can create vector layers; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:Aspose.Gis.Formats.MapInfoInterchange.MapInfoInterchangeDriver.CanOpenLayers">
      <summary>
            Gets a value indicating whether this driver can open vector layers.
            </summary>
      <value>
        <see langword="true" />, if this driver can open vector layers; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:Aspose.Gis.Formats.MapInfoInterchange.MapInfoInterchangeDriver.CanCreateDatasets">
      <summary>
            Gets a value indicating whether this driver can create datasets.
            </summary>
      <value>
        <see langword="true" />, if this driver can create datasets; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="M:Aspose.Gis.Formats.MapInfoInterchange.MapInfoInterchangeDriver.OpenLayer(System.String,Aspose.Gis.Formats.MapInfoInterchange.MapInfoInterchangeOptions)">
      <summary>
            Opens a layer for reading.
            </summary>
      <param name="path">Path to the file.</param>
      <param name="options">Driver-specific options.</param>
      <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
    </member>
    <member name="M:Aspose.Gis.Formats.MapInfoInterchange.MapInfoInterchangeDriver.OpenLayer(Aspose.Gis.AbstractPath,Aspose.Gis.DriverOptions)">
      <summary>
            Opens a layer for reading.
            </summary>
      <param name="path">Path to the file.</param>
      <param name="options">Driver-specific options.</param>
      <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
    </member>
    <member name="M:Aspose.Gis.Formats.MapInfoInterchange.MapInfoInterchangeDriver.OpenLayer(Aspose.Gis.AbstractPath,Aspose.Gis.Formats.MapInfoInterchange.MapInfoInterchangeOptions)">
      <summary>
            Opens a layer for reading.
            </summary>
      <param name="path">Path to the file.</param>
      <param name="options">Driver-specific options.</param>
      <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
    </member>
    <member name="M:Aspose.Gis.Formats.MapInfoInterchange.MapInfoInterchangeDriver.CreateLayer(System.String,Aspose.Gis.Formats.MapInfoInterchange.MapInfoInterchangeOptions)">
      <summary>
            Creates a layer and opens it for adding new features.
            </summary>
      <param name="path">Path to the file.</param>
      <param name="options">Driver-specific options.</param>
      <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
      <exception cref="T:System.InvalidOperationException">The layer already exists.</exception>
    </member>
    <member name="M:Aspose.Gis.Formats.MapInfoInterchange.MapInfoInterchangeDriver.CreateLayer(Aspose.Gis.AbstractPath,Aspose.Gis.DriverOptions,Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
      <summary>
            Creates a layer and opens it for adding new features.
            </summary>
      <param name="path">Path to the file.</param>
      <param name="options">Driver-specific options.</param>
      <param name="spatialReferenceSystem">Spatial reference system.</param>
      <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
      <exception cref="T:System.InvalidOperationException">The layer already exists.</exception>
    </member>
    <member name="M:Aspose.Gis.Formats.MapInfoInterchange.MapInfoInterchangeDriver.CreateLayer(System.String,Aspose.Gis.Formats.MapInfoInterchange.MapInfoInterchangeOptions,Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
      <summary>
            Creates a layer and opens it for adding new features.
            </summary>
      <param name="path">Path to the file.</param>
      <param name="options">Driver-specific options.</param>
      <param name="spatialReferenceSystem">Spatial reference system.</param>
      <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
      <exception cref="T:System.InvalidOperationException">The layer already exists.</exception>
      <exception cref="T:System.NotSupportedException">Spatial reference system is not supported by the driver.</exception>
    </member>
    <member name="T:Aspose.Gis.Formats.MapInfoInterchange.MapInfoInterchangeOptions">
      <summary>
            Driver-specific options for MapInfo Interchange format.
            </summary>
    </member>
    <member name="M:Aspose.Gis.Formats.MapInfoInterchange.MapInfoInterchangeOptions.#ctor">
      <summary>
            Create new instance.
            </summary>
    </member>
    <member name="P:Aspose.Gis.Formats.MapInfoInterchange.MapInfoInterchangeOptions.TextStringAttribute">
      <summary>
            Specifies name of the attribute that represents text of 'Text' graphical object.
            </summary>
      <remarks>
            MapInfo Interchange Format specifies a graphical object of type 'Text'.
            'Text' graphical object represents a label on a map. We export 'Text' graphical objects as
            a <see cref="T:Aspose.Gis.Feature" /> with <see cref="T:Aspose.Gis.Geometries.Polygon" /> geometry that bounds the label.
            Text of the label is exported as <see cref="T:Aspose.Gis.FeatureAttribute" />.
            This property specifies the name of the attribute that is used to export text of the label.
            Default value is <c>"textstring"</c>.
            </remarks>
    </member>
    <member name="T:Aspose.Gis.Formats.MapInfoInterchange.NamespaceDoc">
      <summary>
        <c>Aspose.Gis.Formats.MapInfoInterchange</c> namespace provides classes for working with MapInfo Interchange Format.
            </summary>
    </member>
    <member name="T:Aspose.Gis.Formats.MapInfoTab.MapInfoTabDriver">
      <summary>
            A driver for the MapInfo Tab format.
            </summary>
    </member>
    <member name="M:Aspose.Gis.Formats.MapInfoTab.MapInfoTabDriver.SupportsSpatialReferenceSystem(Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
      <summary>
            Determines, whether specified spatial reference system is supported by the driver.
            </summary>
      <param name="spatialReferenceSystem">Spatial reference system.</param>
      <returns>Boolean value, indicating whether specified spatial reference system is supported by the driver.</returns>
    </member>
    <member name="P:Aspose.Gis.Formats.MapInfoTab.MapInfoTabDriver.CanCreateLayers">
      <summary>
            Gets a value indicating whether this driver can create vector layers.
            </summary>
      <value>
        <see langword="true" />, if this driver can create vector layers; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:Aspose.Gis.Formats.MapInfoTab.MapInfoTabDriver.CanOpenLayers">
      <summary>
            Gets a value indicating whether this driver can open vector layers.
            </summary>
      <value>
        <see langword="true" />, if this driver can open vector layers; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:Aspose.Gis.Formats.MapInfoTab.MapInfoTabDriver.CanCreateDatasets">
      <summary>
            Gets a value indicating whether this driver can create datasets.
            </summary>
      <value>
        <see langword="true" />, if this driver can create datasets; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="M:Aspose.Gis.Formats.MapInfoTab.MapInfoTabDriver.OpenLayer(System.String,Aspose.Gis.Formats.MapInfoTab.MapInfoTabOptions)">
      <summary>
            Opens a layer for reading.
            </summary>
      <param name="path">Path to the file.</param>
      <param name="options">Driver-specific options.</param>
      <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
    </member>
    <member name="M:Aspose.Gis.Formats.MapInfoTab.MapInfoTabDriver.OpenLayer(Aspose.Gis.AbstractPath,Aspose.Gis.DriverOptions)">
      <summary>
            Opens a layer for reading.
            </summary>
      <param name="path">Path to the file.</param>
      <param name="options">Driver-specific options.</param>
      <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
    </member>
    <member name="M:Aspose.Gis.Formats.MapInfoTab.MapInfoTabDriver.OpenLayer(Aspose.Gis.AbstractPath,Aspose.Gis.Formats.MapInfoTab.MapInfoTabOptions)">
      <summary>
            Opens a layer for reading.
            </summary>
      <param name="path">Path to the file.</param>
      <param name="options">Driver-specific options.</param>
      <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
    </member>
    <member name="M:Aspose.Gis.Formats.MapInfoTab.MapInfoTabDriver.CreateLayer(System.String,Aspose.Gis.Formats.MapInfoTab.MapInfoTabOptions)">
      <summary>
            Creates a layer and opens it for adding new features.
            </summary>
      <param name="path">Path to the file.</param>
      <param name="options">Driver-specific options.</param>
      <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
      <exception cref="T:System.InvalidOperationException">The layer already exists.</exception>
    </member>
    <member name="M:Aspose.Gis.Formats.MapInfoTab.MapInfoTabDriver.CreateLayer(Aspose.Gis.AbstractPath,Aspose.Gis.DriverOptions,Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
      <summary>
            Creates a layer and opens it for adding new features.
            </summary>
      <param name="path">Path to the file.</param>
      <param name="options">Driver-specific options.</param>
      <param name="spatialReferenceSystem">Spatial reference system.</param>
      <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
      <exception cref="T:System.InvalidOperationException">The layer already exists.</exception>
    </member>
    <member name="M:Aspose.Gis.Formats.MapInfoTab.MapInfoTabDriver.CreateLayer(System.String,Aspose.Gis.Formats.MapInfoTab.MapInfoTabOptions,Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
      <summary>
            Creates a layer and opens it for adding new features.
            </summary>
      <param name="path">Path to the file.</param>
      <param name="options">Driver-specific options.</param>
      <param name="spatialReferenceSystem">Spatial reference system.</param>
      <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
      <exception cref="T:System.InvalidOperationException">The layer already exists.</exception>
      <exception cref="T:System.NotSupportedException">Spatial reference system is not supported by the driver.</exception>
    </member>
    <member name="T:Aspose.Gis.Formats.MapInfoTab.MapInfoTabOptions">
      <summary>
            Driver-specific options for MapInfo Tab format.
            </summary>
    </member>
    <member name="M:Aspose.Gis.Formats.MapInfoTab.MapInfoTabOptions.#ctor">
      <summary>
            Create new instance.
            </summary>
    </member>
    <member name="P:Aspose.Gis.Formats.MapInfoTab.MapInfoTabOptions.TextStringAttribute">
      <summary>
            Specifies name of the attribute that represents text of 'Text' graphical object.
            </summary>
      <remarks>
            MapInfo Tab Format specifies a graphical object of type 'Text'.
            'Text' graphical object represents a label on a map. We export 'Text' graphical objects as
            a <see cref="T:Aspose.Gis.Feature" /> with <see cref="T:Aspose.Gis.Geometries.Polygon" /> geometry that bounds the label.
            Text of the label is exported as <see cref="T:Aspose.Gis.FeatureAttribute" />.
            This property specifies the name of the attribute that is used to export text of the label.
            Default value is <c>"textstring"</c>.
            </remarks>
    </member>
    <member name="T:Aspose.Gis.Formats.MapInfoTab.NamespaceDoc">
      <summary>
        <c>Aspose.Gis.Formats.MapInfoTab</c> namespace provides classes for working with MapInfo Tab format.
            </summary>
    </member>
    <member name="T:Aspose.Gis.Formats.NamespaceGroupDoc">
      <summary>
        <c>Aspose.Gis.Formats</c> namespace provides classes for working with specific GIS formats.
            </summary>
    </member>
    <member name="T:Aspose.Gis.Formats.OsmXml.NamespaceDoc">
      <summary>
        <c>Aspose.Gis.Formats.OsmXml</c> namespace provides classes for working with OSM XML format.
            </summary>
    </member>
    <member name="T:Aspose.Gis.Formats.OsmXml.OsmXmlDriver">
      <summary>
            A driver for the OSM XML format.
            </summary>
    </member>
    <member name="M:Aspose.Gis.Formats.OsmXml.OsmXmlDriver.SupportsSpatialReferenceSystem(Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
      <summary>
            Determines, whether specified spatial reference system is supported by the driver.
            </summary>
      <param name="spatialReferenceSystem">Spatial reference system.</param>
      <returns>Boolean value, indicating whether specified spatial reference system is supported by the driver.</returns>
      <remarks>
            For OSM XML, the only supported spatial reference system is WGS84.
            </remarks>
    </member>
    <member name="P:Aspose.Gis.Formats.OsmXml.OsmXmlDriver.CanCreateLayers">
      <summary>
            Gets a value indicating whether this driver can create vector layers.
            </summary>
      <value>
        <see langword="true" />, if this driver can create vector layers; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:Aspose.Gis.Formats.OsmXml.OsmXmlDriver.CanOpenLayers">
      <summary>
            Gets a value indicating whether this driver can open vector layers.
            </summary>
      <value>
        <see langword="true" />, if this driver can open vector layers; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:Aspose.Gis.Formats.OsmXml.OsmXmlDriver.CanCreateDatasets">
      <summary>
            Gets a value indicating whether this driver can create datasets.
            </summary>
      <value>
        <see langword="true" />, if this driver can create datasets; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="M:Aspose.Gis.Formats.OsmXml.OsmXmlDriver.OpenLayer(System.String,Aspose.Gis.Formats.OsmXml.OsmXmlOptions)">
      <summary>
            Opens a layer for reading.
            </summary>
      <param name="path">Path to the file.</param>
      <param name="options">Driver-specific options.</param>
      <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
    </member>
    <member name="M:Aspose.Gis.Formats.OsmXml.OsmXmlDriver.OpenLayer(Aspose.Gis.AbstractPath,Aspose.Gis.DriverOptions)">
      <summary>
            Opens a layer for reading.
            </summary>
      <param name="path">Path to the file.</param>
      <param name="options">Driver-specific options.</param>
      <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
    </member>
    <member name="M:Aspose.Gis.Formats.OsmXml.OsmXmlDriver.OpenLayer(Aspose.Gis.AbstractPath,Aspose.Gis.Formats.OsmXml.OsmXmlOptions)">
      <summary>
            Opens a layer for reading.
            </summary>
      <param name="path">Path to the file.</param>
      <param name="options">Driver-specific options.</param>
      <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
    </member>
    <member name="M:Aspose.Gis.Formats.OsmXml.OsmXmlDriver.CreateLayer(System.String,Aspose.Gis.Formats.OsmXml.OsmXmlOptions)">
      <summary>
            Creates a layer and opens it for adding new features.
            </summary>
      <param name="path">Path to the file.</param>
      <param name="options">Driver-specific options.</param>
      <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
      <exception cref="T:System.InvalidOperationException">The layer already exists.</exception>
    </member>
    <member name="M:Aspose.Gis.Formats.OsmXml.OsmXmlDriver.CreateLayer(Aspose.Gis.AbstractPath,Aspose.Gis.DriverOptions,Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
      <summary>
            Creates a layer and opens it for adding new features.
            </summary>
      <param name="path">Path to the file.</param>
      <param name="options">Driver-specific options.</param>
      <param name="spatialReferenceSystem">Spatial reference system.</param>
      <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
      <exception cref="T:System.InvalidOperationException">The layer already exists.</exception>
    </member>
    <member name="M:Aspose.Gis.Formats.OsmXml.OsmXmlDriver.CreateLayer(System.String,Aspose.Gis.Formats.OsmXml.OsmXmlOptions,Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
      <summary>
            Creates a layer and opens it for adding new features.
            </summary>
      <param name="path">Path to the file.</param>
      <param name="options">Driver-specific options.</param>
      <param name="spatialReferenceSystem">Spatial reference system.</param>
      <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
      <exception cref="T:System.InvalidOperationException">The layer already exists.</exception>
      <exception cref="T:System.NotSupportedException">Spatial reference system is not supported by the driver.</exception>
    </member>
    <member name="T:Aspose.Gis.Formats.OsmXml.OsmXmlOptions">
      <summary>
            Driver-specific options for OSM XML format.
            </summary>
    </member>
    <member name="M:Aspose.Gis.Formats.OsmXml.OsmXmlOptions.#ctor">
      <summary>
            Create new instance.
            </summary>
    </member>
    <member name="P:Aspose.Gis.Formats.OsmXml.OsmXmlOptions.ReportAllNodes">
      <summary>
            Report all nodes as features, even if they don't have any significant tags.
            </summary>
    </member>
    <member name="P:Aspose.Gis.Formats.OsmXml.OsmXmlOptions.ReportAllWays">
      <summary>
            Report all ways as features, even if they don't have any significant tags or don't have any nodes.
            </summary>
    </member>
    <member name="P:Aspose.Gis.Formats.OsmXml.OsmXmlOptions.ReportCommonAttributes">
      <summary>
            Report common OSM attributes: visible, version, changeset, timestamp, user and uid.
            Common attributes will be reported as feature attributes with "osm_" prefix, e.g. osm_user, osm_timestamp, etc.
            </summary>
    </member>
    <member name="T:Aspose.Gis.Formats.PostGis.NamespaceDoc">
      <summary>
        <c>Aspose.Gis.Formats.PostGis</c> namespace provides classes for working with PostGIS database.
            </summary>
    </member>
    <member name="T:Aspose.Gis.Formats.PostGis.PostGisDriver">
      <summary>
            A driver for the PostGIS database.
            </summary>
    </member>
    <member name="M:Aspose.Gis.Formats.PostGis.PostGisDriver.OpenDataset(System.Data.IDbConnection)">
      <summary>
            Opens the dataset.
            </summary>
      <param name="connection">Opened connection to the database.</param>
      <returns>An instance of <see cref="T:Aspose.Gis.Dataset" />.</returns>
      <exception cref="T:System.ArgumentNullException">The connection is <see langword="null" />.</exception>
      <exception cref="T:Aspose.Gis.GisException">Error reading the dataset.</exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
    </member>
    <member name="T:Aspose.Gis.Formats.PostGis.PostGisOptions">
      <summary>
            Driver-specific options for PostGis format.
            At the moment, the driver provides no customizable options.
            </summary>
    </member>
    <member name="M:Aspose.Gis.Formats.PostGis.PostGisOptions.#ctor">
      <summary>
            Create new instance.
            </summary>
    </member>
    <member name="T:Aspose.Gis.Formats.Shapefile.NamespaceDoc">
      <summary>
        <c>Aspose.Gis.Formats.Shapefile</c> namespace provides classes for working with Shapefile format.
            </summary>
    </member>
    <member name="T:Aspose.Gis.Formats.Shapefile.ShapefileDriver">
      <summary>
            A driver for the Shapefile format.
            </summary>
    </member>
    <member name="M:Aspose.Gis.Formats.Shapefile.ShapefileDriver.SupportsSpatialReferenceSystem(Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
      <summary>
            Determines, whether specified spatial reference system is supported by the driver.
            </summary>
      <param name="spatialReferenceSystem">Spatial reference system.</param>
      <returns>Boolean value, indicating whether specified spatial reference system is supported by the driver.</returns>
      <remarks>
            For Shapefile, any SRS is supported.
            </remarks>
    </member>
    <member name="P:Aspose.Gis.Formats.Shapefile.ShapefileDriver.CanCreateLayers">
      <summary>
            Gets a value indicating whether this driver can create vector layers.
            </summary>
      <value>
        <see langword="true" />, if this driver can create vector layers; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:Aspose.Gis.Formats.Shapefile.ShapefileDriver.CanOpenLayers">
      <summary>
            Gets a value indicating whether this driver can open vector layers.
            </summary>
      <value>
        <see langword="true" />, if this driver can open vector layers; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:Aspose.Gis.Formats.Shapefile.ShapefileDriver.CanCreateDatasets">
      <summary>
            Gets a value indicating whether this driver can create datasets.
            </summary>
      <value>
        <see langword="true" />, if this driver can create datasets; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="M:Aspose.Gis.Formats.Shapefile.ShapefileDriver.OpenLayer(System.String,Aspose.Gis.Formats.Shapefile.ShapefileOptions)">
      <summary>
            Opens a layer for reading.
            </summary>
      <param name="path">Path to the file.</param>
      <param name="options">Driver-specific options.</param>
      <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
    </member>
    <member name="M:Aspose.Gis.Formats.Shapefile.ShapefileDriver.OpenLayer(Aspose.Gis.AbstractPath,Aspose.Gis.DriverOptions)">
      <summary>
            Opens a layer for reading.
            </summary>
      <param name="path">Path to the file.</param>
      <param name="options">Driver-specific options.</param>
      <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
    </member>
    <member name="M:Aspose.Gis.Formats.Shapefile.ShapefileDriver.OpenLayer(Aspose.Gis.AbstractPath,Aspose.Gis.Formats.Shapefile.ShapefileOptions)">
      <summary>
            Opens a layer for reading.
            </summary>
      <param name="path">Path to the file.</param>
      <param name="options">Driver-specific options.</param>
      <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
    </member>
    <member name="M:Aspose.Gis.Formats.Shapefile.ShapefileDriver.CreateLayer(System.String,Aspose.Gis.Formats.Shapefile.ShapefileOptions)">
      <summary>
            Creates a layer and opens it for adding new features.
            </summary>
      <param name="path">Path to the file.</param>
      <param name="options">Driver-specific options.</param>
      <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
      <exception cref="T:System.InvalidOperationException">The layer already exists.</exception>
    </member>
    <member name="M:Aspose.Gis.Formats.Shapefile.ShapefileDriver.CreateLayer(Aspose.Gis.AbstractPath,Aspose.Gis.Formats.Shapefile.ShapefileOptions)">
      <summary>
            Creates a layer and opens it for adding new features.
            </summary>
      <param name="path">Path to the file.</param>
      <param name="options">Driver-specific options.</param>
      <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
      <exception cref="T:System.InvalidOperationException">The layer already exists.</exception>
    </member>
    <member name="M:Aspose.Gis.Formats.Shapefile.ShapefileDriver.CreateLayer(Aspose.Gis.AbstractPath,Aspose.Gis.DriverOptions,Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
      <summary>
            Creates a layer and opens it for adding new features.
            </summary>
      <param name="path">Path to the file.</param>
      <param name="options">Driver-specific options.</param>
      <param name="spatialReferenceSystem">Spatial reference system.</param>
      <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
      <exception cref="T:System.InvalidOperationException">The layer already exists.</exception>
    </member>
    <member name="M:Aspose.Gis.Formats.Shapefile.ShapefileDriver.CreateLayer(Aspose.Gis.AbstractPath,Aspose.Gis.Formats.Shapefile.ShapefileOptions,Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
      <summary>
            Creates a layer and opens it for adding new features.
            </summary>
      <param name="path">Path to the file.</param>
      <param name="options">Driver-specific options.</param>
      <param name="spatialReferenceSystem">Spatial reference system.</param>
      <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
      <exception cref="T:System.InvalidOperationException">The layer already exists.</exception>
      <exception cref="T:System.NotSupportedException">Spatial reference system is not supported by the driver.</exception>
    </member>
    <member name="T:Aspose.Gis.Formats.Shapefile.ShapefileOptions">
      <summary>
            Driver-specific options for Shapefile format.
            At the moment, the driver provides no customizable options.
            </summary>
    </member>
    <member name="M:Aspose.Gis.Formats.Shapefile.ShapefileOptions.#ctor">
      <summary>
            Create new instance.
            </summary>
    </member>
    <member name="T:Aspose.Gis.Formats.SqlServer.NamespaceDoc">
      <summary>
        <c>Aspose.Gis.Formats.SqlServer</c> namespace provides classes for working with SQL Server.
            </summary>
    </member>
    <member name="T:Aspose.Gis.Formats.SqlServer.SqlServerDriver">
      <summary>
            A driver for the SQL Server database.
            </summary>
    </member>
    <member name="M:Aspose.Gis.Formats.SqlServer.SqlServerDriver.OpenDataset(System.Data.IDbConnection)">
      <summary>
            Opens the dataset.
            </summary>
      <param name="connection">Opened connection to the database.</param>
      <returns>An instance of <see cref="T:Aspose.Gis.Dataset" />.</returns>
      <exception cref="T:System.ArgumentNullException">The connection is <see langword="null" />.</exception>
      <exception cref="T:Aspose.Gis.GisException">Error reading the dataset.</exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
    </member>
    <member name="T:Aspose.Gis.Formats.TopoJson.NamespaceDoc">
      <summary>
        <c>Aspose.Gis.Formats.TopoJson</c> namespace provides classes for working with TopoJSON format.
            </summary>
    </member>
    <member name="T:Aspose.Gis.Formats.TopoJson.TopoJsonDriver">
      <summary>
            A driver for the TopoJSON format.
            </summary>
    </member>
    <member name="M:Aspose.Gis.Formats.TopoJson.TopoJsonDriver.SupportsSpatialReferenceSystem(Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
      <summary>
            Determines, whether specified spatial reference system is supported by the driver.
            </summary>
      <param name="spatialReferenceSystem">Spatial reference system.</param>
      <returns>
            Boolean value, indicating whether specified spatial reference system is supported by the driver.
            </returns>
      <remarks>
            For TopoJSON, the only supported spatial reference system is 'null', since there is no way to store
            spatial reference system information in TopoJSON file and TopoJSON specification does not specify what
            is the spatial reference system of geometries in TopoJSON file.
            </remarks>
    </member>
    <member name="P:Aspose.Gis.Formats.TopoJson.TopoJsonDriver.CanCreateLayers">
      <summary>
            Gets a value indicating whether this driver can create vector layers.
            </summary>
      <value>
        <see langword="true" />, if this driver can create vector layers; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:Aspose.Gis.Formats.TopoJson.TopoJsonDriver.CanOpenLayers">
      <summary>
            Gets a value indicating whether this driver can open vector layers.
            </summary>
      <value>
        <see langword="true" />, if this driver can open vector layers; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:Aspose.Gis.Formats.TopoJson.TopoJsonDriver.CanCreateDatasets">
      <summary>
            Gets a value indicating whether this driver can create datasets.
            </summary>
      <value>
        <see langword="true" />, if this driver can create datasets; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="M:Aspose.Gis.Formats.TopoJson.TopoJsonDriver.OpenLayer(System.String,Aspose.Gis.Formats.TopoJson.TopoJsonOptions)">
      <summary>
            Opens a layer for reading.
            </summary>
      <param name="path">Path to the file.</param>
      <param name="options">Driver-specific options.</param>
      <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
    </member>
    <member name="M:Aspose.Gis.Formats.TopoJson.TopoJsonDriver.OpenLayer(Aspose.Gis.AbstractPath,Aspose.Gis.DriverOptions)">
      <summary>
            Opens a layer for reading.
            </summary>
      <param name="path">Path to the file.</param>
      <param name="options">Driver-specific options.</param>
      <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
    </member>
    <member name="M:Aspose.Gis.Formats.TopoJson.TopoJsonDriver.OpenLayer(Aspose.Gis.AbstractPath,Aspose.Gis.Formats.TopoJson.TopoJsonOptions)">
      <summary>
            Opens a layer for reading.
            </summary>
      <param name="path">Path to the file.</param>
      <param name="options">Driver-specific options.</param>
      <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
    </member>
    <member name="M:Aspose.Gis.Formats.TopoJson.TopoJsonDriver.CreateLayer(System.String,Aspose.Gis.Formats.TopoJson.TopoJsonOptions)">
      <summary>
            Creates a layer and opens it for adding new features.
            </summary>
      <param name="path">Path to the file.</param>
      <param name="options">Driver-specific options.</param>
      <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
      <exception cref="T:System.InvalidOperationException">The layer already exists.</exception>
    </member>
    <member name="M:Aspose.Gis.Formats.TopoJson.TopoJsonDriver.CreateLayer(Aspose.Gis.AbstractPath,Aspose.Gis.Formats.TopoJson.TopoJsonOptions)">
      <summary>
            Creates a layer and opens it for adding new features.
            </summary>
      <param name="path">Path to the file.</param>
      <param name="options">Driver-specific options.</param>
      <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
      <exception cref="T:System.InvalidOperationException">The layer already exists.</exception>
    </member>
    <member name="M:Aspose.Gis.Formats.TopoJson.TopoJsonDriver.CreateLayer(Aspose.Gis.AbstractPath,Aspose.Gis.DriverOptions,Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
      <summary>
            Creates a layer and opens it for adding new features.
            </summary>
      <param name="path">Path to the file.</param>
      <param name="options">Driver-specific options.</param>
      <param name="spatialReferenceSystem">Spatial reference system.</param>
      <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
      <exception cref="T:System.InvalidOperationException">The layer already exists.</exception>
    </member>
    <member name="M:Aspose.Gis.Formats.TopoJson.TopoJsonDriver.CreateLayer(Aspose.Gis.AbstractPath,Aspose.Gis.Formats.TopoJson.TopoJsonOptions,Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
      <summary>
            Creates a layer and opens it for adding new features.
            </summary>
      <param name="path">Path to the file.</param>
      <param name="options">Driver-specific options.</param>
      <param name="spatialReferenceSystem">Spatial reference system.</param>
      <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
      <exception cref="T:System.InvalidOperationException">The layer already exists.</exception>
      <exception cref="T:System.NotSupportedException">Spatial reference system is not supported by the driver.</exception>
    </member>
    <member name="T:Aspose.Gis.Formats.TopoJson.TopoJsonOptions">
      <summary>
            Driver-specific options for TopoJSON format.
            </summary>
    </member>
    <member name="M:Aspose.Gis.Formats.TopoJson.TopoJsonOptions.#ctor">
      <summary>
            Create new instance.
            </summary>
    </member>
    <member name="P:Aspose.Gis.Formats.TopoJson.TopoJsonOptions.NestedPropertiesSeparator">
      <summary>
            Gets or sets a string that is used to separate components of nested attributes.
            Default is "_".
            </summary>
      <remarks>
            This is reading option - it does not affect writing.
            </remarks>
    </member>
    <member name="P:Aspose.Gis.Formats.TopoJson.TopoJsonOptions.ObjectNameAttribute">
      <summary>
            Name of the attribute, that reflects the name of the object that contains a feature.
            </summary>
      <remarks>
            TopoJSON may contain any number of named objects. Every such object can contain
            multiple features. Refer to TopoJSON specification to more detail on named objects.
            When reading TopoJSON, this property specifies, what attribute should reflect name of the object that contains a feature.
            When writing TopoJSON, this property specifies, what attribute should be used to group features in objects.
            Default is "topojson_object_name".
            </remarks>
    </member>
    <member name="P:Aspose.Gis.Formats.TopoJson.TopoJsonOptions.DefaultObjectName">
      <summary>
            Name of the object where features are put by default.
            </summary>
      <remarks>
            This is writing option - it does not affect reading.
            TopoJSON may contain any number of named objects. Every such object can contain
            multiple features. In order to specify in which object to put your feature, use
            <see cref="P:Aspose.Gis.Formats.TopoJson.TopoJsonOptions.ObjectNameAttribute" /> property.
            If attribute with name <see cref="P:Aspose.Gis.Formats.TopoJson.TopoJsonOptions.ObjectNameAttribute" /> is <see langword="null" />  or unset for
            some feature, this feature is added to object with the name <see cref="P:Aspose.Gis.Formats.TopoJson.TopoJsonOptions.DefaultObjectName" />.
            If attribute with name <see cref="P:Aspose.Gis.Formats.TopoJson.TopoJsonOptions.ObjectNameAttribute" /> is not present in <see cref="P:Aspose.Gis.VectorLayer.Attributes" />
            collection, all features are put into object with name <see cref="P:Aspose.Gis.Formats.TopoJson.TopoJsonOptions.ObjectNameAttribute" />.
            Default value is "unnamed".
            </remarks>
    </member>
    <member name="P:Aspose.Gis.Formats.TopoJson.TopoJsonOptions.Transform">
      <summary>
            Specifies transform object to use to quantize coordinates and delta-encode arcs in output TopoJSON.
            </summary>
      <remarks>
            This is writing option - it does not affect reading.
            This option is mutually exclusive with <see cref="P:Aspose.Gis.Formats.TopoJson.TopoJsonOptions.QuantizationNumber" /> - only one of this two options can be not <see langword="null" />.
            If this is not <see langword="null" /> - output TopoJSON coordinates are quantized and arcs are delta-encoded with the specified
            transform object.
            Refer to TopoJSON specification for more details on transform object.
            Defaults to <see langword="null" />.
            </remarks>
    </member>
    <member name="P:Aspose.Gis.Formats.TopoJson.TopoJsonOptions.QuantizationNumber">
      <summary>
            Specifies quantization number to use to quantize coordinates and delta-encode arcs in output TopoJSON.
            </summary>
      <remarks>
            This is writing option - it does not affect reading.
            This option is mutually exclusive with <see cref="P:Aspose.Gis.Formats.TopoJson.TopoJsonOptions.Transform" /> - only one of this two options can be not <see langword="null" />.
            If this is not <see langword="null" /> - output TopoJSON coordinates are quantized and arcs are delta-encoded with the specified
            quantization number. Quantization number determines the maximum number of expressible values per dimension
            in the resulting quantized coordinates; typically a power of ten is chosen.
            Defaults to <see langword="null" />.
            </remarks>
      <exception cref="T:System.ArgumentOutOfRangeException" accessor="set">
            Argument is less than two.
            </exception>
    </member>
    <member name="T:Aspose.Gis.Formats.TopoJson.TopoJsonTransform">
      <summary>
            A transform object that can be used in order to quantize coordinates when writing a TopoJSON file.
            </summary>
      <remarks>
            Refer to TopoJSON specification for more details on transform object.
            </remarks>
    </member>
    <member name="M:Aspose.Gis.Formats.TopoJson.TopoJsonTransform.#ctor(System.Double,System.Double,System.Double,System.Double)">
      <summary>
            Create new instance of <see cref="T:Aspose.Gis.Formats.TopoJson.TopoJsonTransform" />.
            </summary>
      <param name="xTranslate">Translate to apply to X coordinate.</param>
      <param name="yTranslate">Translate to apply to Y coordinate.</param>
      <param name="xScale">Scale to apply to X coordinate.</param>
      <param name="yScale">Scale to apply to Y coordinate.</param>
      <exception cref="T:System.ArgumentException">One of the scales is equal to 0.</exception>
    </member>
    <member name="P:Aspose.Gis.Formats.TopoJson.TopoJsonTransform.XTranslate">
      <summary>
            Translate to apply to X coordinate.
            </summary>
    </member>
    <member name="P:Aspose.Gis.Formats.TopoJson.TopoJsonTransform.YTranslate">
      <summary>
            Translate to apply to Y coordinate.
            </summary>
    </member>
    <member name="P:Aspose.Gis.Formats.TopoJson.TopoJsonTransform.XScale">
      <summary>
            Scale to apply to X coordinate.
            </summary>
    </member>
    <member name="P:Aspose.Gis.Formats.TopoJson.TopoJsonTransform.YScale">
      <summary>
            Scale to apply to Y coordinate.
            </summary>
    </member>
    <member name="T:Aspose.Gis.Geometries.CircularString">
      <summary>
            A multi-vertex curve with circular interpolation between points.
            </summary>
      <remarks>
            The <c>CircularString</c> consists of one or more circular arc segments connected end to end.
            The first three points define the first segment. The first point is the start point of the arc.
            The second point is any intermediate point on the arc other than the start or end point.
            The third point is the end of the arc. Subsequent arcs are defined by their intermediate and end points only,
            as the start point is implicitly defined as the previous segment's end point.
            </remarks>
    </member>
    <member name="M:Aspose.Gis.Geometries.CircularString.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Geometries.CircularString" /> class.
            </summary>
    </member>
    <member name="M:Aspose.Gis.Geometries.CircularString.#ctor(System.Collections.Generic.IEnumerable{Aspose.Gis.Geometries.IPoint})">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Geometries.CircularString" /> class.
            </summary>
      <param name="collection">The collection of points.</param>
      <exception cref="T:System.ArgumentNullException">The argument is <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Any point is empty (its <see cref="P:Aspose.Gis.Geometries.IGeometry.IsEmpty" /> is <see langword="true" />).</exception>
    </member>
    <member name="M:Aspose.Gis.Geometries.CircularString.#ctor(Aspose.Gis.Geometries.ICircularString)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Geometries.CircularString" /> class.
            </summary>
      <param name="other">The other string to copy data from.</param>
      <exception cref="T:System.ArgumentNullException">The argument is <see langword="null" />.</exception>
    </member>
    <member name="P:Aspose.Gis.Geometries.CircularString.Count">
      <summary>
            Gets the number of points in the <see cref="T:Aspose.Gis.Geometries.CircularString" />.
            </summary>
    </member>
    <member name="P:Aspose.Gis.Geometries.CircularString.Item(System.Int32)">
      <summary>
            Gets or sets the <see cref="T:Aspose.Gis.Geometries.IPoint" /> at the specified index.
            </summary>
      <value>
            The <see cref="T:Aspose.Gis.Geometries.IPoint" />.
            </value>
      <param name="index">The index.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Index is out of range.</exception>
      <exception cref="T:System.ArgumentNullException" accessor="set">The value is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Point is empty.</exception>
      <exception cref="T:System.ArgumentException" accessor="set">
        <see cref="P:Aspose.Gis.Geometries.IGeometry.SpatialReferenceSystem" /> of this geometry and <see cref="P:Aspose.Gis.Geometries.CircularString.SpatialReferenceSystem" /> of argument are both not <see langword="null" />
            and don't equal to each other.
            </exception>
    </member>
    <member name="P:Aspose.Gis.Geometries.CircularString.GeometryType">
      <summary>
            Gets the type of the geometry.
            </summary>
      <value>
            The type of the geometry.
            </value>
    </member>
    <member name="P:Aspose.Gis.Geometries.CircularString.StartPoint">
      <summary>
            Returns a copy of the starting point of the curve.
            </summary>
      <exception cref="T:System.InvalidOperationException" accessor="get">The geometry is empty.</exception>
    </member>
    <member name="P:Aspose.Gis.Geometries.CircularString.EndPoint">
      <summary>
            Returns a copy of the end point of the curve.
            </summary>
      <exception cref="T:System.InvalidOperationException" accessor="get">The geometry is empty.</exception>
    </member>
    <member name="P:Aspose.Gis.Geometries.CircularString.IsEmpty">
      <summary>
            Gets a value indicating whether this instance is empty.
            </summary>
      <value>
        <see langword="true" /> if this instance is empty; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:Aspose.Gis.Geometries.CircularString.HasM">
      <summary>
            Gets a value indicating whether this instance has M coordinate.
            </summary>
      <value>
        <see langword="true" /> if this instance has M coordinate; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:Aspose.Gis.Geometries.CircularString.HasZ">
      <summary>
            Gets a value indicating whether this instance has Z coordinate.
            </summary>
      <value>
        <see langword="true" /> if this instance has Z coordinate; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:Aspose.Gis.Geometries.CircularString.SpatialReferenceSystem">
      <summary>
            Gets SpatialReferenceSystem of this instance.
            This property can be <see langword="null" />, if SpatialReferenceSystem is unset.
            Assigning new SpatialReferenceSystem will not perform any coordinate transformation, only reference will change.
            </summary>
    </member>
    <member name="P:Aspose.Gis.Geometries.CircularString.HasCurveGeometry">
      <summary>
            Gets a value indicating whether this geometry is or contains curve (not linear) geometry.
            </summary>
      <value>
        <see langword="false" /> if this geometry and all geometries it contains are linear; otherwise, <see langword="true" />.
            </value>
    </member>
    <member name="M:Aspose.Gis.Geometries.CircularString.AddPoint(Aspose.Gis.Geometries.IPoint)">
      <summary>
            Adds a point to the end of the circular string.
            </summary>
      <param name="point">The point to add.</param>
      <exception cref="T:System.ArgumentNullException">The argument is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
            The argument is empty (its <see cref="P:Aspose.Gis.Geometries.IGeometry.IsEmpty" /> is <see langword="true" />).
            </exception>
      <exception cref="T:System.ArgumentException">
        <see cref="P:Aspose.Gis.Geometries.IGeometry.SpatialReferenceSystem" /> of this geometry and <see cref="P:Aspose.Gis.Geometries.CircularString.SpatialReferenceSystem" /> of argument are both not <see langword="null" />
            and don't equal to each other.
            </exception>
    </member>
    <member name="M:Aspose.Gis.Geometries.CircularString.AddPoint(System.Double,System.Double)">
      <summary>
            Adds a point to the end of the circular string.
            </summary>
      <param name="x">The value for X coordinate.</param>
      <param name="y">The value for Y coordinate.</param>
    </member>
    <member name="M:Aspose.Gis.Geometries.CircularString.AddPoint(System.Double,System.Double,System.Double)">
      <summary>
            Adds a point to the end of the circular string.
            </summary>
      <param name="x">The value for X coordinate.</param>
      <param name="y">The value for Y coordinate.</param>
      <param name="z">The value for Z coordinate.</param>
    </member>
    <member name="M:Aspose.Gis.Geometries.CircularString.AddPoint(System.Double,System.Double,System.Double,System.Double)">
      <summary>
            Adds a point to the end of the circular string.
            </summary>
      <param name="x">The value for X coordinate.</param>
      <param name="y">The value for Y coordinate.</param>
      <param name="z">The value for Z coordinate.</param>
      <param name="m">The value for M coordinate.</param>
    </member>
    <member name="M:Aspose.Gis.Geometries.CircularString.SetEmpty">
      <summary>
            Makes this <see cref="T:Aspose.Gis.Geometries.Geometry" /> empty.
            </summary>
    </member>
    <member name="M:Aspose.Gis.Geometries.CircularString.ToEditable">
      <summary>
            Gets an editable copy of this geometry.
            </summary>
      <returns>An editable copy of this geometry.</returns>
    </member>
    <member name="M:Aspose.Gis.Geometries.CircularString.Clone">
      <summary>
            Clones this instance.
            </summary>
      <returns>The clone of this instance</returns>
    </member>
    <member name="M:Aspose.Gis.Geometries.CircularString.GetEnumerator">
      <summary>Returns an enumerator that iterates through the collection.</summary>
      <returns>An enumerator that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:Aspose.Gis.Geometries.CircularString.Equals(System.Object)">
      <summary>Determines whether the specified object is equal to the current object.</summary>
      <param name="obj">The object to compare with the current object. </param>
      <returns>true if the specified object  is equal to the current object; otherwise, false.</returns>
    </member>
    <member name="M:Aspose.Gis.Geometries.CircularString.GetHashCode">
      <summary>Serves as the default hash function. </summary>
      <returns>A hash code for the current object.</returns>
    </member>
    <member name="M:Aspose.Gis.Geometries.CircularString.Equals(Aspose.Gis.Geometries.ICircularString)">
      <summary>Indicates whether the current object is equal to another object of the same type.</summary>
      <param name="other">An object to compare with this object.</param>
      <returns>true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.</returns>
    </member>
    <member name="M:Aspose.Gis.Geometries.CircularString.Reverse">
      <summary>
            Reverses order of points in this <see cref="T:Aspose.Gis.Geometries.CircularString" />.
            </summary>
    </member>
    <member name="M:Aspose.Gis.Geometries.CircularString.op_Equality(Aspose.Gis.Geometries.CircularString,Aspose.Gis.Geometries.CircularString)">
      <summary>
            Implements the operator ==.
            </summary>
      <param name="a">The A instance.</param>
      <param name="b">The B instance.</param>
      <returns>
            The result of the operator.
            </returns>
    </member>
    <member name="M:Aspose.Gis.Geometries.CircularString.op_Inequality(Aspose.Gis.Geometries.CircularString,Aspose.Gis.Geometries.CircularString)">
      <summary>
            Implements the operator !=.
            </summary>
      <param name="a">The A instance.</param>
      <param name="b">The B instance.</param>
      <returns>
            The result of the operator.
            </returns>
    </member>
    <member name="T:Aspose.Gis.Geometries.CompoundCurve">
      <summary>
            A curve that represents a sequence of contiguous curves such that adjacent curves are joined at their end points.
            </summary>
      <remarks>
            Compound curve can not contains other compound curves.
            </remarks>
    </member>
    <member name="M:Aspose.Gis.Geometries.CompoundCurve.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Geometries.CompoundCurve" /> class.
            </summary>
    </member>
    <member name="M:Aspose.Gis.Geometries.CompoundCurve.#ctor(System.Collections.Generic.IEnumerable{Aspose.Gis.Geometries.ICurve})">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Geometries.CompoundCurve" /> class.
            </summary>
      <param name="curves">The collection of curves.</param>
      <exception cref="T:System.ArgumentNullException">The argument or any of its elements is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
            There are at least two not null spatial reference systems that don't equal to each other.
            </exception>
    </member>
    <member name="M:Aspose.Gis.Geometries.CompoundCurve.#ctor(Aspose.Gis.Geometries.ICompoundCurve)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Geometries.CompoundCurve" /> class.
            </summary>
      <param name="other">The other line to copy data from.</param>
      <exception cref="T:System.ArgumentNullException">The argument is <see langword="null" />.</exception>
    </member>
    <member name="P:Aspose.Gis.Geometries.CompoundCurve.Count">
      <summary>
            Gets the number of curves in the <see cref="T:Aspose.Gis.Geometries.ICompoundCurve" />.
            </summary>
    </member>
    <member name="P:Aspose.Gis.Geometries.CompoundCurve.StartPoint">
      <summary>
            Returns a copy of the starting point of the curve.
            </summary>
      <exception cref="T:System.InvalidOperationException">The geometry is empty.</exception>
    </member>
    <member name="P:Aspose.Gis.Geometries.CompoundCurve.EndPoint">
      <summary>
            Returns a copy of the end point of the curve.
            </summary>
      <exception cref="T:System.InvalidOperationException">The geometry is empty.</exception>
    </member>
    <member name="P:Aspose.Gis.Geometries.CompoundCurve.GeometryType">
      <summary>
            Gets the type of the geometry.
            </summary>
      <value>
            The type of the geometry.
            </value>
    </member>
    <member name="P:Aspose.Gis.Geometries.CompoundCurve.IsEmpty">
      <summary>
            Gets a value indicating whether this instance is empty.
            </summary>
      <value>
        <see langword="true" /> if this instance is empty; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:Aspose.Gis.Geometries.CompoundCurve.HasM">
      <summary>
            Gets a value indicating whether this instance has M coordinate.
            </summary>
      <value>
        <see langword="true" /> if this instance has M coordinate; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:Aspose.Gis.Geometries.CompoundCurve.HasZ">
      <summary>
            Gets a value indicating whether this instance has Z coordinate.
            </summary>
      <value>
        <see langword="true" /> if this instance has Z coordinate; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:Aspose.Gis.Geometries.CompoundCurve.SpatialReferenceSystem">
      <summary>
            Gets SpatialReferenceSystem of this instance.
            This property can be <see langword="null" />, if SpatialReferenceSystem is unset.
            Assigning new SpatialReferenceSystem will not perform any coordinate transformation, only reference will change.
            </summary>
    </member>
    <member name="P:Aspose.Gis.Geometries.CompoundCurve.HasCurveGeometry">
      <summary>
            Gets a value indicating whether this geometry is or contains curve (not linear) geometry.
            </summary>
      <value>
        <see langword="false" /> if this geometry and all geometries it contains are linear; otherwise, <see langword="true" />.
            </value>
    </member>
    <member name="P:Aspose.Gis.Geometries.CompoundCurve.Item(System.Int32)">
      <summary>
            Gets the <see cref="T:Aspose.Gis.Geometries.ICurve" /> at the specified index.
            </summary>
      <value>
            The <see cref="T:Aspose.Gis.Geometries.ICurve" />.
            </value>
      <param name="index">The index.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Index is out of range.</exception>
    </member>
    <member name="M:Aspose.Gis.Geometries.CompoundCurve.AddCurve(Aspose.Gis.Geometries.ICurve)">
      <summary>
            Adds a curve to the end of this <see cref="T:Aspose.Gis.Geometries.CompoundCurve" />.
            </summary>
      <param name="curve">Curve to add.</param>
      <exception cref="T:System.ArgumentNullException">Argument is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <ul>
          <li> Arguments type is <see cref="T:Aspose.Gis.Geometries.CompoundCurve" /></li>
          <li> Argument is empty </li>
          <li>
            <see cref="P:Aspose.Gis.Geometries.IGeometry.SpatialReferenceSystem" /> of this geometry and
            <see cref="P:Aspose.Gis.Geometries.CompoundCurve.SpatialReferenceSystem" /> of argument are both not <see langword="null" /> 
            and don't equal to each other </li>
        </ul>
      </exception>
    </member>
    <member name="M:Aspose.Gis.Geometries.CompoundCurve.ToEditable">
      <summary>
            Gets an editable copy of this geometry.
            </summary>
      <returns>An editable copy of this geometry.</returns>
    </member>
    <member name="M:Aspose.Gis.Geometries.CompoundCurve.GetEnumerator">
      <summary>Returns an enumerator that iterates through the collection.</summary>
      <returns>An enumerator that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:Aspose.Gis.Geometries.CompoundCurve.Clone">
      <summary>
            Clones this instance.
            </summary>
      <returns>The clone of this instance</returns>
    </member>
    <member name="M:Aspose.Gis.Geometries.CompoundCurve.SetEmpty">
      <summary>
            Makes this <see cref="T:Aspose.Gis.Geometries.Geometry" /> empty.
            </summary>
    </member>
    <member name="M:Aspose.Gis.Geometries.CompoundCurve.Reverse">
      <summary>
            Reverses this <see cref="T:Aspose.Gis.Geometries.CompoundCurve" />. That is - reverse order of curves and every curve inside this compound curve.
            </summary>
    </member>
    <member name="M:Aspose.Gis.Geometries.CompoundCurve.Equals(System.Object)">
      <summary>Determines whether the specified object is equal to the current object.</summary>
      <param name="obj">The object to compare with the current object. </param>
      <returns>true if the specified object  is equal to the current object; otherwise, false.</returns>
    </member>
    <member name="M:Aspose.Gis.Geometries.CompoundCurve.Equals(Aspose.Gis.Geometries.ICompoundCurve)">
      <summary>Indicates whether the current object is equal to another object of the same type.</summary>
      <param name="other">An object to compare with this object.</param>
      <returns>true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.</returns>
    </member>
    <member name="M:Aspose.Gis.Geometries.CompoundCurve.GetHashCode">
      <summary>Serves as the default hash function. </summary>
      <returns>A hash code for the current object.</returns>
    </member>
    <member name="M:Aspose.Gis.Geometries.CompoundCurve.op_Equality(Aspose.Gis.Geometries.CompoundCurve,Aspose.Gis.Geometries.CompoundCurve)">
      <summary>
            Implements the operator ==.
            </summary>
      <param name="a">The A instance.</param>
      <param name="b">The B instance.</param>
      <returns>
            The result of the operator.
            </returns>
    </member>
    <member name="M:Aspose.Gis.Geometries.CompoundCurve.op_Inequality(Aspose.Gis.Geometries.CompoundCurve,Aspose.Gis.Geometries.CompoundCurve)">
      <summary>
            Implements the operator !=.
            </summary>
      <param name="a">The A instance.</param>
      <param name="b">The B instance.</param>
      <returns>
            The result of the operator.
            </returns>
    </member>
    <member name="T:Aspose.Gis.Geometries.Curve">
      <summary>
            A <see cref="T:Aspose.Gis.Geometries.Curve" /> is a sequence of points.
            </summary>
    </member>
    <member name="P:Aspose.Gis.Geometries.Curve.Dimension">
      <summary>
            Gets the topological dimension of this <see cref="T:Aspose.Gis.Geometries.Geometry" />.
            </summary>
    </member>
    <member name="P:Aspose.Gis.Geometries.Curve.StartPoint">
      <summary>
            Returns a copy of the starting point of the curve.
            </summary>
      <exception cref="T:System.InvalidOperationException">The geometry is empty.</exception>
    </member>
    <member name="P:Aspose.Gis.Geometries.Curve.EndPoint">
      <summary>
            Returns a copy of the end point of the curve.
            </summary>
      <exception cref="T:System.InvalidOperationException">The geometry is empty.</exception>
    </member>
    <member name="P:Aspose.Gis.Geometries.Curve.IsClosed">
      <summary>
            Gets a values indicating whether a curve is closed. 
            A curve is closed if its start point is equal to its end point.
            </summary>
    </member>
    <member name="M:Aspose.Gis.Geometries.Curve.ToEditable">
      <summary>
            Gets an editable copy of this geometry.
            </summary>
      <returns>An editable copy of this geometry.</returns>
    </member>
    <member name="M:Aspose.Gis.Geometries.Curve.ToLinearGeometry">
      <summary>
            Gets approximate or equivalent non-curve version of this geometry using the default <c>tolerance</c>.
            </summary>
      <returns>
            A <see cref="T:Aspose.Gis.Geometries.ILineString" /> that approximates or equivalent to this curve.
            This is the equivalent of <see cref="M:Aspose.Gis.Geometries.ICurve.ToLinearGeometry(System.Double)" /> with
            default <c>tolerance</c>. Default <c>tolerance</c>s value is dependent on <see cref="T:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem" />
            of this geometry:
            <ul><li> For projected SRS Tolerance is 0.001 meters (in SRS units) </li><li> For geographic SRS Tolerance is <c>1e-5</c> degrees (in SRS units) </li><li> For unknown SRS Tolerance is <c>1e-5</c></li></ul>
            For more details on what transformations are applied refer to <see cref="M:Aspose.Gis.Geometries.ICurve.ToLinearGeometry(System.Double)" /> specification.
            </returns>
      <exception cref="T:System.InvalidOperationException">
            This geometry is invalid in a such way, that operation can not be completed.
            </exception>
    </member>
    <member name="M:Aspose.Gis.Geometries.Curve.ToLinearGeometry(System.Double)">
      <summary>
             Gets approximate or equivalent non-curve version of this geometry using the specified <c>tolerance</c>.
             </summary>
      <param name="tolerance">
             The <c>tolerance</c> to use. The result is guaranteed to be less than <c>tolerance</c> away from the
             curved geometry, unless the number of points needed to linearize the geometry exceeds the per-quadrant maximum,
             currently equal to 10000 points.
             </param>
      <returns>
             A <see cref="T:Aspose.Gis.Geometries.ILineString" /> that approximates or equivalent to this curve:
             <ul>
             If this object is <see cref="T:Aspose.Gis.Geometries.ILineString" /> itself the result is equivalent to this object
             If this object is <see cref="T:Aspose.Gis.Geometries.ICircularString" /> the result is the circular string linearized with the specified <paramref name="tolerance" />
             If this object is <see cref="T:Aspose.Gis.Geometries.ICompoundCurve" /> - all curves from it are linearized and then joined into <see cref="T:Aspose.Gis.Geometries.ILineString" /></ul></returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <c>tolerance</c> is less than or equal to <c>0</c>.
             </exception>
      <exception cref="T:System.InvalidOperationException">
             This geometry is invalid in a such way, that operation can not be completed.
             </exception>
    </member>
    <member name="M:Aspose.Gis.Geometries.Curve.Reverse">
      <summary>
            Reverses this curve.
            </summary>
    </member>
    <member name="M:Aspose.Gis.Geometries.Curve.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Geometries.Curve" /> class.
            </summary>
    </member>
    <member name="M:Aspose.Gis.Geometries.Curve.#ctor(Aspose.Gis.Geometries.Curve)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Geometries.Curve" /> class.
            </summary>
      <param name="other">The other <see cref="T:Aspose.Gis.Geometries.Curve" /> to copy data from.</param>
    </member>
    <member name="T:Aspose.Gis.Geometries.CurvePolygon">
      <summary>
            A planar surface, defined by 1 exterior boundary and 0 or more interior boundaries.
            </summary>
    </member>
    <member name="M:Aspose.Gis.Geometries.CurvePolygon.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Geometries.CurvePolygon" /> class.
            </summary>
    </member>
    <member name="M:Aspose.Gis.Geometries.CurvePolygon.#ctor(Aspose.Gis.Geometries.ICurve)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Geometries.CurvePolygon" /> class.
            </summary>
      <param name="exteriorRing">The exterior ring.</param>
      <exception cref="T:System.ArgumentNullException">The argument is <see langword="null" />.</exception>
    </member>
    <member name="M:Aspose.Gis.Geometries.CurvePolygon.#ctor(Aspose.Gis.Geometries.ICurve,System.Collections.Generic.IEnumerable{Aspose.Gis.Geometries.ICurve})">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Geometries.CurvePolygon" /> class.
            </summary>
      <param name="exteriorRing">The exterior ring.</param>
      <param name="interiorRings">The interior rings.</param>
      <exception cref="T:System.ArgumentNullException">The argument is <see langword="null" />.</exception>
    </member>
    <member name="P:Aspose.Gis.Geometries.CurvePolygon.IsEmpty">
      <summary>
            Gets a value indicating whether this instance is empty.
            </summary>
      <value>
        <see langword="true" /> if this instance is empty; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:Aspose.Gis.Geometries.CurvePolygon.HasM">
      <summary>
            Gets a value indicating whether this instance has M coordinate.
            </summary>
      <value>
        <see langword="true" /> if this instance has M coordinate; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:Aspose.Gis.Geometries.CurvePolygon.HasCurveGeometry">
      <summary>
            Gets a value indicating whether this geometry is or contains curve (not linear) geometry.
            </summary>
      <value>
        <see langword="false" /> if this geometry and all geometries it contains are linear; otherwise, <see langword="true" />.
            </value>
    </member>
    <member name="P:Aspose.Gis.Geometries.CurvePolygon.HasZ">
      <summary>
            Gets a value indicating whether this instance has Z coordinate.
            </summary>
      <value>
        <see langword="true" /> if this instance has Z coordinate; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:Aspose.Gis.Geometries.CurvePolygon.SpatialReferenceSystem">
      <summary>
            Gets SpatialReferenceSystem of this instance.
            This property can be <see langword="null" />, is SpatialReferenceSystem is unknown.
            Assigning new SpatialReferenceSystem will not perform any coordinate transformation, only reference will change.
            </summary>
    </member>
    <member name="P:Aspose.Gis.Geometries.CurvePolygon.GeometryType">
      <summary>
            Gets the type of the geometry.
            </summary>
      <value>
            The type of the geometry.
            </value>
    </member>
    <member name="P:Aspose.Gis.Geometries.CurvePolygon.ExteriorRing">
      <summary>
            Gets the exterior ring.
            </summary>
      <value>
            The exterior ring.
            </value>
      <exception cref="T:System.ArgumentException" accessor="set">
        <see cref="P:Aspose.Gis.Geometries.IGeometry.SpatialReferenceSystem" /> of this geometry and <see cref="P:Aspose.Gis.Geometries.CurvePolygon.SpatialReferenceSystem" /> of argument are both not <see langword="null" />
            and don't equal to each other.
            </exception>
    </member>
    <member name="P:Aspose.Gis.Geometries.CurvePolygon.InteriorRingsCount">
      <summary>
            Gets the number of interior rings.
            </summary>
      <value>
            The number of interior rings.
            </value>
    </member>
    <member name="M:Aspose.Gis.Geometries.CurvePolygon.GetPointOnSurface">
      <summary>
            Finds a point that is guaranteed to be on this curved polygon.
            </summary>
      <returns>A point on this curved polygon. An empty point if this curved polygon has no interior.</returns>
      <exception cref="T:System.InvalidOperationException">curved polygon is invalid in such way that operation can not be completed.</exception>
    </member>
    <member name="M:Aspose.Gis.Geometries.CurvePolygon.op_Equality(Aspose.Gis.Geometries.CurvePolygon,Aspose.Gis.Geometries.CurvePolygon)">
      <summary>
            Implements the operator ==.
            </summary>
      <param name="a">The A instance.</param>
      <param name="b">The B instance.</param>
      <returns>
            The result of the operator.
            </returns>
    </member>
    <member name="M:Aspose.Gis.Geometries.CurvePolygon.op_Inequality(Aspose.Gis.Geometries.CurvePolygon,Aspose.Gis.Geometries.CurvePolygon)">
      <summary>
            Implements the operator !=.
            </summary>
      <param name="a">The A instance.</param>
      <param name="b">The B instance.</param>
      <returns>
            The result of the operator.
            </returns>
    </member>
    <member name="M:Aspose.Gis.Geometries.CurvePolygon.SetEmpty">
      <summary>
            Makes this <see cref="T:Aspose.Gis.Geometries.Geometry" /> empty.
            </summary>
    </member>
    <member name="M:Aspose.Gis.Geometries.CurvePolygon.GetInteriorRing(System.Int32)">
      <summary>
            Gets the interior ring by its index.
            </summary>
      <param name="index">The index.</param>
      <returns>The interior ring.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The index is out of range.</exception>
    </member>
    <member name="M:Aspose.Gis.Geometries.CurvePolygon.ToEditable">
      <summary>
            Gets an editable copy of this geometry.
            </summary>
      <returns>An editable copy of this geometry.</returns>
    </member>
    <member name="M:Aspose.Gis.Geometries.CurvePolygon.AddInteriorRing(Aspose.Gis.Geometries.ICurve)">
      <summary>
            Adds an interior ring.
            </summary>
      <param name="ring">The ring to add.</param>
      <exception cref="T:System.ArgumentNullException">The argument is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="P:Aspose.Gis.Geometries.IGeometry.SpatialReferenceSystem" /> of this geometry and <see cref="P:Aspose.Gis.Geometries.CurvePolygon.SpatialReferenceSystem" /> of argument are both not
            <see langword="null" /> and don't equal to each other.
            </exception>
    </member>
    <member name="M:Aspose.Gis.Geometries.CurvePolygon.Clone">
      <summary>
            Clones this instance.
            </summary>
      <returns>The clone of this instance</returns>
    </member>
    <member name="M:Aspose.Gis.Geometries.CurvePolygon.Equals(System.Object)">
      <summary>Determines whether the specified object is equal to the current object.</summary>
      <param name="obj">The object to compare with the current object. </param>
      <returns>true if the specified object  is equal to the current object; otherwise, false.</returns>
    </member>
    <member name="M:Aspose.Gis.Geometries.CurvePolygon.GetHashCode">
      <summary>Serves as the default hash function. </summary>
      <returns>A hash code for the current object.</returns>
    </member>
    <member name="M:Aspose.Gis.Geometries.CurvePolygon.Equals(Aspose.Gis.Geometries.ICurvePolygon)">
      <summary>Indicates whether the current object is equal to another object of the same type.</summary>
      <param name="other">An object to compare with this object.</param>
      <returns>true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.</returns>
    </member>
    <member name="T:Aspose.Gis.Geometries.Geometry">
      <summary>
            The abstract root class of the geometries hierarchy.
            </summary>
    </member>
    <member name="M:Aspose.Gis.Geometries.Geometry.FromText(System.String)">
      <summary>
            Creates a geometry from its Well-Known Text representation.
            </summary>
      <param name="wkt">Well-Known Text representation of a geometry.</param>
      <returns>A geometry represented by the argument.</returns>
      <exception cref="T:System.ArgumentNullException"> Argument is null.</exception>
      <exception cref="T:System.NotSupportedException"> Argument represents a geometry of not supported type. </exception>
      <exception cref="T:System.FormatException"> Argument is not a valid Well-Known Text. </exception>
    </member>
    <member name="M:Aspose.Gis.Geometries.Geometry.FromText(System.String,Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
      <summary>
            Creates a geometry from its Well-Known Text representation.
            </summary>
      <param name="wkt">Well-Known Text representation of a geometry.</param>
      <param name="spatialReferenceSystem">Spatial Reference System to be assigned to the geometry.</param>
      <returns>A geometry represented by the argument.</returns>
      <exception cref="T:System.ArgumentNullException"> Argument is null.</exception>
      <exception cref="T:System.NotSupportedException"> Argument represents a geometry of not supported type. </exception>
      <exception cref="T:System.FormatException"> Argument is not a valid Well-Known Text. </exception>
    </member>
    <member name="M:Aspose.Gis.Geometries.Geometry.FromBinary(System.Byte[])">
      <summary>
            Creates a geometry from its Well-Known Binary representation.
            </summary>
      <param name="wkb">Well-Known Binary representation of a geometry.</param>
      <returns>A geometry represented by the argument.</returns>
      <exception cref="T:System.ArgumentNullException"> Argument is null.</exception>
      <exception cref="T:System.NotSupportedException"> Argument represents a geometry of not supported type. </exception>
      <exception cref="T:System.FormatException"> Argument is not a valid Well-Known Binary. </exception>
    </member>
    <member name="M:Aspose.Gis.Geometries.Geometry.FromBinary(System.Byte[],Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
      <summary>
            Creates a geometry from its Well-Known Binary representation.
            </summary>
      <param name="wkb">Well-Known Binary representation of a geometry.</param>
      <param name="spatialReferenceSystem">Spatial Reference System to be assigned to the geometry.</param>
      <returns>A geometry represented by the argument.</returns>
      <exception cref="T:System.ArgumentNullException"> Argument is null.</exception>
      <exception cref="T:System.NotSupportedException"> Argument represents a geometry of not supported type. </exception>
      <exception cref="T:System.FormatException"> Argument is not a valid Well-Known Binary. </exception>
      <remarks>
            If there are extra bytes after the geometry a <see cref="T:System.FormatException" /> exception is thrown.
            </remarks>
    </member>
    <member name="P:Aspose.Gis.Geometries.Geometry.Dimension">
      <summary>
            Gets the topological dimension of this <see cref="T:Aspose.Gis.Geometries.Geometry" />.
            </summary>
      <exception cref="T:System.InvalidOperationException"> Geometry is <see cref="P:Aspose.Gis.Geometries.Geometry.Null" />. </exception>
    </member>
    <member name="P:Aspose.Gis.Geometries.Geometry.Null">
      <summary>
            Gets an instance of null geometry.
            </summary>
    </member>
    <member name="P:Aspose.Gis.Geometries.Geometry.CoordinateDimension">
      <summary>
            Gets the number of coordinate dimensions for this <see cref="T:Aspose.Gis.Geometries.Geometry" />.
            </summary>
      <value>
            The number of coordinate dimensions.
            </value>
    </member>
    <member name="P:Aspose.Gis.Geometries.Geometry.IsEmpty">
      <summary>
            Gets a value indicating whether this instance is empty.
            </summary>
      <value>
        <see langword="true" /> if this instance is empty; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:Aspose.Gis.Geometries.Geometry.IsSimple">
      <summary>
            Gets a value indicating whether this instance is simple from SFA point of view.
            </summary>
    </member>
    <member name="P:Aspose.Gis.Geometries.Geometry.IsValid">
      <summary>
            Gets a value indicating whether this instance is valid.
            </summary>
    </member>
    <member name="P:Aspose.Gis.Geometries.Geometry.HasM">
      <summary>
            Gets a value indicating whether this instance has M coordinate.
            </summary>
      <value>
        <see langword="true" /> if this instance has M coordinate; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:Aspose.Gis.Geometries.Geometry.HasZ">
      <summary>
            Gets a value indicating whether this instance has Z coordinate.
            </summary>
      <value>
        <see langword="true" /> if this instance has Z coordinate; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:Aspose.Gis.Geometries.Geometry.HasCurveGeometry">
      <summary>
            Gets a value indicating whether this geometry is or contains curve (not linear) geometry.
            </summary>
      <value>
        <see langword="false" /> if this geometry and all geometries it contains are linear; otherwise, <see langword="true" />.
            </value>
    </member>
    <member name="P:Aspose.Gis.Geometries.Geometry.GeometryType">
      <summary>
            Gets the type of the geometry.
            </summary>
      <value>
            The type of the geometry.
            </value>
    </member>
    <member name="P:Aspose.Gis.Geometries.Geometry.SpatialReferenceSystem">
      <summary>
            Gets SpatialReferenceSystem of this instance.
            This property can be <see langword="null" />, is SpatialReferenceSystem is unknown.
            Assigning new SpatialReferenceSystem will not perform any coordinate transformation, only reference will change.
            </summary>
    </member>
    <member name="M:Aspose.Gis.Geometries.Geometry.ToEditable">
      <summary>
            Gets an editable copy of this geometry.
            </summary>
      <returns> An editable copy of this geometry. </returns>
    </member>
    <member name="M:Aspose.Gis.Geometries.Geometry.ToEditable``1">
      <summary>
            Gets an editable copy of this geometry.
            </summary>
      <typeparam name="T">
            Type of the geometry to get. Must be an inheritor of <see cref="T:Aspose.Gis.Geometries.Geometry" /> class.
            </typeparam>
      <returns>
            An editable copy of this geometry.
            </returns>
      <exception cref="T:System.InvalidCastException">
            Unable to cast an editable copy of this geometry to type <typeparamref name="T" />.
            </exception>
    </member>
    <member name="M:Aspose.Gis.Geometries.Geometry.ToLinearGeometry">
      <summary>
            Gets approximate or equivalent non-curve version of this geometry using the default <c>tolerance</c>.
            </summary>
      <returns>
            A geometry that has no curve geometries. This is the equivalent of <see cref="M:Aspose.Gis.Geometries.IGeometry.ToLinearGeometry(System.Double)" /> with
            default <c>tolerance</c>. Default <c>tolerance</c> is defined by <see cref="P:Aspose.Gis.Geometries.IGeometry.SpatialReferenceSystem" />
            of this geometry:
            <ul><li> For projected SRS Tolerance is 0.001 meters (in SRS units) </li><li> For geographic SRS Tolerance is <c>1e-5</c> degrees (in SRS units) </li><li> For unknown SRS Tolerance is <c>1e-5</c></li></ul>
            For more details on what transformations are applied refer to <see cref="M:Aspose.Gis.Geometries.IGeometry.ToLinearGeometry(System.Double)" /> specification.
            </returns>
      <exception cref="T:System.InvalidOperationException">
            This geometry is invalid in a such way, that operation can not be completed.
            </exception>
    </member>
    <member name="M:Aspose.Gis.Geometries.Geometry.ToLinearGeometry(System.Double)">
      <summary>
            Gets approximate or equivalent non-curve version of this geometry using the specified <c>tolerance</c>.
            </summary>
      <param name="tolerance">
            The <c>tolerance</c> to use. The result is guaranteed to be less than <c>tolerance</c> away from the
            curved geometry, unless the number of points needed to linearize the geometry exceeds the per-quadrant maximum
            which is currently equal to 10000 points.
            </param>
      <returns>
            A geometry, that has no curve geometries. The following transformations are applied:
            <ul><li><see cref="F:Aspose.Gis.Geometries.GeometryType.CircularString" />s are linearized
            (transformed into <see cref="F:Aspose.Gis.Geometries.GeometryType.LineString" />s with specified <paramref name="tolerance" />) </li><li><see cref="F:Aspose.Gis.Geometries.GeometryType.CompoundCurve" />s are joined into <c>LineString</c>s </li><li><see cref="F:Aspose.Gis.Geometries.GeometryType.CurvePolygon" />s are transformed into <see cref="F:Aspose.Gis.Geometries.GeometryType.Polygon" />s </li><li><see cref="F:Aspose.Gis.Geometries.GeometryType.MultiCurve" />s are transformed into <see cref="F:Aspose.Gis.Geometries.GeometryType.MultiLineString" />s </li><li><see cref="F:Aspose.Gis.Geometries.GeometryType.MultiSurface" />s are transformed into <see cref="F:Aspose.Gis.Geometries.GeometryType.MultiPolygon" />s </li></ul>
            As a result, <see cref="P:Aspose.Gis.Geometries.IGeometry.HasCurveGeometry" /> of output geometry is <see langword="false" />.
            </returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <c>tolerance</c> is less than or equal to <c>0</c>.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            This geometry is invalid in a such way, that operation can not be completed.
            </exception>
    </member>
    <member name="M:Aspose.Gis.Geometries.Geometry.AsText">
      <summary>
            Translates this geometry to its Well-Known Text representation.
            </summary>
      <returns>Well-Known Text representation of this geometry.</returns>
      <remarks>Output of this method is in <see cref="F:Aspose.Gis.Geometries.WktVariant.Iso" /> WKT variant.</remarks>
    </member>
    <member name="M:Aspose.Gis.Geometries.Geometry.AsText(Aspose.Gis.Geometries.WktVariant)">
      <summary>
            Translates this geometry to its Well-Known Text representation.
            </summary>
      <returns>Well-Known Text representation of this geometry.</returns>
      <param name="variant">Well-Known Text variant to use.</param>
      <exception cref="T:System.NotSupportedException">
            Geometry can not be represented in requested WKT variant. Currently this happens when
            <see cref="P:Aspose.Gis.Geometries.Geometry.HasCurveGeometry" /> of geometry is <see langword="true" /> and WKT variant is
            <see cref="F:Aspose.Gis.Geometries.WktVariant.SimpleFeatureAccessOutdated" />.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="variant" /> is not a valid <see cref="T:Aspose.Gis.Geometries.WktVariant" />.</exception>
    </member>
    <member name="M:Aspose.Gis.Geometries.Geometry.AsBinary">
      <summary>
            Translates this geometry to its Well-Known Binary representation.
            </summary>
      <returns>Well-Known Binary representation of this geometry.</returns>
      <remarks>Output of this method is in <see cref="F:Aspose.Gis.Geometries.WkbVariant.Iso" /> WKB variant.</remarks>
    </member>
    <member name="M:Aspose.Gis.Geometries.Geometry.AsBinary(Aspose.Gis.Geometries.WkbVariant)">
      <summary>
            Translates this geometry to its Well-Known Binary representation.
            </summary>
      <returns>Well-Known Binary representation of this geometry.</returns>
      <param name="variant">Well-Known Binary variant to use.</param>
      <exception cref="T:System.NotSupportedException">
            Geometry can not be represented in requested WKB variant. Currently this happens when
            <see cref="P:Aspose.Gis.Geometries.Geometry.HasCurveGeometry" /> of geometry is <see langword="true" /> and WKB variant is
            <see cref="F:Aspose.Gis.Geometries.WkbVariant.SimpleFeatureAccessOutdated" />.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="variant" /> is not a valid <see cref="T:Aspose.Gis.Geometries.WkbVariant" />.</exception>
    </member>
    <member name="M:Aspose.Gis.Geometries.Geometry.SetEmpty">
      <summary>
            Makes this <see cref="T:Aspose.Gis.Geometries.Geometry" /> empty.
            </summary>
    </member>
    <member name="M:Aspose.Gis.Geometries.Geometry.Clone">
      <summary>
            Clones this instance.
            </summary>
      <returns>The clone of this instance</returns>
    </member>
    <member name="M:Aspose.Gis.Geometries.Geometry.RoundXY(System.Int32)">
      <summary>
            Rounds X and Y coordinates to a specified number of fractional digits.
            </summary>
      <param name="digits">Number of fractional digits.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="digits" />is less than 0 or greater than 15.
            </exception>
    </member>
    <member name="M:Aspose.Gis.Geometries.Geometry.RoundZ(System.Int32)">
      <summary>
            Rounds Z coordinate to a specified number of fractional digits.
            </summary>
      <param name="digits">Number of fractional digits.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="digits" />is less than 0 or greater than 15.
            </exception>
    </member>
    <member name="M:Aspose.Gis.Geometries.Geometry.RoundM(System.Int32)">
      <summary>
            Rounds M coordinate to a specified number of fractional digits.
            </summary>
      <param name="digits">Number of fractional digits.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="digits" />is less than 0 or greater than 15.
            </exception>
    </member>
    <member name="M:Aspose.Gis.Geometries.Geometry.GetExtent">
      <summary>
            Computes and returns a bounding extent of this geometry.
            </summary>
      <returns> A bounding extent of this geometry. </returns>
    </member>
    <member name="M:Aspose.Gis.Geometries.Geometry.GetArea">
      <summary>
            Computes the area of this geometry.
            </summary>
      <returns>
            The area of this geometry.
            Sum of areas of elements of this geometry if this geometry is a <see cref="T:Aspose.Gis.Geometries.GeometryCollection" />.
            </returns>
    </member>
    <member name="M:Aspose.Gis.Geometries.Geometry.GetLength">
      <summary>
            Computes the length of this geometry.
            </summary>
      <returns>
            The length of this geometry.
            Perimeter if this is a <see cref="T:Aspose.Gis.Geometries.Polygon" />.
            Sum of lengths of elements of this geometry if this geometry is a <see cref="T:Aspose.Gis.Geometries.GeometryCollection" />.
            </returns>
    </member>
    <member name="M:Aspose.Gis.Geometries.Geometry.GetDistanceTo(Aspose.Gis.Geometries.IGeometry)">
      <summary>
            Computes the minimum distance between this geometry and a specified geometry.
            </summary>
      <param name="other">A geometry to find distance to.</param>
      <returns>
            If both geometries are not <see cref="P:Aspose.Gis.Geometries.Geometry.IsEmpty" /> - a distance between closest points of the geometries.
            If at least one geometry is empty -1 is returned.
            </returns>
      <exception cref="T:System.ArgumentNullException">Argument is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="P:Aspose.Gis.Geometries.IGeometry.SpatialReferenceSystem" /> of geometries are not equivalent.
            You can use <see cref="T:Aspose.Gis.SpatialReferencing.SpatialReferenceSystemTransformation" /> in order to convert geometries to the same spatial
            reference system.
            </exception>
    </member>
    <member name="M:Aspose.Gis.Geometries.Geometry.GetConvexHull">
      <summary>
            Computes the convex hull of this geometry.
            </summary>
      <returns>
            A geometry that represents a convex hull of this geometry.
            If this geometry has no points then the result is <see cref="P:Aspose.Gis.Geometries.Geometry.Null" />.
            If this geometry has only one point then the result is this point.
            If this geometry has only two points then the result is <see cref="T:Aspose.Gis.Geometries.ILineString" /> with the points.
            If this geometry has three or more points then the result is <see cref="T:Aspose.Gis.Geometries.ILinearRing" /> that represents a convex
            hull around all geometries points.
            </returns>
    </member>
    <member name="M:Aspose.Gis.Geometries.Geometry.GetCentroid">
      <summary>
            Computes the centroid of this geometry.
            </summary>
      <returns>
            The centroid of this geometry. If this geometry is empty an empty point returned.
            The centroid is equal to the centroid of the highest dimension geometries in this geometry
            (e.g. if both points and lines are contained in the geometry, only lines contribute to centroid).
            </returns>
    </member>
    <member name="M:Aspose.Gis.Geometries.Geometry.GetBuffer(System.Double,System.Int32)">
      <summary>
            Computes a buffer region around this geometry.
            </summary>
      <param name="distance">The buffer region width.</param>
      <param name="quadrantSegments">
            Number of segments used to approximate a 90 degree of curvature.
            The larger this number is the better approximation of curves is produced.
            Default is 30.
            </param>
      <returns>
            A geometry that represents all points that are within a specified distance from
            this geometry.
            The type of result is either <see cref="P:Aspose.Gis.Geometries.Geometry.Null" />, <see cref="T:Aspose.Gis.Geometries.IPolygon" /> or <see cref="T:Aspose.Gis.Geometries.IMultiPolygon" />.
            </returns>
      <exception cref="T:System.InvalidOperationException">
            This geometry is invalid in a such way that operation can not be completed.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
            Quadrant segments is less or equal to 0.
            </exception>
    </member>
    <member name="M:Aspose.Gis.Geometries.Geometry.Within(Aspose.Gis.Extent)">
      <summary>
            Determines whether this geometry is within a specified extent.
            </summary>
      <param name="extent">The extent.</param>
      <returns>
        <see langword="true" /> if this geometry is within extent; <see langword="false" /> otherwise.
            </returns>
      <exception cref="T:System.ArgumentNullException">Argument is <see langword="null" />.</exception>
      <seealso cref="M:Aspose.Gis.Extent.Contains(Aspose.Gis.Geometries.IGeometry)" />
    </member>
    <member name="M:Aspose.Gis.Geometries.Geometry.Intersects(Aspose.Gis.Extent)">
      <summary>
            Determines whether this geometry intersects a specified extent.
            </summary>
      <param name="extent">The extent.</param>
      <returns>
        <see langword="true" /> if this geometry intersects the extent; <see langword="false" /> otherwise.
            </returns>
      <exception cref="T:System.ArgumentNullException">Argument is <see langword="null" />.</exception>
      <seealso cref="M:Aspose.Gis.Extent.Intersects(Aspose.Gis.Geometries.IGeometry)" />
    </member>
    <member name="M:Aspose.Gis.Geometries.Geometry.SpatiallyEquals(Aspose.Gis.Geometries.IGeometry)">
      <summary>
            Determines if this geometry spatially equal to a specified geometry.
            </summary>
      <param name="other">A geometry.</param>
      <returns>
        <see langword="true" /> if this geometry "spatially equals" to specified geometry. <see langword="false" /> otherwise.
            </returns>
      <remarks>
            This method tests equality in terms of DE-9IM intersection matrix. It does not depend on order
            of components (e.g. order of interior rings in polygon), Z and M values. Basically, it tests
            that two geometries occupy the same "space" when projected on two dimensional space.<cr />
            This method is equivalent to:
            <code>
            this.Relate(other, "T*F**FFF*");
            </code>
            See OpenGIS Simple Features Specification for more details about DE-9IM.
            </remarks>
      <exception cref="T:System.ArgumentNullException">Argument is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
            One of the geometries is invalid in such way that operation can not be finished.
            </exception>
      <exception cref="T:System.ArgumentException">
        <see cref="P:Aspose.Gis.Geometries.IGeometry.SpatialReferenceSystem" /> of geometries are not equivalent.
            You can use <see cref="T:Aspose.Gis.SpatialReferencing.SpatialReferenceSystemTransformation" /> in order to convert geometries to the same spatial
            reference system.
            </exception>
    </member>
    <member name="M:Aspose.Gis.Geometries.Geometry.Disjoint(Aspose.Gis.Geometries.IGeometry)">
      <summary>
            Determines if this geometry is disjoint from a specified geometry.
            </summary>
      <param name="other">A geometry.</param>
      <returns>
        <see langword="true" /> if this geometry is "spatially disjoint" from another geometry. <see langword="false" /> otherwise.
            </returns>
      <remarks>
            This method tests whether geometries are disjoint in terms of DE-9IM intersection matrix.
            Basically, it tests that two geometries have no common points.<cr />
            This method is equivalent to:
            <code>
            this.Relate(other, "FF*FF****");
            </code>
            See OpenGIS Simple Features Specification for more details about DE-9IM.
            </remarks>
      <exception cref="T:System.ArgumentNullException">Argument is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
            One of the geometries is invalid in such way that operation can not be finished.
            </exception>
      <exception cref="T:System.ArgumentException">
        <see cref="P:Aspose.Gis.Geometries.IGeometry.SpatialReferenceSystem" /> of geometries are not equivalent.
            You can use <see cref="T:Aspose.Gis.SpatialReferencing.SpatialReferenceSystemTransformation" /> in order to convert geometries to the same spatial
            reference system.
            </exception>
      <seealso cref="M:Aspose.Gis.Geometries.IGeometry.Intersects(Aspose.Gis.Geometries.IGeometry)" />
    </member>
    <member name="M:Aspose.Gis.Geometries.Geometry.Intersects(Aspose.Gis.Geometries.IGeometry)">
      <summary>
            Determines if this geometry and a specified geometry intersects.
            </summary>
      <param name="other">A geometry.</param>
      <returns>
        <see langword="true" /> if this geometry "spatially intersects" another geometry. <see langword="false" /> otherwise.
            </returns>
      <remarks>
            This method is equivalent to:
            <code>!this.Disjoint(other);</code>
            This is the negation of <see cref="M:Aspose.Gis.Geometries.IGeometry.Disjoint(Aspose.Gis.Geometries.IGeometry)" />. See <see cref="M:Aspose.Gis.Geometries.IGeometry.Disjoint(Aspose.Gis.Geometries.IGeometry)" /> for more details.
            </remarks>
      <exception cref="T:System.ArgumentNullException">Argument is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
            One of the geometries is invalid in such way that operation can not be finished.
            </exception>
      <exception cref="T:System.ArgumentException">
        <see cref="P:Aspose.Gis.Geometries.IGeometry.SpatialReferenceSystem" /> of geometries are not equivalent.
            You can use <see cref="T:Aspose.Gis.SpatialReferencing.SpatialReferenceSystemTransformation" /> in order to convert geometries to the same spatial
            reference system.
            </exception>
    </member>
    <member name="M:Aspose.Gis.Geometries.Geometry.Touches(Aspose.Gis.Geometries.IGeometry)">
      <summary>
            Determines if this geometry and a specified geometry touch.
            </summary>
      <param name="other">A geometry.</param>
      <returns>
        <see langword="true" /> if this geometry is "spatially touches" another geometry. <see langword="false" /> otherwise.
            </returns>
      <remarks>
            This method tests whether geometries touch each other in terms of DE-9IM intersection matrix.
            Two geometries touch each other if they have at least one boundary point in common, but no interior points.
            That is: two <see cref="T:Aspose.Gis.Geometries.LineString" />s touch each other if they share an endpoint, but don't share a segment,
            two polygons touch each other if they share part of exterior or interior ring, but their interiors don't overlap.<cr />
            This method is equivalent to:
            <code>
            this.Relate(other, "FT*******") || this.Relate(other, "F**T*****") || this.Relate(other, "F***T****");
            </code>
            See OpenGIS Simple Features Specification for more details about DE-9IM and "spatially touches" relation.
            </remarks>
      <exception cref="T:System.ArgumentNullException">Argument is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
            One of the geometries is invalid in such way that operation can not be finished.
            </exception>
      <exception cref="T:System.ArgumentException">
        <see cref="P:Aspose.Gis.Geometries.IGeometry.SpatialReferenceSystem" /> of geometries are not equivalent.
            You can use <see cref="T:Aspose.Gis.SpatialReferencing.SpatialReferenceSystemTransformation" /> in order to convert geometries to the same spatial
            reference system.
            </exception>
    </member>
    <member name="M:Aspose.Gis.Geometries.Geometry.Crosses(Aspose.Gis.Geometries.IGeometry)">
      <summary>
            Determines if this geometry and a specified geometry cross.
            </summary>
      <param name="other">A geometry.</param>
      <returns>
        <see langword="true" /> if this geometry is "spatially crosses" another geometry. <see langword="false" /> otherwise.
            </returns>
      <remarks>
            This method tests whether geometries are crosses in terms of DE-9IM intersection matrix.
            Two geometries cross each other if they have some but not all interior points in common and
            the dimension of the intersection is less then dimension of at least one of the geometries.
            That is: two <see cref="T:Aspose.Gis.Geometries.LineString" />s cross, if they form an 'X' letter, a LineString and a <see cref="T:Aspose.Gis.Geometries.Polygon" />
            cross if LineString goes through interior of a Polygon.
            See OpenGIS Simple Features Specification for more details about DE-9IM and "spatially crosses" relation.
            </remarks>
      <exception cref="T:System.ArgumentNullException">Argument is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
            One of the geometries is invalid in such way that operation can not be finished.
            </exception>
      <exception cref="T:System.ArgumentException">
        <see cref="P:Aspose.Gis.Geometries.IGeometry.SpatialReferenceSystem" /> of geometries are not equivalent.
            You can use <see cref="T:Aspose.Gis.SpatialReferencing.SpatialReferenceSystemTransformation" /> in order to convert geometries to the same spatial
            reference system.
            </exception>
    </member>
    <member name="M:Aspose.Gis.Geometries.Geometry.Within(Aspose.Gis.Geometries.IGeometry)">
      <summary>
            Determines whether this geometry is within a specified geometry.
            </summary>
      <param name="other">A geometry.</param>
      <returns>
        <see langword="true" /> if this geometry is "spatially within" another geometry. <see langword="false" /> otherwise.
            </returns>
      <remarks>
            This method tests whether one geometry is within another in terms of DE-9IM intersection matrix.
            One geometry is within another one, if another geometry contains every point of the geometry and geometries
            interiors intersect.<cr />
            This method is equivalent to:
            <code>
            this.Relate(other, "T*F**F***");
            </code>
            See OpenGIS Simple Features Specification for more details about DE-9IM and "spatially within" relation.
            </remarks>
      <exception cref="T:System.ArgumentNullException">Argument is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
            One of the geometries is invalid in such way that operation can not be finished.
            </exception>
      <exception cref="T:System.ArgumentException">
        <see cref="P:Aspose.Gis.Geometries.IGeometry.SpatialReferenceSystem" /> of geometries are not equivalent.
            You can use <see cref="T:Aspose.Gis.SpatialReferencing.SpatialReferenceSystemTransformation" /> in order to convert geometries to the same spatial
            reference system.
            </exception>
      <seealso cref="M:Aspose.Gis.Geometries.IGeometry.SpatiallyContains(Aspose.Gis.Geometries.IGeometry)" />
      <seealso cref="M:Aspose.Gis.Geometries.IGeometry.CoveredBy(Aspose.Gis.Geometries.IGeometry)" />
    </member>
    <member name="M:Aspose.Gis.Geometries.Geometry.SpatiallyContains(Aspose.Gis.Geometries.IGeometry)">
      <summary>
            Determines whether this geometry spatially contains a specified geometry.
            </summary>
      <param name="other">A geometry.</param>
      <returns>
        <see langword="true" /> if this geometry is "spatially contains" another geometry. <see langword="false" /> otherwise.
            </returns>
      <remarks>
            This method tests whether one geometry contains another in terms of DE-9IM intersection matrix.<cr />
            This method is equivalent to:
            <code>
            other.Within(this);
            </code></remarks>
      <exception cref="T:System.ArgumentNullException">Argument is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
            One of the geometries is invalid in such way that operation can not be finished.
            </exception>
      <exception cref="T:System.ArgumentException">
        <see cref="P:Aspose.Gis.Geometries.IGeometry.SpatialReferenceSystem" /> of geometries are not equivalent.
            You can use <see cref="T:Aspose.Gis.SpatialReferencing.SpatialReferenceSystemTransformation" /> in order to convert geometries to the same spatial
            reference system.
            </exception>
      <seealso cref="M:Aspose.Gis.Geometries.IGeometry.Within(Aspose.Gis.Geometries.IGeometry)" />
      <seealso cref="M:Aspose.Gis.Geometries.IGeometry.Covers(Aspose.Gis.Geometries.IGeometry)" />
    </member>
    <member name="M:Aspose.Gis.Geometries.Geometry.Overlaps(Aspose.Gis.Geometries.IGeometry)">
      <summary>
            Determines whether this geometry overlap with a specified geometry.
            </summary>
      <param name="other">A geometry.</param>
      <returns>
        <see langword="true" /> if this geometry is "spatially overlaps" another geometry. <see langword="false" /> otherwise.
            </returns>
      <remarks>
            This method tests whether geometries are overlaps in terms of DE-9IM intersection matrix.
            Two geometries overlap if they have some but not all interior points in common and the intersection of the geometries
            have the same dimension as the geometries themselves.<cr />
            For two <see cref="F:Aspose.Gis.Geometries.GeometryDimension.Point" /> geometries or two <see cref="F:Aspose.Gis.Geometries.GeometryDimension.Surface" /> geometries this
            method is equivalent to:
            <code>
            this.Relate(other, "T*T***T**");
            </code>
            For two <see cref="F:Aspose.Gis.Geometries.GeometryDimension.Line" /> geometries this method is equivalent to:
            <code>
            this.Relate(other, "1*T***T**");
            </code>
            For two geometries with not equal <see cref="P:Aspose.Gis.Geometries.IGeometry.Dimension" /> this method always returns <see langword="false" />.
            See OpenGIS Simple Features Specification for more details about DE-9IM and "spatially overlaps" relation.
            </remarks>
      <exception cref="T:System.ArgumentNullException">Argument is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
            One of the geometries is invalid in such way that operation can not be finished.
            </exception>
      <exception cref="T:System.ArgumentException">
        <see cref="P:Aspose.Gis.Geometries.IGeometry.SpatialReferenceSystem" /> of geometries are not equivalent.
            You can use <see cref="T:Aspose.Gis.SpatialReferencing.SpatialReferenceSystemTransformation" /> in order to convert geometries to the same spatial
            reference system.
            </exception>
    </member>
    <member name="M:Aspose.Gis.Geometries.Geometry.Covers(Aspose.Gis.Geometries.IGeometry)">
      <summary>
            Determines whether this geometry covers a specified geometry.
            </summary>
      <param name="other">A geometry.</param>
      <returns>
        <see langword="true" /> if this geometry is "spatially covers" another geometry. <see langword="false" /> otherwise.
            </returns>
      <remarks>
            This method tests whether one geometry covers another in terms of DE-9IM intersection matrix.
            One geometry covers another one, if the geometry contains every point of another geometry.
            This method is similar to <see cref="M:Aspose.Gis.Geometries.IGeometry.SpatiallyContains(Aspose.Gis.Geometries.IGeometry)" />, but returns <see langword="true" /> more often,
            since it does not distinguish between interior and boundary points. So, if geometry A lies on boundary of
            geometry B, <see cref="M:Aspose.Gis.Geometries.IGeometry.SpatiallyContains(Aspose.Gis.Geometries.IGeometry)" /> returns <see langword="false" />,
            while this method returns <see langword="true" />.<cr />
            This method is equivalent to:
            <code>
            this.Relate(other, "T*****FF*") || this.Relate(other, "*T****FF*") || this.Relate(other, "***T**FF*) || this.Relate(other, "***T*FF*");
            </code></remarks>
      <exception cref="T:System.ArgumentNullException">Argument is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
            One of the geometries is invalid in such way that operation can not be finished.
            </exception>
      <exception cref="T:System.ArgumentException">
        <see cref="P:Aspose.Gis.Geometries.IGeometry.SpatialReferenceSystem" /> of geometries are not equivalent.
            You can use <see cref="T:Aspose.Gis.SpatialReferencing.SpatialReferenceSystemTransformation" /> in order to convert geometries to the same spatial
            reference system.
            </exception>
      <seealso cref="M:Aspose.Gis.Geometries.IGeometry.SpatiallyContains(Aspose.Gis.Geometries.IGeometry)" />
      <seealso cref="M:Aspose.Gis.Geometries.IGeometry.CoveredBy(Aspose.Gis.Geometries.IGeometry)" />
    </member>
    <member name="M:Aspose.Gis.Geometries.Geometry.CoveredBy(Aspose.Gis.Geometries.IGeometry)">
      <summary>
            Determines whether this geometry is covered by a specified geometry.
            </summary>
      <param name="other">A geometry.</param>
      <returns>
        <see langword="true" /> if this geometry is "spatially covered by" another geometry. <see langword="false" /> otherwise.
            </returns>
      <remarks>
            This method tests whether one geometry is covered by another in terms of DE-9IM intersection matrix.<cr />
            This method is equivalent to:
            <code>
            other.Covers(this);
            </code></remarks>
      <exception cref="T:System.ArgumentNullException">Argument is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
            One of the geometries is invalid in such way that operation can not be finished.
            </exception>
      <exception cref="T:System.ArgumentException">
        <see cref="P:Aspose.Gis.Geometries.IGeometry.SpatialReferenceSystem" /> of geometries are not equivalent.
            You can use <see cref="T:Aspose.Gis.SpatialReferencing.SpatialReferenceSystemTransformation" /> in order to convert geometries to the same spatial
            reference system.
            </exception>
      <seealso cref="M:Aspose.Gis.Geometries.IGeometry.SpatiallyContains(Aspose.Gis.Geometries.IGeometry)" />
      <seealso cref="M:Aspose.Gis.Geometries.IGeometry.Covers(Aspose.Gis.Geometries.IGeometry)" />
    </member>
    <member name="M:Aspose.Gis.Geometries.Geometry.Relate(Aspose.Gis.Geometries.IGeometry,System.String)">
      <summary>
            Determines if DE-9IM intersection matrix of this geometry and a specified geometry matches provided pattern.
            </summary>
      <param name="other">A geometry.</param>
      <param name="intersectionPatternMatrix">
            A patter to match with.
            This should be a string with length equal to 9.
            Each character of the string represent expected dimension of an intersection:
            <ul><li>character 0 - between interiors of the geometries.</li><li>character 1 - between interior of this geometry and boundary of another geometry.</li><li>character 2 - between interior of this geometry and exterior of another geometry.</li><li>character 3 - between boundary of this geometry and interior of another geometry.</li><li>character 4 - between boundaries of the geometries.</li><li>character 5 - between boundary of this geometry and exterior of another geometry.</li><li>character 6 - between exterior of this geometry and interior of another geometry.</li><li>character 7 - between exterior of this geometry and boundary of another geometry.</li><li>character 8 - between exteriors of the geometries.</li></ul>
            Possible values of each characters are:
            <ul><li>* - any value;</li><li>F - no intersection;</li><li>T - any intersection;</li><li>0 - point intersection (e.g. shared point);</li><li>1 - line intersection (e.g. shared segment of line);</li><li>2 - area intersection (e.g. shared part of polygon);</li></ul>
            For example, an intersection pattern "F0*******" means, that there should not be intersection between geometries interiors
            and intersection between geometries boundaries must be a point.
            See OpenGIS Simple Features Specification for more details about intersection matrix pattern.
            </param>
      <remarks>
            This method builds DE-9IM intersection matrix and matches it with the pattern
            See OpenGIS Simple Features Specification for more details about DE-9IM intersection matrix.
            </remarks>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
            One of the geometries is invalid in such way that operation can not be finished.
            </exception>
      <exception cref="T:System.ArgumentException">
        <see cref="P:Aspose.Gis.Geometries.IGeometry.SpatialReferenceSystem" /> of geometries are not equivalent.
            You can use <see cref="T:Aspose.Gis.SpatialReferencing.SpatialReferenceSystemTransformation" /> in order to convert geometries to the same spatial
            reference system.
            </exception>
      <example>
            The following code:
            <code>geometry.Relate(other, "T*F**FFF*");</code><cr />
            will detect whether geometries are spatially equal.
            </example>
      <returns>
        <see langword="true" /> if this intersection matrix matches patter; <see langword="false" /> otherwise.
            </returns>
    </member>
    <member name="M:Aspose.Gis.Geometries.Geometry.Intersection(Aspose.Gis.Geometries.IGeometry)">
      <summary>
            Builds an intersection between this geometry and a specified geometry.
            </summary>
      <returns>
            A geometry that represents an intersection of this geometry and an argument. The result geometry contain
            point set that present in both this geometry and an argument.
            </returns>
      <param name="other">A geometry to compute intersection with.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
            One of the geometries is invalid in such way that operation can not be finished.
            </exception>
      <exception cref="T:System.ArgumentException">
        <see cref="P:Aspose.Gis.Geometries.IGeometry.SpatialReferenceSystem" /> of geometries are not equivalent.
            You can use <see cref="T:Aspose.Gis.SpatialReferencing.SpatialReferenceSystemTransformation" /> in order to convert geometries to the same spatial
            reference system.
            </exception>
    </member>
    <member name="M:Aspose.Gis.Geometries.Geometry.Union(Aspose.Gis.Geometries.IGeometry)">
      <summary>
            Unites this geometry and a specified geometry.
            </summary>
      <returns>
            A geometry that represents a union of this geometry and an argument. The result geometry contains
            point set that present in this geometry or in an argument.
            </returns>
      <param name="other">A geometry to unite with.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
            One of the geometries is invalid in such way that operation can not be finished.
            </exception>
      <exception cref="T:System.ArgumentException">
        <see cref="P:Aspose.Gis.Geometries.IGeometry.SpatialReferenceSystem" /> of geometries are not equivalent.
            You can use <see cref="T:Aspose.Gis.SpatialReferencing.SpatialReferenceSystemTransformation" /> in order to convert geometries to the same spatial
            reference system.
            </exception>
    </member>
    <member name="M:Aspose.Gis.Geometries.Geometry.Difference(Aspose.Gis.Geometries.IGeometry)">
      <summary>
            Subtracts a specified geometry from this geometry.
            </summary>
      <returns>
            A geometry that represents a difference of this geometry and an argument. The result geometry contains
            point set that present in this geometry but not present in an argument.
            </returns>
      <param name="other">A geometry to subtract.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
            One of the geometries is invalid in such way that operation can not be finished.
            </exception>
      <exception cref="T:System.ArgumentException">
        <see cref="P:Aspose.Gis.Geometries.IGeometry.SpatialReferenceSystem" /> of geometries are not equivalent.
            You can use <see cref="T:Aspose.Gis.SpatialReferencing.SpatialReferenceSystemTransformation" /> in order to convert geometries to the same spatial
            reference system.
            </exception>
    </member>
    <member name="M:Aspose.Gis.Geometries.Geometry.SymDifference(Aspose.Gis.Geometries.IGeometry)">
      <summary>
            Builds a symmetric difference between this geometry and a specified geometry.
            </summary>
      <returns>
            A geometry that represents a symmetric difference of this geometry and an argument. The result geometry contains
            point set that present in one of the geometries but not present in both of them.
            </returns>
      <param name="other">A geometry to compute symmetric difference with.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
            One of the geometries is invalid in such way that operation can not be finished.
            </exception>
      <exception cref="T:System.ArgumentException">
        <see cref="P:Aspose.Gis.Geometries.IGeometry.SpatialReferenceSystem" /> of geometries are not equivalent.
            You can use <see cref="T:Aspose.Gis.SpatialReferencing.SpatialReferenceSystemTransformation" /> in order to convert geometries to the same spatial
            reference system.
            </exception>
    </member>
    <member name="M:Aspose.Gis.Geometries.Geometry.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Geometries.Geometry" /> class.
            </summary>
    </member>
    <member name="T:Aspose.Gis.Geometries.GeometryCollection">
      <summary>
            A <see cref="T:Aspose.Gis.Geometries.GeometryCollection" /> is a <see cref="T:Aspose.Gis.Geometries.Geometry" /> that is a collection of one or more geometries.
            </summary>
    </member>
    <member name="M:Aspose.Gis.Geometries.GeometryCollection.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Geometries.GeometryCollection" /> class.
            </summary>
    </member>
    <member name="P:Aspose.Gis.Geometries.GeometryCollection.Count">
      <summary>
            Gets the number of geometries in this collection.
            </summary>
      <value>
            The count if geometries.
            </value>
    </member>
    <member name="P:Aspose.Gis.Geometries.GeometryCollection.Item(System.Int32)">
      <summary>
            Gets a <see cref="T:Aspose.Gis.Geometries.IGeometry" /> at the specified index.
            </summary>
      <value>
            The <see cref="T:Aspose.Gis.Geometries.IGeometry" />.
            </value>
      <param name="index">The index.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Index is out of range.</exception>
    </member>
    <member name="P:Aspose.Gis.Geometries.GeometryCollection.Dimension">
      <summary>
            Gets the topological dimension of this <see cref="T:Aspose.Gis.Geometries.Geometry" />.
            </summary>
    </member>
    <member name="P:Aspose.Gis.Geometries.GeometryCollection.IsEmpty">
      <summary>
            Gets a value indicating whether this instance is empty.
            </summary>
      <value>
        <see langword="true" /> if this instance is empty; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:Aspose.Gis.Geometries.GeometryCollection.GeometryType">
      <summary>
            Gets the type of the geometry.
            </summary>
      <value>
            The type of the geometry.
            </value>
    </member>
    <member name="P:Aspose.Gis.Geometries.GeometryCollection.HasM">
      <summary>
            Gets a value indicating whether this instance has M coordinate.
            </summary>
      <value>
        <see langword="true" /> if this instance has M coordinate; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:Aspose.Gis.Geometries.GeometryCollection.HasZ">
      <summary>
            Gets a value indicating whether this instance has Z coordinate.
            </summary>
      <value>
        <see langword="true" /> if this instance has Z coordinate; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:Aspose.Gis.Geometries.GeometryCollection.HasCurveGeometry">
      <summary>
            Gets a value indicating whether this geometry is or contains curve (not linear) geometry.
            </summary>
      <value>
        <see langword="false" /> if this geometry and all geometries it contains are linear; otherwise, <see langword="true" />.
            </value>
    </member>
    <member name="P:Aspose.Gis.Geometries.GeometryCollection.SpatialReferenceSystem">
      <summary>
            Gets SpatialReferenceSystem of this instance.
            This property can be <see langword="null" />, is SpatialReferenceSystem is unknown.
            Assigning new SpatialReferenceSystem will not perform any coordinate transformation, only reference will change.
            </summary>
    </member>
    <member name="M:Aspose.Gis.Geometries.GeometryCollection.GetPointOnSurface">
      <summary>
            Finds a point that is guaranteed to be on one of the surfaces in this collection.
            </summary>
      <returns>
            A point on one of the surfaces. An empty point if this collection does not contain surfaces or all surfaces are empty.
            </returns>
    </member>
    <member name="M:Aspose.Gis.Geometries.GeometryCollection.ToEditable">
      <summary>
            Gets an editable copy of this geometry.
            </summary>
      <returns>An editable copy of this geometry.</returns>
    </member>
    <member name="M:Aspose.Gis.Geometries.GeometryCollection.ToLinearGeometry">
      <summary>
            Gets approximate or equivalent non-curve version of this geometry using the default <c>tolerance</c>.
            </summary>
      <returns>
            A geometry, that has no curve geometries. This is the equivalent of <see cref="M:Aspose.Gis.Geometries.IGeometryCollection.ToLinearGeometry(System.Double)" /> with
            default <c>tolerance</c>. Default <c>tolerance</c>s value is dependent on <see cref="T:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem" />
            of this geometry:
            <ul><li> For projected SRS Tolerance is 0.001 meters (in SRS units) </li><li> For geographic SRS Tolerance is <c>1e-5</c> degrees (in SRS units) </li><li> For unknown SRS Tolerance is <c>1e-5</c></li></ul>
            For more details on what transformations are applied refer to <see cref="M:Aspose.Gis.Geometries.IGeometryCollection.ToLinearGeometry(System.Double)" /> specification.
            </returns>
      <exception cref="T:System.InvalidOperationException">
            This geometry is invalid in a such way, that operation can not be completed.
            </exception>
    </member>
    <member name="M:Aspose.Gis.Geometries.GeometryCollection.ToLinearGeometry(System.Double)">
      <summary>
            Gets approximate or equivalent non-curve version of this geometry using the specified <c>tolerance</c>.
            </summary>
      <param name="tolerance">
            The <c>tolerance</c> to use. The result is guaranteed to be less than <c>tolerance</c> away from the
            curved geometry.
            </param>
      <returns>
            A geometry, that has no curve geometries. The following transformations are applied:
            <ul><li><see cref="F:Aspose.Gis.Geometries.GeometryType.CircularString" />s are linearized
            (transformed into <see cref="F:Aspose.Gis.Geometries.GeometryType.LineString" />s with specified <paramref name="tolerance" />) </li><li><see cref="F:Aspose.Gis.Geometries.GeometryType.CompoundCurve" />s are joined into <c>LineString</c>s </li><li><see cref="F:Aspose.Gis.Geometries.GeometryType.CurvePolygon" />s are transformed into <see cref="F:Aspose.Gis.Geometries.GeometryType.Polygon" />s </li><li><see cref="F:Aspose.Gis.Geometries.GeometryType.MultiCurve" />s are transformed into <see cref="F:Aspose.Gis.Geometries.GeometryType.MultiCurve" />s </li><li><see cref="F:Aspose.Gis.Geometries.GeometryType.MultiSurface" />s are transformed into <see cref="F:Aspose.Gis.Geometries.GeometryType.MultiPolygon" />s </li></ul>
            As a result, <see cref="P:Aspose.Gis.Geometries.IGeometry.HasCurveGeometry" /> of output geometry is <see langword="false" />.
            </returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <c>tolerance</c> is less than or equal to <c>0</c>.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            This geometry is invalid in a such way, that operation can not be completed.
            </exception>
    </member>
    <member name="M:Aspose.Gis.Geometries.GeometryCollection.Add(Aspose.Gis.Geometries.IGeometry)">
      <summary>
            Adds the specified geometry to the collection.
            </summary>
      <param name="geometry">The geometry to add.</param>
      <exception cref="T:System.ArgumentNullException">The argument is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">The collection does not accept geometries of this type.</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="P:Aspose.Gis.Geometries.IGeometry.SpatialReferenceSystem" /> of this geometry and <see cref="P:Aspose.Gis.Geometries.GeometryCollection.SpatialReferenceSystem" /> of argument are both not
            <see langword="null" /> and don't equal to each other.
            </exception>
    </member>
    <member name="M:Aspose.Gis.Geometries.GeometryCollection.AddRange(System.Collections.Generic.IEnumerable{Aspose.Gis.Geometries.IGeometry})">
      <summary>
            Adds the specified geometries to the collection.
            </summary>
      <param name="geometries">The geometries to add.</param>
      <exception cref="T:System.ArgumentNullException">The argument is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">The collection does not accept geometries of this type.</exception>
    </member>
    <member name="M:Aspose.Gis.Geometries.GeometryCollection.RemoveAt(System.Int32)">
      <summary>
            Removes the specified geometry from the collection.
            </summary>
      <param name="index">Index of the geometry to remove.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Index is out of range.</exception>
    </member>
    <member name="M:Aspose.Gis.Geometries.GeometryCollection.Clone">
      <summary>
            Clones this instance.
            </summary>
      <returns>The clone of this instance</returns>
    </member>
    <member name="M:Aspose.Gis.Geometries.GeometryCollection.SetEmpty">
      <summary>
            Makes this <see cref="T:Aspose.Gis.Geometries.Geometry" /> empty.
            </summary>
    </member>
    <member name="M:Aspose.Gis.Geometries.GeometryCollection.GetEnumerator">
      <summary>Returns an enumerator that iterates through the collection.</summary>
      <returns>An enumerator that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:Aspose.Gis.Geometries.GeometryCollection.Equals(System.Object)">
      <summary>Determines whether the specified object is equal to the current object.</summary>
      <param name="obj">The object to compare with the current object. </param>
      <returns>true if the specified object  is equal to the current object; otherwise, false.</returns>
    </member>
    <member name="M:Aspose.Gis.Geometries.GeometryCollection.GetHashCode">
      <summary>Serves as the default hash function. </summary>
      <returns>A hash code for the current object.</returns>
    </member>
    <member name="M:Aspose.Gis.Geometries.GeometryCollection.Equals(Aspose.Gis.Geometries.IGeometryCollection)">
      <summary>Indicates whether the current object is equal to another object of the same type.</summary>
      <param name="other">An object to compare with this object.</param>
      <returns>true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.</returns>
    </member>
    <member name="M:Aspose.Gis.Geometries.GeometryCollection.op_Equality(Aspose.Gis.Geometries.GeometryCollection,Aspose.Gis.Geometries.GeometryCollection)">
      <summary>
            Implements the operator ==.
            </summary>
      <param name="a">The A instance.</param>
      <param name="b">The B instance.</param>
      <returns>
            The result of the operator.
            </returns>
    </member>
    <member name="M:Aspose.Gis.Geometries.GeometryCollection.op_Inequality(Aspose.Gis.Geometries.GeometryCollection,Aspose.Gis.Geometries.GeometryCollection)">
      <summary>
            Implements the operator !=.
            </summary>
      <param name="a">The A instance.</param>
      <param name="b">The B instance.</param>
      <returns>
            The result of the operator.
            </returns>
    </member>
    <member name="T:Aspose.Gis.Geometries.GeometryDimension">
      <summary>
            Topological dimension of a <see cref="T:Aspose.Gis.Geometries.Geometry" />.
            </summary>
    </member>
    <member name="F:Aspose.Gis.Geometries.GeometryDimension.Point">
      <summary>
            0-dimensional (a point).
            </summary>
    </member>
    <member name="F:Aspose.Gis.Geometries.GeometryDimension.Line">
      <summary>
            1-dimensional (a line).
            </summary>
    </member>
    <member name="F:Aspose.Gis.Geometries.GeometryDimension.Surface">
      <summary>
            2-dimensional (a surface).
            </summary>
    </member>
    <member name="T:Aspose.Gis.Geometries.GeometryType">
      <summary>
            The type of a geometry in a layer.
            </summary>
    </member>
    <member name="F:Aspose.Gis.Geometries.GeometryType.Null">
      <summary>
            The geometry type is not set.
            </summary>
    </member>
    <member name="F:Aspose.Gis.Geometries.GeometryType.Mixed">
      <summary>
            The geometry type is mixed.
            </summary>
    </member>
    <member name="F:Aspose.Gis.Geometries.GeometryType.Point">
      <summary>
            The geometry is an <see cref="T:Aspose.Gis.Geometries.IPoint" />.
            </summary>
    </member>
    <member name="F:Aspose.Gis.Geometries.GeometryType.LineString">
      <summary>
            The geometry is an <see cref="T:Aspose.Gis.Geometries.ILineString" />.
            </summary>
    </member>
    <member name="F:Aspose.Gis.Geometries.GeometryType.LinearRing">
      <summary>
            The geometry is an <see cref="T:Aspose.Gis.Geometries.ILinearRing" />.
            </summary>
    </member>
    <member name="F:Aspose.Gis.Geometries.GeometryType.CircularString">
      <summary>
            The geometry is an <see cref="T:Aspose.Gis.Geometries.ICircularString" />.
            </summary>
    </member>
    <member name="F:Aspose.Gis.Geometries.GeometryType.CompoundCurve">
      <summary>
            The geometry is an <see cref="T:Aspose.Gis.Geometries.ICompoundCurve" />.
            </summary>
    </member>
    <member name="F:Aspose.Gis.Geometries.GeometryType.CurvePolygon">
      <summary>
            The geometry is an <see cref="T:Aspose.Gis.Geometries.ICurvePolygon" />.
            </summary>
    </member>
    <member name="F:Aspose.Gis.Geometries.GeometryType.Polygon">
      <summary>
            The geometry is an <see cref="T:Aspose.Gis.Geometries.IPolygon" />.
            </summary>
    </member>
    <member name="F:Aspose.Gis.Geometries.GeometryType.MultiPoint">
      <summary>
            The geometry is an <see cref="T:Aspose.Gis.Geometries.IMultiPoint" />.
            </summary>
    </member>
    <member name="F:Aspose.Gis.Geometries.GeometryType.MultiCurve">
      <summary>
            The geometry is an <see cref="T:Aspose.Gis.Geometries.IMultiCurve" />.
            </summary>
    </member>
    <member name="F:Aspose.Gis.Geometries.GeometryType.MultiLineString">
      <summary>
            The geometry is an <see cref="T:Aspose.Gis.Geometries.IMultiLineString" />.
            </summary>
    </member>
    <member name="F:Aspose.Gis.Geometries.GeometryType.MultiSurface">
      <summary>
            The geometry is an <see cref="T:Aspose.Gis.Geometries.IMultiSurface" />.
            </summary>
    </member>
    <member name="F:Aspose.Gis.Geometries.GeometryType.MultiPolygon">
      <summary>
            The geometry is an <see cref="T:Aspose.Gis.Geometries.IMultiPolygon" />.
            </summary>
    </member>
    <member name="F:Aspose.Gis.Geometries.GeometryType.GeometryCollection">
      <summary>
            The geometry is an <see cref="T:Aspose.Gis.Geometries.IGeometryCollection" />.
            </summary>
    </member>
    <member name="T:Aspose.Gis.Geometries.ICircularString">
      <summary>
            A multi-vertex curve with circular interpolation between points.
            </summary>
      <remarks>
            The <c>CircularString</c> consists of one or more circular arc segments connected end to end.
            The first three points define the first segment. The first point is the start point of the arc.
            The second point is any intermediate point on the arc other than the start or end point.
            The third point is the end of the arc. Subsequent arcs are defined by their intermediate and end points only,
            as the start point is implicitly defined as the previous segment's end point.
            </remarks>
    </member>
    <member name="M:Aspose.Gis.Geometries.ICircularString.ToEditable">
      <summary>
            Gets an editable copy of this geometry.
            </summary>
      <returns>An editable copy of this geometry.</returns>
    </member>
    <member name="T:Aspose.Gis.Geometries.ICompoundCurve">
      <summary>
            A curve that represents a sequence of contiguous curves such that adjacent curves are joined at their end points.
            </summary>
    </member>
    <member name="P:Aspose.Gis.Geometries.ICompoundCurve.Count">
      <summary>
            Gets the number of curves in the <see cref="T:Aspose.Gis.Geometries.ICompoundCurve" />.
            </summary>
    </member>
    <member name="P:Aspose.Gis.Geometries.ICompoundCurve.Item(System.Int32)">
      <summary>
            Gets the <see cref="T:Aspose.Gis.Geometries.ICurve" /> at the specified index.
            </summary>
      <value>
            The <see cref="T:Aspose.Gis.Geometries.ICurve" />.
            </value>
      <param name="index">The index.</param>
    </member>
    <member name="M:Aspose.Gis.Geometries.ICompoundCurve.ToEditable">
      <summary>
            Gets an editable copy of this geometry.
            </summary>
      <returns>An editable copy of this geometry.</returns>
    </member>
    <member name="T:Aspose.Gis.Geometries.ICurve">
      <summary>
            A <see cref="T:Aspose.Gis.Geometries.ICurve" /> is a sequence of points.
            </summary>
    </member>
    <member name="P:Aspose.Gis.Geometries.ICurve.StartPoint">
      <summary>
            Returns a copy of the starting point of the curve.
            </summary>
      <exception cref="T:System.InvalidOperationException">The geometry is empty.</exception>
    </member>
    <member name="P:Aspose.Gis.Geometries.ICurve.EndPoint">
      <summary>
            Returns a copy of the end point of the curve.
            </summary>
      <exception cref="T:System.InvalidOperationException">The geometry is empty.</exception>
    </member>
    <member name="P:Aspose.Gis.Geometries.ICurve.IsClosed">
      <summary>
            Gets a values indicating whether a curve is closed.
            A curve is closed if its start point is equal to its end point.
            </summary>
    </member>
    <member name="M:Aspose.Gis.Geometries.ICurve.ToEditable">
      <summary>
            Gets an editable copy of this geometry.
            </summary>
      <returns>An editable copy of this geometry.</returns>
    </member>
    <member name="M:Aspose.Gis.Geometries.ICurve.ToLinearGeometry">
      <summary>
            Gets approximate or equivalent non-curve version of this geometry using the default <c>tolerance</c>.
            </summary>
      <returns>
            A <see cref="T:Aspose.Gis.Geometries.ILineString" /> that approximates or equivalent to this curve.
            This is the equivalent of <see cref="M:Aspose.Gis.Geometries.ICurve.ToLinearGeometry(System.Double)" /> with
            default <c>tolerance</c>. Default <c>tolerance</c>s value is dependent on <see cref="T:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem" />
            of this geometry:
            <ul><li> For projected SRS Tolerance is 0.001 meters (in SRS units) </li><li> For geographic SRS Tolerance is <c>1e-5</c> degrees (in SRS units) </li><li> For unknown SRS Tolerance is <c>1e-5</c></li></ul>
            For more details on what transformations are applied refer to <see cref="M:Aspose.Gis.Geometries.ICurve.ToLinearGeometry(System.Double)" /> specification.
            </returns>
      <exception cref="T:System.InvalidOperationException">
            This geometry is invalid in a such way, that operation can not be completed.
            </exception>
    </member>
    <member name="M:Aspose.Gis.Geometries.ICurve.ToLinearGeometry(System.Double)">
      <summary>
             Gets approximate or equivalent non-curve version of this geometry using the specified <c>tolerance</c>.
             </summary>
      <param name="tolerance">
             The <c>tolerance</c> to use. The result is guaranteed to be less than <c>tolerance</c> away from the
             curved geometry, unless the number of points needed to linearize the geometry exceeds the per-quadrant maximum,
             currently equal to 10000 points.
             </param>
      <returns>
             A <see cref="T:Aspose.Gis.Geometries.ILineString" /> that approximates or equivalent to this curve:
             <ul>
             If this object is <see cref="T:Aspose.Gis.Geometries.ILineString" /> itself the result is equivalent to this object
             If this object is <see cref="T:Aspose.Gis.Geometries.ICircularString" /> the result is the circular string linearized with the specified <paramref name="tolerance" />
             If this object is <see cref="T:Aspose.Gis.Geometries.ICompoundCurve" /> - all curves from it are linearized and then joined into <see cref="T:Aspose.Gis.Geometries.ILineString" /></ul></returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <c>tolerance</c> is less than or equal to <c>0</c>.
             </exception>
      <exception cref="T:System.InvalidOperationException">
             This geometry is invalid in a such way, that operation can not be completed.
             </exception>
    </member>
    <member name="T:Aspose.Gis.Geometries.ICurvePolygon">
      <summary>
            A planar surface, defined by 1 exterior boundary and 0 or more interior boundaries.
            </summary>
    </member>
    <member name="P:Aspose.Gis.Geometries.ICurvePolygon.ExteriorRing">
      <summary>
            Gets the exterior ring.
            </summary>
      <value>
            The exterior ring.
            </value>
    </member>
    <member name="M:Aspose.Gis.Geometries.ICurvePolygon.GetInteriorRing(System.Int32)">
      <summary>
            Gets the interior ring by its index.
            </summary>
      <param name="index">The index.</param>
      <returns>The interior ring.</returns>
    </member>
    <member name="P:Aspose.Gis.Geometries.ICurvePolygon.InteriorRingsCount">
      <summary>
            Gets the number of interior rings.
            </summary>
      <value>
            The number of interior rings.
            </value>
    </member>
    <member name="T:Aspose.Gis.Geometries.IGeometry">
      <summary>
            The interface root class of Geometries hierarchy
            </summary>
    </member>
    <member name="P:Aspose.Gis.Geometries.IGeometry.GeometryType">
      <summary>
            Gets the type of the geometry.
            </summary>
      <value>
            The type of the geometry.
            </value>
    </member>
    <member name="P:Aspose.Gis.Geometries.IGeometry.Dimension">
      <summary>
            Gets the topological dimension of this <see cref="T:Aspose.Gis.Geometries.IGeometry" />.
            </summary>
    </member>
    <member name="P:Aspose.Gis.Geometries.IGeometry.IsEmpty">
      <summary>
            Gets a value indicating whether this instance is empty (represents the empty point set).
            </summary>
      <value>
        <see langword="true" /> if this instance is empty; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:Aspose.Gis.Geometries.IGeometry.IsSimple">
      <summary>
            Gets a value indicating whether this instance is simple from SFA point of view.
            </summary>
    </member>
    <member name="P:Aspose.Gis.Geometries.IGeometry.IsValid">
      <summary>
            Gets a value indicating whether this instance is valid.
            </summary>
    </member>
    <member name="P:Aspose.Gis.Geometries.IGeometry.HasM">
      <summary>
            Gets a value indicating whether this instance has M coordinate.
            </summary>
      <value>
        <see langword="true" /> if this instance has M coordinate; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:Aspose.Gis.Geometries.IGeometry.HasZ">
      <summary>
            Gets a value indicating whether this instance has Z coordinate.
            </summary>
      <value>
        <see langword="true" /> if this instance has Z coordinate; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:Aspose.Gis.Geometries.IGeometry.SpatialReferenceSystem">
      <summary>
            Gets SpatialReferenceSystem of this instance.
            This property can be <see langword="null" />, if SpatialReferenceSystem is unknown.
            </summary>
    </member>
    <member name="P:Aspose.Gis.Geometries.IGeometry.HasCurveGeometry">
      <summary>
            Gets a value indicating whether this geometry is or contains curve (not linear) geometry.
            </summary>
      <value>
        <see langword="false" /> if this geometry and all geometries it contains are linear; otherwise, <see langword="true" />.
            </value>
    </member>
    <member name="M:Aspose.Gis.Geometries.IGeometry.ToLinearGeometry">
      <summary>
            Gets approximate or equivalent non-curve version of this geometry using the default <c>tolerance</c>.
            </summary>
      <returns>
            A geometry that has no curve geometries. This is the equivalent of <see cref="M:Aspose.Gis.Geometries.IGeometry.ToLinearGeometry(System.Double)" /> with
            default <c>tolerance</c>. Default <c>tolerance</c> is defined by <see cref="P:Aspose.Gis.Geometries.IGeometry.SpatialReferenceSystem" />
            of this geometry:
            <ul><li> For projected SRS Tolerance is 0.001 meters (in SRS units) </li><li> For geographic SRS Tolerance is <c>1e-5</c> degrees (in SRS units) </li><li> For unknown SRS Tolerance is <c>1e-5</c></li></ul>
            For more details on what transformations are applied refer to <see cref="M:Aspose.Gis.Geometries.IGeometry.ToLinearGeometry(System.Double)" /> specification.
            </returns>
      <exception cref="T:System.InvalidOperationException">
            This geometry is invalid in a such way, that operation can not be completed.
            </exception>
    </member>
    <member name="M:Aspose.Gis.Geometries.IGeometry.ToLinearGeometry(System.Double)">
      <summary>
            Gets approximate or equivalent non-curve version of this geometry using the specified <c>tolerance</c>.
            </summary>
      <param name="tolerance">
            The <c>tolerance</c> to use. The result is guaranteed to be less than <c>tolerance</c> away from the
            curved geometry, unless the number of points needed to linearize the geometry exceeds the per-quadrant maximum
            which is currently equal to 10000 points.
            </param>
      <returns>
            A geometry, that has no curve geometries. The following transformations are applied:
            <ul><li><see cref="F:Aspose.Gis.Geometries.GeometryType.CircularString" />s are linearized
            (transformed into <see cref="F:Aspose.Gis.Geometries.GeometryType.LineString" />s with specified <paramref name="tolerance" />) </li><li><see cref="F:Aspose.Gis.Geometries.GeometryType.CompoundCurve" />s are joined into <c>LineString</c>s </li><li><see cref="F:Aspose.Gis.Geometries.GeometryType.CurvePolygon" />s are transformed into <see cref="F:Aspose.Gis.Geometries.GeometryType.Polygon" />s </li><li><see cref="F:Aspose.Gis.Geometries.GeometryType.MultiCurve" />s are transformed into <see cref="F:Aspose.Gis.Geometries.GeometryType.MultiLineString" />s </li><li><see cref="F:Aspose.Gis.Geometries.GeometryType.MultiSurface" />s are transformed into <see cref="F:Aspose.Gis.Geometries.GeometryType.MultiPolygon" />s </li></ul>
            As a result, <see cref="P:Aspose.Gis.Geometries.IGeometry.HasCurveGeometry" /> of output geometry is <see langword="false" />.
            </returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <c>tolerance</c> is less than or equal to <c>0</c>.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            This geometry is invalid in a such way, that operation can not be completed.
            </exception>
    </member>
    <member name="M:Aspose.Gis.Geometries.IGeometry.Clone">
      <summary>
            Clones this instance.
            </summary>
      <returns>The clone of this instance</returns>
    </member>
    <member name="M:Aspose.Gis.Geometries.IGeometry.ToEditable">
      <summary>
            Gets an editable copy of this geometry.
            </summary>
      <returns> An editable copy of this geometry. </returns>
    </member>
    <member name="M:Aspose.Gis.Geometries.IGeometry.ToEditable``1">
      <summary>
            Gets an editable copy of this geometry.
            </summary>
      <typeparam name="T">
            Type of the geometry to get. Must be an inheritor of <see cref="T:Aspose.Gis.Geometries.Geometry" /> class.
            </typeparam>
      <returns> An editable copy of this geometry. </returns>
      <exception cref="T:System.InvalidCastException">
            Unable to cast an editable copy of this geometry to type <typeparamref name="T" />.
            </exception>
    </member>
    <member name="M:Aspose.Gis.Geometries.IGeometry.AsText">
      <summary>
            Translates this geometry to its Well-Known Text representation.
            </summary>
      <returns>Well-Known Text representation of this geometry.</returns>
      <remarks>Output of this method is in <see cref="F:Aspose.Gis.Geometries.WktVariant.Iso" /> WKT variant.</remarks>
    </member>
    <member name="M:Aspose.Gis.Geometries.IGeometry.AsText(Aspose.Gis.Geometries.WktVariant)">
      <summary>
            Translates this geometry to its Well-Known Text representation.
            </summary>
      <returns>Well-Known Text representation of this geometry.</returns>
      <param name="variant">Well-Known Text variant to use.</param>
      <exception cref="T:System.NotSupportedException">
            The geometry is not supported by requested WKT variant.
            The following geometries are supported only by <see cref="F:Aspose.Gis.Geometries.WktVariant.Iso" /> WKT variant:
            <ul><li><see cref="T:Aspose.Gis.Geometries.CircularString" /></li><li><see cref="T:Aspose.Gis.Geometries.CompoundCurve" /></li><li><see cref="T:Aspose.Gis.Geometries.CurvePolygon" /></li><li><see cref="T:Aspose.Gis.Geometries.MultiCurve" /></li><li><see cref="T:Aspose.Gis.Geometries.MultiSurface" /></li></ul>
            All other geometries are supported by any WKT variant.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="variant" /> is not a valid <see cref="T:Aspose.Gis.Geometries.WktVariant" />.</exception>
    </member>
    <member name="M:Aspose.Gis.Geometries.IGeometry.AsBinary">
      <summary>
            Translates this geometry to its Well-Known Binary representation.
            </summary>
      <returns>Well-Known Binary representation of this geometry.</returns>
      <remarks>Output of this method is in <see cref="F:Aspose.Gis.Geometries.WkbVariant.Iso" /> WKB variant.</remarks>
    </member>
    <member name="M:Aspose.Gis.Geometries.IGeometry.AsBinary(Aspose.Gis.Geometries.WkbVariant)">
      <summary>
            Translates this geometry to its Well-Known Binary representation.
            </summary>
      <returns>Well-Known Binary representation of this geometry.</returns>
      <param name="variant">Well-Known Binary variant to use.</param>
      <exception cref="T:System.NotSupportedException">
            Geometry can not be represented in requested WKB variant. Currently this happens when 
            <see cref="P:Aspose.Gis.Geometries.IGeometry.HasCurveGeometry" /> of geometry is <see langword="true" /> and WKB variant is
            <see cref="F:Aspose.Gis.Geometries.WkbVariant.SimpleFeatureAccessOutdated" />.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="variant" /> is not a valid <see cref="T:Aspose.Gis.Geometries.WkbVariant" />.</exception>
    </member>
    <member name="M:Aspose.Gis.Geometries.IGeometry.GetExtent">
      <summary>
            Computes and returns a bounding extent of this geometry.
            </summary>
      <returns> A bounding extent of this geometry. </returns>
    </member>
    <member name="M:Aspose.Gis.Geometries.IGeometry.GetArea">
      <summary>
            Computes the area of this geometry.
            </summary>
      <returns>
            The area of this geometry.
            Sum of areas of elements of this geometry if this geometry is a <see cref="T:Aspose.Gis.Geometries.GeometryCollection" />.
            </returns>
    </member>
    <member name="M:Aspose.Gis.Geometries.IGeometry.GetLength">
      <summary>
            Computes the length of this geometry.
            </summary>
      <returns>
            The length of this geometry.
            Perimeter if this is a <see cref="T:Aspose.Gis.Geometries.Polygon" />.
            Sum of lengths of elements of this geometry if this geometry is a <see cref="T:Aspose.Gis.Geometries.GeometryCollection" />.
            </returns>
    </member>
    <member name="M:Aspose.Gis.Geometries.IGeometry.GetDistanceTo(Aspose.Gis.Geometries.IGeometry)">
      <summary>
            Computes the minimum distance between this geometry and a specified geometry.
            </summary>
      <param name="other">A geometry to find distance to.</param>
      <returns>
            If both geometries are not <see cref="P:Aspose.Gis.Geometries.IGeometry.IsEmpty" /> - a distance between closest points of the geometries.
            If at least one geometry is empty -1 is returned.
            </returns>
      <exception cref="T:System.ArgumentNullException">Argument is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="P:Aspose.Gis.Geometries.IGeometry.SpatialReferenceSystem" /> of geometries are not equivalent.
            You can use <see cref="T:Aspose.Gis.SpatialReferencing.SpatialReferenceSystemTransformation" /> in order to convert geometries to the same spatial
            reference system.
            </exception>
    </member>
    <member name="M:Aspose.Gis.Geometries.IGeometry.GetConvexHull">
      <summary>
            Computes the convex hull of this geometry.
            </summary>
      <returns>
            A geometry that represents a convex hull of this geometry.
            If this geometry has no points then the result is <see cref="P:Aspose.Gis.Geometries.Geometry.Null" />.
            If this geometry has only one point then the result is this point.
            If this geometry has only two points then the result is <see cref="T:Aspose.Gis.Geometries.ILineString" /> with the points.
            If this geometry has three or more points then the result is <see cref="T:Aspose.Gis.Geometries.ILinearRing" /> that represents a convex
            hull around all geometries points.
            </returns>
    </member>
    <member name="M:Aspose.Gis.Geometries.IGeometry.GetCentroid">
      <summary>
            Computes the centroid of this geometry.
            </summary>
      <returns>
            The centroid of this geometry. If this geometry is empty an empty point returned.
            The centroid is equal to the centroid of the highest dimension geometries in this geometry
            (e.g. if both points and lines are contained in the geometry, only lines contribute to centroid).
            </returns>
    </member>
    <member name="M:Aspose.Gis.Geometries.IGeometry.GetBuffer(System.Double,System.Int32)">
      <summary>
            Computes a buffer region around this geometry.
            </summary>
      <param name="distance">The buffer region width.</param>
      <param name="quadrantSegments">
            Number of segments used to approximate a 90 degree of curvature.
            The larger this number is the better approximation of curves is produced.
            Default is 30.
            </param>
      <returns>
            A geometry that represents all points that are within a specified distance from
            this geometry.
            The type of result is either <see cref="P:Aspose.Gis.Geometries.Geometry.Null" />, <see cref="T:Aspose.Gis.Geometries.IPolygon" /> or <see cref="T:Aspose.Gis.Geometries.IMultiPolygon" />.
            </returns>
      <exception cref="T:System.InvalidOperationException">
            This geometry is invalid in a such way that operation can not be completed.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
            Quadrant segments is less or equal to 0.
            </exception>
    </member>
    <member name="M:Aspose.Gis.Geometries.IGeometry.Within(Aspose.Gis.Extent)">
      <summary>
            Determines whether this geometry is within a specified extent.
            </summary>
      <param name="extent">The extent.</param>
      <returns>
        <see langword="true" /> if this geometry is within extent; <see langword="false" /> otherwise.
            </returns>
      <exception cref="T:System.ArgumentNullException">Argument is <see langword="null" />.</exception>
      <seealso cref="M:Aspose.Gis.Extent.Contains(Aspose.Gis.Geometries.IGeometry)" />
    </member>
    <member name="M:Aspose.Gis.Geometries.IGeometry.Intersects(Aspose.Gis.Extent)">
      <summary>
            Determines whether this geometry intersects a specified extent.
            </summary>
      <param name="extent">The extent.</param>
      <returns>
        <see langword="true" /> if this geometry intersects the extent; <see langword="false" /> otherwise.
            </returns>
      <exception cref="T:System.ArgumentNullException">Argument is <see langword="null" />.</exception>
      <seealso cref="M:Aspose.Gis.Extent.Intersects(Aspose.Gis.Geometries.IGeometry)" />
    </member>
    <member name="M:Aspose.Gis.Geometries.IGeometry.SpatiallyEquals(Aspose.Gis.Geometries.IGeometry)">
      <summary>
            Determines if this geometry spatially equal to a specified geometry.
            </summary>
      <param name="other">A geometry.</param>
      <returns>
        <see langword="true" /> if this geometry "spatially equals" to specified geometry. <see langword="false" /> otherwise.
            </returns>
      <remarks>
            This method tests equality in terms of DE-9IM intersection matrix. It does not depend on order
            of components (e.g. order of interior rings in polygon), Z and M values. Basically, it tests
            that two geometries occupy the same "space" when projected on two dimensional space.<cr />
            This method is equivalent to:
            <code>
            this.Relate(other, "T*F**FFF*");
            </code>
            See OpenGIS Simple Features Specification for more details about DE-9IM.
            </remarks>
      <exception cref="T:System.ArgumentNullException">Argument is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
            One of the geometries is invalid in such way that operation can not be finished.
            </exception>
      <exception cref="T:System.ArgumentException">
        <see cref="P:Aspose.Gis.Geometries.IGeometry.SpatialReferenceSystem" /> of geometries are not equivalent.
            You can use <see cref="T:Aspose.Gis.SpatialReferencing.SpatialReferenceSystemTransformation" /> in order to convert geometries to the same spatial
            reference system.
            </exception>
    </member>
    <member name="M:Aspose.Gis.Geometries.IGeometry.Disjoint(Aspose.Gis.Geometries.IGeometry)">
      <summary>
            Determines if this geometry is disjoint from a specified geometry.
            </summary>
      <param name="other">A geometry.</param>
      <returns>
        <see langword="true" /> if this geometry is "spatially disjoint" from another geometry. <see langword="false" /> otherwise.
            </returns>
      <remarks>
            This method tests whether geometries are disjoint in terms of DE-9IM intersection matrix.
            Basically, it tests that two geometries have no common points.<cr />
            This method is equivalent to:
            <code>
            this.Relate(other, "FF*FF****");
            </code>
            See OpenGIS Simple Features Specification for more details about DE-9IM.
            </remarks>
      <exception cref="T:System.ArgumentNullException">Argument is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
            One of the geometries is invalid in such way that operation can not be finished.
            </exception>
      <exception cref="T:System.ArgumentException">
        <see cref="P:Aspose.Gis.Geometries.IGeometry.SpatialReferenceSystem" /> of geometries are not equivalent.
            You can use <see cref="T:Aspose.Gis.SpatialReferencing.SpatialReferenceSystemTransformation" /> in order to convert geometries to the same spatial
            reference system.
            </exception>
      <seealso cref="M:Aspose.Gis.Geometries.IGeometry.Intersects(Aspose.Gis.Geometries.IGeometry)" />
    </member>
    <member name="M:Aspose.Gis.Geometries.IGeometry.Intersects(Aspose.Gis.Geometries.IGeometry)">
      <summary>
            Determines if this geometry and a specified geometry intersects.
            </summary>
      <param name="other">A geometry.</param>
      <returns>
        <see langword="true" /> if this geometry "spatially intersects" another geometry. <see langword="false" /> otherwise.
            </returns>
      <remarks>
            This method is equivalent to:
            <code>!this.Disjoint(other);</code>
            This is the negation of <see cref="M:Aspose.Gis.Geometries.IGeometry.Disjoint(Aspose.Gis.Geometries.IGeometry)" />. See <see cref="M:Aspose.Gis.Geometries.IGeometry.Disjoint(Aspose.Gis.Geometries.IGeometry)" /> for more details.
            </remarks>
      <exception cref="T:System.ArgumentNullException">Argument is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
            One of the geometries is invalid in such way that operation can not be finished.
            </exception>
      <exception cref="T:System.ArgumentException">
        <see cref="P:Aspose.Gis.Geometries.IGeometry.SpatialReferenceSystem" /> of geometries are not equivalent.
            You can use <see cref="T:Aspose.Gis.SpatialReferencing.SpatialReferenceSystemTransformation" /> in order to convert geometries to the same spatial
            reference system.
            </exception>
    </member>
    <member name="M:Aspose.Gis.Geometries.IGeometry.Touches(Aspose.Gis.Geometries.IGeometry)">
      <summary>
            Determines if this geometry and a specified geometry touch.
            </summary>
      <param name="other">A geometry.</param>
      <returns>
        <see langword="true" /> if this geometry is "spatially touches" another geometry. <see langword="false" /> otherwise.
            </returns>
      <remarks>
            This method tests whether geometries touch each other in terms of DE-9IM intersection matrix.
            Two geometries touch each other if they have at least one boundary point in common, but no interior points.
            That is: two <see cref="T:Aspose.Gis.Geometries.LineString" />s touch each other if they share an endpoint, but don't share a segment,
            two polygons touch each other if they share part of exterior or interior ring, but their interiors don't overlap.<cr />
            This method is equivalent to:
            <code>
            this.Relate(other, "FT*******") || this.Relate(other, "F**T*****") || this.Relate(other, "F***T****");
            </code>
            See OpenGIS Simple Features Specification for more details about DE-9IM and "spatially touches" relation.
            </remarks>
      <exception cref="T:System.ArgumentNullException">Argument is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
            One of the geometries is invalid in such way that operation can not be finished.
            </exception>
      <exception cref="T:System.ArgumentException">
        <see cref="P:Aspose.Gis.Geometries.IGeometry.SpatialReferenceSystem" /> of geometries are not equivalent.
            You can use <see cref="T:Aspose.Gis.SpatialReferencing.SpatialReferenceSystemTransformation" /> in order to convert geometries to the same spatial
            reference system.
            </exception>
    </member>
    <member name="M:Aspose.Gis.Geometries.IGeometry.Crosses(Aspose.Gis.Geometries.IGeometry)">
      <summary>
            Determines if this geometry and a specified geometry cross.
            </summary>
      <param name="other">A geometry.</param>
      <returns>
        <see langword="true" /> if this geometry is "spatially crosses" another geometry. <see langword="false" /> otherwise.
            </returns>
      <remarks>
            This method tests whether geometries are crosses in terms of DE-9IM intersection matrix.
            Two geometries cross each other if they have some but not all interior points in common and
            the dimension of the intersection is less then dimension of at least one of the geometries.
            That is: two <see cref="T:Aspose.Gis.Geometries.LineString" />s cross, if they form an 'X' letter, a LineString and a <see cref="T:Aspose.Gis.Geometries.Polygon" />
            cross if LineString goes through interior of a Polygon.
            See OpenGIS Simple Features Specification for more details about DE-9IM and "spatially crosses" relation.
            </remarks>
      <exception cref="T:System.ArgumentNullException">Argument is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
            One of the geometries is invalid in such way that operation can not be finished.
            </exception>
      <exception cref="T:System.ArgumentException">
        <see cref="P:Aspose.Gis.Geometries.IGeometry.SpatialReferenceSystem" /> of geometries are not equivalent.
            You can use <see cref="T:Aspose.Gis.SpatialReferencing.SpatialReferenceSystemTransformation" /> in order to convert geometries to the same spatial
            reference system.
            </exception>
    </member>
    <member name="M:Aspose.Gis.Geometries.IGeometry.Within(Aspose.Gis.Geometries.IGeometry)">
      <summary>
            Determines whether this geometry is within a specified geometry.
            </summary>
      <param name="other">A geometry.</param>
      <returns>
        <see langword="true" /> if this geometry is "spatially within" another geometry. <see langword="false" /> otherwise.
            </returns>
      <remarks>
            This method tests whether one geometry is within another in terms of DE-9IM intersection matrix.
            One geometry is within another one, if another geometry contains every point of the geometry and geometries
            interiors intersect.<cr />
            This method is equivalent to:
            <code>
            this.Relate(other, "T*F**F***");
            </code>
            See OpenGIS Simple Features Specification for more details about DE-9IM and "spatially within" relation.
            </remarks>
      <exception cref="T:System.ArgumentNullException">Argument is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
            One of the geometries is invalid in such way that operation can not be finished.
            </exception>
      <exception cref="T:System.ArgumentException">
        <see cref="P:Aspose.Gis.Geometries.IGeometry.SpatialReferenceSystem" /> of geometries are not equivalent.
            You can use <see cref="T:Aspose.Gis.SpatialReferencing.SpatialReferenceSystemTransformation" /> in order to convert geometries to the same spatial
            reference system.
            </exception>
      <seealso cref="M:Aspose.Gis.Geometries.IGeometry.SpatiallyContains(Aspose.Gis.Geometries.IGeometry)" />
      <seealso cref="M:Aspose.Gis.Geometries.IGeometry.CoveredBy(Aspose.Gis.Geometries.IGeometry)" />
    </member>
    <member name="M:Aspose.Gis.Geometries.IGeometry.SpatiallyContains(Aspose.Gis.Geometries.IGeometry)">
      <summary>
            Determines whether this geometry spatially contains a specified geometry.
            </summary>
      <param name="other">A geometry.</param>
      <returns>
        <see langword="true" /> if this geometry is "spatially contains" another geometry. <see langword="false" /> otherwise.
            </returns>
      <remarks>
            This method tests whether one geometry contains another in terms of DE-9IM intersection matrix.<cr />
            This method is equivalent to:
            <code>
            other.Within(this);
            </code></remarks>
      <exception cref="T:System.ArgumentNullException">Argument is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
            One of the geometries is invalid in such way that operation can not be finished.
            </exception>
      <exception cref="T:System.ArgumentException">
        <see cref="P:Aspose.Gis.Geometries.IGeometry.SpatialReferenceSystem" /> of geometries are not equivalent.
            You can use <see cref="T:Aspose.Gis.SpatialReferencing.SpatialReferenceSystemTransformation" /> in order to convert geometries to the same spatial
            reference system.
            </exception>
      <seealso cref="M:Aspose.Gis.Geometries.IGeometry.Within(Aspose.Gis.Geometries.IGeometry)" />
      <seealso cref="M:Aspose.Gis.Geometries.IGeometry.Covers(Aspose.Gis.Geometries.IGeometry)" />
    </member>
    <member name="M:Aspose.Gis.Geometries.IGeometry.Overlaps(Aspose.Gis.Geometries.IGeometry)">
      <summary>
            Determines whether this geometry overlap with a specified geometry.
            </summary>
      <param name="other">A geometry.</param>
      <returns>
        <see langword="true" /> if this geometry is "spatially overlaps" another geometry. <see langword="false" /> otherwise.
            </returns>
      <remarks>
            This method tests whether geometries are overlaps in terms of DE-9IM intersection matrix.
            Two geometries overlap if they have some but not all interior points in common and the intersection of the geometries
            have the same dimension as the geometries themselves.<cr />
            For two <see cref="F:Aspose.Gis.Geometries.GeometryDimension.Point" /> geometries or two <see cref="F:Aspose.Gis.Geometries.GeometryDimension.Surface" /> geometries this
            method is equivalent to:
            <code>
            this.Relate(other, "T*T***T**");
            </code>
            For two <see cref="F:Aspose.Gis.Geometries.GeometryDimension.Line" /> geometries this method is equivalent to:
            <code>
            this.Relate(other, "1*T***T**");
            </code>
            For two geometries with not equal <see cref="P:Aspose.Gis.Geometries.IGeometry.Dimension" /> this method always returns <see langword="false" />.
            See OpenGIS Simple Features Specification for more details about DE-9IM and "spatially overlaps" relation.
            </remarks>
      <exception cref="T:System.ArgumentNullException">Argument is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
            One of the geometries is invalid in such way that operation can not be finished.
            </exception>
      <exception cref="T:System.ArgumentException">
        <see cref="P:Aspose.Gis.Geometries.IGeometry.SpatialReferenceSystem" /> of geometries are not equivalent.
            You can use <see cref="T:Aspose.Gis.SpatialReferencing.SpatialReferenceSystemTransformation" /> in order to convert geometries to the same spatial
            reference system.
            </exception>
    </member>
    <member name="M:Aspose.Gis.Geometries.IGeometry.Covers(Aspose.Gis.Geometries.IGeometry)">
      <summary>
            Determines whether this geometry covers a specified geometry.
            </summary>
      <param name="other">A geometry.</param>
      <returns>
        <see langword="true" /> if this geometry is "spatially covers" another geometry. <see langword="false" /> otherwise.
            </returns>
      <remarks>
            This method tests whether one geometry covers another in terms of DE-9IM intersection matrix.
            One geometry covers another one, if the geometry contains every point of another geometry.
            This method is similar to <see cref="M:Aspose.Gis.Geometries.IGeometry.SpatiallyContains(Aspose.Gis.Geometries.IGeometry)" />, but returns <see langword="true" /> more often,
            since it does not distinguish between interior and boundary points. So, if geometry A lies on boundary of
            geometry B, <see cref="M:Aspose.Gis.Geometries.IGeometry.SpatiallyContains(Aspose.Gis.Geometries.IGeometry)" /> returns <see langword="false" />,
            while this method returns <see langword="true" />.<cr />
            This method is equivalent to:
            <code>
            this.Relate(other, "T*****FF*") || this.Relate(other, "*T****FF*") || this.Relate(other, "***T**FF*) || this.Relate(other, "***T*FF*");
            </code></remarks>
      <exception cref="T:System.ArgumentNullException">Argument is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
            One of the geometries is invalid in such way that operation can not be finished.
            </exception>
      <exception cref="T:System.ArgumentException">
        <see cref="P:Aspose.Gis.Geometries.IGeometry.SpatialReferenceSystem" /> of geometries are not equivalent.
            You can use <see cref="T:Aspose.Gis.SpatialReferencing.SpatialReferenceSystemTransformation" /> in order to convert geometries to the same spatial
            reference system.
            </exception>
      <seealso cref="M:Aspose.Gis.Geometries.IGeometry.SpatiallyContains(Aspose.Gis.Geometries.IGeometry)" />
      <seealso cref="M:Aspose.Gis.Geometries.IGeometry.CoveredBy(Aspose.Gis.Geometries.IGeometry)" />
    </member>
    <member name="M:Aspose.Gis.Geometries.IGeometry.CoveredBy(Aspose.Gis.Geometries.IGeometry)">
      <summary>
            Determines whether this geometry is covered by a specified geometry.
            </summary>
      <param name="other">A geometry.</param>
      <returns>
        <see langword="true" /> if this geometry is "spatially covered by" another geometry. <see langword="false" /> otherwise.
            </returns>
      <remarks>
            This method tests whether one geometry is covered by another in terms of DE-9IM intersection matrix.<cr />
            This method is equivalent to:
            <code>
            other.Covers(this);
            </code></remarks>
      <exception cref="T:System.ArgumentNullException">Argument is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
            One of the geometries is invalid in such way that operation can not be finished.
            </exception>
      <exception cref="T:System.ArgumentException">
        <see cref="P:Aspose.Gis.Geometries.IGeometry.SpatialReferenceSystem" /> of geometries are not equivalent.
            You can use <see cref="T:Aspose.Gis.SpatialReferencing.SpatialReferenceSystemTransformation" /> in order to convert geometries to the same spatial
            reference system.
            </exception>
      <seealso cref="M:Aspose.Gis.Geometries.IGeometry.SpatiallyContains(Aspose.Gis.Geometries.IGeometry)" />
      <seealso cref="M:Aspose.Gis.Geometries.IGeometry.Covers(Aspose.Gis.Geometries.IGeometry)" />
    </member>
    <member name="M:Aspose.Gis.Geometries.IGeometry.Relate(Aspose.Gis.Geometries.IGeometry,System.String)">
      <summary>
            Determines if DE-9IM intersection matrix of this geometry and a specified geometry matches provided pattern.
            </summary>
      <param name="other">A geometry.</param>
      <param name="intersectionPatternMatrix">
            A patter to match with.
            This should be a string with length equal to 9.
            Each character of the string represent expected dimension of an intersection:
            <ul><li>character 0 - between interiors of the geometries.</li><li>character 1 - between interior of this geometry and boundary of another geometry.</li><li>character 2 - between interior of this geometry and exterior of another geometry.</li><li>character 3 - between boundary of this geometry and interior of another geometry.</li><li>character 4 - between boundaries of the geometries.</li><li>character 5 - between boundary of this geometry and exterior of another geometry.</li><li>character 6 - between exterior of this geometry and interior of another geometry.</li><li>character 7 - between exterior of this geometry and boundary of another geometry.</li><li>character 8 - between exteriors of the geometries.</li></ul>
            Possible values of each characters are:
            <ul><li>* - any value;</li><li>F - no intersection;</li><li>T - any intersection;</li><li>0 - point intersection (e.g. shared point);</li><li>1 - line intersection (e.g. shared segment of line);</li><li>2 - area intersection (e.g. shared part of polygon);</li></ul>
            For example, an intersection pattern "F0*******" means, that there should not be intersection between geometries interiors
            and intersection between geometries boundaries must be a point.
            See OpenGIS Simple Features Specification for more details about intersection matrix pattern.
            </param>
      <remarks>
            This method builds DE-9IM intersection matrix and matches it with the pattern
            See OpenGIS Simple Features Specification for more details about DE-9IM intersection matrix.
            </remarks>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
            One of the geometries is invalid in such way that operation can not be finished.
            </exception>
      <exception cref="T:System.ArgumentException">
        <see cref="P:Aspose.Gis.Geometries.IGeometry.SpatialReferenceSystem" /> of geometries are not equivalent.
            You can use <see cref="T:Aspose.Gis.SpatialReferencing.SpatialReferenceSystemTransformation" /> in order to convert geometries to the same spatial
            reference system.
            </exception>
      <example>
            The following code:
            <code>geometry.Relate(other, "T*F**FFF*");</code><cr />
            will detect whether geometries are spatially equal.
            </example>
      <returns>
        <see langword="true" /> if this intersection matrix matches patter; <see langword="false" /> otherwise.
            </returns>
    </member>
    <member name="M:Aspose.Gis.Geometries.IGeometry.Intersection(Aspose.Gis.Geometries.IGeometry)">
      <summary>
            Builds an intersection between this geometry and a specified geometry.
            </summary>
      <returns>
            A geometry that represents an intersection of this geometry and an argument. The result geometry contain
            point set that present in both this geometry and an argument.
            </returns>
      <param name="other">A geometry to compute intersection with.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
            One of the geometries is invalid in such way that operation can not be finished.
            </exception>
      <exception cref="T:System.ArgumentException">
        <see cref="P:Aspose.Gis.Geometries.IGeometry.SpatialReferenceSystem" /> of geometries are not equivalent.
            You can use <see cref="T:Aspose.Gis.SpatialReferencing.SpatialReferenceSystemTransformation" /> in order to convert geometries to the same spatial
            reference system.
            </exception>
    </member>
    <member name="M:Aspose.Gis.Geometries.IGeometry.Union(Aspose.Gis.Geometries.IGeometry)">
      <summary>
            Unites this geometry and a specified geometry.
            </summary>
      <returns>
            A geometry that represents a union of this geometry and an argument. The result geometry contains
            point set that present in this geometry or in an argument.
            </returns>
      <param name="other">A geometry to unite with.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
            One of the geometries is invalid in such way that operation can not be finished.
            </exception>
      <exception cref="T:System.ArgumentException">
        <see cref="P:Aspose.Gis.Geometries.IGeometry.SpatialReferenceSystem" /> of geometries are not equivalent.
            You can use <see cref="T:Aspose.Gis.SpatialReferencing.SpatialReferenceSystemTransformation" /> in order to convert geometries to the same spatial
            reference system.
            </exception>
    </member>
    <member name="M:Aspose.Gis.Geometries.IGeometry.Difference(Aspose.Gis.Geometries.IGeometry)">
      <summary>
            Subtracts a specified geometry from this geometry.
            </summary>
      <returns>
            A geometry that represents a difference of this geometry and an argument. The result geometry contains
            point set that present in this geometry but not present in an argument.
            </returns>
      <param name="other">A geometry to subtract.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
            One of the geometries is invalid in such way that operation can not be finished.
            </exception>
      <exception cref="T:System.ArgumentException">
        <see cref="P:Aspose.Gis.Geometries.IGeometry.SpatialReferenceSystem" /> of geometries are not equivalent.
            You can use <see cref="T:Aspose.Gis.SpatialReferencing.SpatialReferenceSystemTransformation" /> in order to convert geometries to the same spatial
            reference system.
            </exception>
    </member>
    <member name="M:Aspose.Gis.Geometries.IGeometry.SymDifference(Aspose.Gis.Geometries.IGeometry)">
      <summary>
            Builds a symmetric difference between this geometry and a specified geometry.
            </summary>
      <returns>
            A geometry that represents a symmetric difference of this geometry and an argument. The result geometry contains
            point set that present in one of the geometries but not present in both of them.
            </returns>
      <param name="other">A geometry to compute symmetric difference with.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
            One of the geometries is invalid in such way that operation can not be finished.
            </exception>
      <exception cref="T:System.ArgumentException">
        <see cref="P:Aspose.Gis.Geometries.IGeometry.SpatialReferenceSystem" /> of geometries are not equivalent.
            You can use <see cref="T:Aspose.Gis.SpatialReferencing.SpatialReferenceSystemTransformation" /> in order to convert geometries to the same spatial
            reference system.
            </exception>
    </member>
    <member name="T:Aspose.Gis.Geometries.IGeometryCollection">
      <summary>
            A <see cref="T:Aspose.Gis.Geometries.IGeometryCollection" /> is a <see cref="T:Aspose.Gis.Geometries.IGeometry" /> that is a collection of one or more geometries.
            </summary>
    </member>
    <member name="P:Aspose.Gis.Geometries.IGeometryCollection.Count">
      <summary>
            Gets the number of geometries in this collection.
            </summary>
      <value>
            The count if geometries.
            </value>
    </member>
    <member name="P:Aspose.Gis.Geometries.IGeometryCollection.Item(System.Int32)">
      <summary>
            Gets a <see cref="T:Aspose.Gis.Geometries.IGeometry" /> at the specified index.
            </summary>
      <value>
            The <see cref="T:Aspose.Gis.Geometries.IGeometry" />.
            </value>
      <param name="index">The index.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Index is out of range.</exception>
    </member>
    <member name="M:Aspose.Gis.Geometries.IGeometryCollection.GetPointOnSurface">
      <summary>
            Finds a point that is guaranteed to be on one of the surfaces in this collection.
            </summary>
      <returns>
            A point on one of the surfaces. An empty point if this collection does not contain surfaces or all surfaces are empty.
            </returns>
    </member>
    <member name="M:Aspose.Gis.Geometries.IGeometryCollection.ToEditable">
      <summary>
            Gets an editable copy of this geometry.
            </summary>
      <returns>An editable copy of this geometry.</returns>
    </member>
    <member name="M:Aspose.Gis.Geometries.IGeometryCollection.ToLinearGeometry">
      <summary>
            Gets approximate or equivalent non-curve version of this geometry using the default <c>tolerance</c>.
            </summary>
      <returns>
            A geometry, that has no curve geometries. This is the equivalent of <see cref="M:Aspose.Gis.Geometries.IGeometryCollection.ToLinearGeometry(System.Double)" /> with
            default <c>tolerance</c>. Default <c>tolerance</c>s value is dependent on <see cref="T:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem" />
            of this geometry:
            <ul><li> For projected SRS Tolerance is 0.001 meters (in SRS units) </li><li> For geographic SRS Tolerance is <c>1e-5</c> degrees (in SRS units) </li><li> For unknown SRS Tolerance is <c>1e-5</c></li></ul>
            For more details on what transformations are applied refer to <see cref="M:Aspose.Gis.Geometries.IGeometryCollection.ToLinearGeometry(System.Double)" /> specification.
            </returns>
      <exception cref="T:System.InvalidOperationException">
            This geometry is invalid in a such way, that operation can not be completed.
            </exception>
    </member>
    <member name="M:Aspose.Gis.Geometries.IGeometryCollection.ToLinearGeometry(System.Double)">
      <summary>
            Gets approximate or equivalent non-curve version of this geometry using the specified <c>tolerance</c>.
            </summary>
      <param name="tolerance">
            The <c>tolerance</c> to use. The result is guaranteed to be less than <c>tolerance</c> away from the
            curved geometry, unless the number of points needed to linearize the geometry exceeds the per-quadrant maximum,
            currently equal to 10000 points.
            </param>
      <returns>
            A geometry, that has no curve geometries. The following transformations are applied:
            <ul><li><see cref="F:Aspose.Gis.Geometries.GeometryType.CircularString" />s are linearized
            (transformed into <see cref="F:Aspose.Gis.Geometries.GeometryType.LineString" />s with specified <paramref name="tolerance" />) </li><li><see cref="F:Aspose.Gis.Geometries.GeometryType.CompoundCurve" />s are joined into <c>LineString</c>s </li><li><see cref="F:Aspose.Gis.Geometries.GeometryType.CurvePolygon" />s are transformed into <see cref="F:Aspose.Gis.Geometries.GeometryType.Polygon" />s </li><li><see cref="F:Aspose.Gis.Geometries.GeometryType.MultiCurve" />s are transformed into <see cref="F:Aspose.Gis.Geometries.GeometryType.MultiCurve" />s </li><li><see cref="F:Aspose.Gis.Geometries.GeometryType.MultiSurface" />s are transformed into <see cref="F:Aspose.Gis.Geometries.GeometryType.MultiPolygon" />s </li></ul>
            As a result, <see cref="P:Aspose.Gis.Geometries.IGeometry.HasCurveGeometry" /> of output geometry is <see langword="false" />.
            </returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <c>tolerance</c> is less than or equal to <c>0</c>.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            This geometry is invalid in a such way, that operation can not be completed.
            </exception>
    </member>
    <member name="T:Aspose.Gis.Geometries.ILinearRing">
      <summary>
            A multi-vertex ring.
            </summary>
    </member>
    <member name="M:Aspose.Gis.Geometries.ILinearRing.IsClockwise">
      <summary>
            Determines if the ring has clockwise winding 
            </summary>
      <returns>
        <see langword="true" /> if clockwise; otherwise <see langword="false" />.</returns>
    </member>
    <member name="M:Aspose.Gis.Geometries.ILinearRing.ToEditable">
      <summary>
            Gets an editable copy of this geometry.
            </summary>
      <returns>An editable copy of this geometry.</returns>
    </member>
    <member name="T:Aspose.Gis.Geometries.ILineString">
      <summary>
            A multi-vertex curve with linear interpolation between points.
            </summary>
    </member>
    <member name="M:Aspose.Gis.Geometries.ILineString.ToEditable">
      <summary>
            Gets an editable copy of this geometry.
            </summary>
      <returns>An editable copy of this geometry.</returns>
    </member>
    <member name="T:Aspose.Gis.Geometries.IMultiCurve">
      <summary>
            A <see cref="T:Aspose.Gis.Geometries.MultiCurve" /> is a one-dimensional <see cref="T:Aspose.Gis.Geometries.GeometryCollection" /> 
            whose elements are <see cref="T:Aspose.Gis.Geometries.Curve" />s.
            </summary>
    </member>
    <member name="M:Aspose.Gis.Geometries.IMultiCurve.ToEditable">
      <summary>
            Gets an editable copy of this geometry.
            </summary>
      <returns>An editable copy of this geometry.</returns>
    </member>
    <member name="M:Aspose.Gis.Geometries.IMultiCurve.ToLinearGeometry">
      <summary>
            Gets approximate or equivalent non-curve version of this geometry using the default <c>tolerance</c>.
            </summary>
      <returns>
            A <see cref="T:Aspose.Gis.Geometries.IMultiLineString" /> that approximates or equivalent to this <see cref="T:Aspose.Gis.Geometries.IMultiCurve" />.
            This is the equivalent of <see cref="M:Aspose.Gis.Geometries.IMultiCurve.ToLinearGeometry(System.Double)" /> with
            default <c>tolerance</c>. Default <c>tolerance</c>s value is dependent on <see cref="T:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem" />
            of this geometry:
            <ul><li> For projected SRS Tolerance is 0.001 meters (in SRS units) </li><li> For geographic SRS Tolerance is <c>1e-5</c> degrees (in SRS units) </li><li> For unknown SRS Tolerance is <c>1e-5</c></li></ul>
            For more details on what transformations are applied refer to <see cref="M:Aspose.Gis.Geometries.IMultiCurve.ToLinearGeometry(System.Double)" /> specification.
            </returns>
      <exception cref="T:System.InvalidOperationException">
            This geometry is invalid in a such way, that operation can not be completed.
            </exception>
    </member>
    <member name="M:Aspose.Gis.Geometries.IMultiCurve.ToLinearGeometry(System.Double)">
      <summary>
             Gets approximate or equivalent non-curve version of this geometry using the specified <c>tolerance</c>.
             </summary>
      <param name="tolerance">
             The <c>tolerance</c> to use. The result is guaranteed to be less than <c>tolerance</c> away from the
             curved geometry, unless the number of points needed to linearize the geometry exceeds the per-quadrant maximum,
             currently equal to 10000 points.
             </param>
      <returns>
             A <see cref="T:Aspose.Gis.Geometries.IMultiLineString" /> that approximates or equivalent to this <see cref="T:Aspose.Gis.Geometries.IMultiCurve" />:
             <ul>
             If this object is <see cref="T:Aspose.Gis.Geometries.IMultiLineString" /> itself the result is equivalent to this object
             If this object is not <see cref="T:Aspose.Gis.Geometries.IMultiLineString" /> - all curves are linearized and new <c>IMultiLineString</c> is created
            </ul></returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <c>tolerance</c> is less than or equal to <c>0</c>.
             </exception>
      <exception cref="T:System.InvalidOperationException">
             This geometry is invalid in a such way, that operation can not be completed.
             </exception>
    </member>
    <member name="T:Aspose.Gis.Geometries.IMultiLineString">
      <summary>
            A <see cref="T:Aspose.Gis.Geometries.MultiLineString" /> is a one-dimensional <see cref="T:Aspose.Gis.Geometries.GeometryCollection" /> 
            whose elements are <see cref="T:Aspose.Gis.Geometries.LineString" />s.
            </summary>
    </member>
    <member name="M:Aspose.Gis.Geometries.IMultiLineString.ToEditable">
      <summary>
            Gets an editable copy of this geometry.
            </summary>
      <returns>An editable copy of this geometry.</returns>
    </member>
    <member name="T:Aspose.Gis.Geometries.IMultiPoint">
      <summary>
            A <see cref="T:Aspose.Gis.Geometries.IMultiPoint" /> is a one-dimensional <see cref="T:Aspose.Gis.Geometries.IGeometryCollection" /> 
            whose elements are <see cref="T:Aspose.Gis.Geometries.IPoint" />s.
            </summary>
    </member>
    <member name="M:Aspose.Gis.Geometries.IMultiPoint.ToEditable">
      <summary>
            Gets an editable copy of this geometry.
            </summary>
      <returns>An editable copy of this geometry.</returns>
    </member>
    <member name="T:Aspose.Gis.Geometries.IMultiPolygon">
      <summary>
            A <see cref="T:Aspose.Gis.Geometries.IMultiPolygon" /> is a one-dimensional 
            <see cref="T:Aspose.Gis.Geometries.IGeometryCollection" /> whose elements are <see cref="T:Aspose.Gis.Geometries.IPolygon" />s.
            </summary>
    </member>
    <member name="M:Aspose.Gis.Geometries.IMultiPolygon.ToEditable">
      <summary>
            Gets an editable copy of this geometry.
            </summary>
      <returns>An editable copy of this geometry.</returns>
    </member>
    <member name="T:Aspose.Gis.Geometries.IMultiSurface">
      <summary>
            A <see cref="T:Aspose.Gis.Geometries.IMultiPolygon" /> is a one-dimensional <see cref="T:Aspose.Gis.Geometries.IGeometryCollection" /> whose elements are <see cref="T:Aspose.Gis.Geometries.ISurface" />s.
            </summary>
    </member>
    <member name="M:Aspose.Gis.Geometries.IMultiSurface.ToEditable">
      <summary>
            Gets an editable copy of this geometry.
            </summary>
      <returns>An editable copy of this geometry.</returns>
    </member>
    <member name="M:Aspose.Gis.Geometries.IMultiSurface.ToLinearGeometry">
      <summary>
            Gets approximate or equivalent non-curve version of this geometry using the default <c>tolerance</c>.
            </summary>
      <returns>
            A <see cref="T:Aspose.Gis.Geometries.IMultiPolygon" /> that approximates or equivalent to this <see cref="T:Aspose.Gis.Geometries.IMultiSurface" />.
            This is the equivalent of <see cref="M:Aspose.Gis.Geometries.IMultiSurface.ToLinearGeometry(System.Double)" /> with
            default <c>tolerance</c>. Default <c>tolerance</c>s value is dependent on <see cref="T:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem" />
            of this geometry:
            <ul><li> For projected SRS Tolerance is 0.001 meters (in SRS units) </li><li> For geographic SRS Tolerance is <c>1e-5</c> degrees (in SRS units) </li><li> For unknown SRS Tolerance is <c>1e-5</c></li></ul>
            For more details on what transformations are applied refer to <see cref="M:Aspose.Gis.Geometries.IMultiSurface.ToLinearGeometry(System.Double)" /> specification.
            </returns>
      <exception cref="T:System.InvalidOperationException">
            This geometry is invalid in a such way, that operation can not be completed.
            </exception>
    </member>
    <member name="M:Aspose.Gis.Geometries.IMultiSurface.ToLinearGeometry(System.Double)">
      <summary>
             Gets approximate or equivalent non-curve version of this geometry using the specified <c>tolerance</c>.
             </summary>
      <param name="tolerance">
             The <c>tolerance</c> to use. The result is guaranteed to be less than <c>tolerance</c> away from the
             curved geometry, unless the number of points needed to linearize the geometry exceeds the per-quadrant maximum,
             currently equal to 10000 points.
             </param>
      <returns>
             A <see cref="T:Aspose.Gis.Geometries.IMultiPolygon" /> that approximates or equivalent to this <see cref="T:Aspose.Gis.Geometries.IMultiSurface" />:
             <ul>
             If this object is <see cref="T:Aspose.Gis.Geometries.IMultiPolygon" /> itself the result is equivalent to this object
             If this object is not <see cref="T:Aspose.Gis.Geometries.IMultiPolygon" /> - all surfaces are linearized and new <c>IMultiPolygon</c> is created
            </ul></returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <c>tolerance</c> is less than or equal to <c>0</c>.
             </exception>
      <exception cref="T:System.InvalidOperationException">
             This geometry is invalid in a such way, that operation can not be completed.
             </exception>
    </member>
    <member name="T:Aspose.Gis.Geometries.IPoint">
      <summary>
            A single location in coordinate space.
            </summary>
    </member>
    <member name="P:Aspose.Gis.Geometries.IPoint.X">
      <summary>
            Gets the x-coordinate.
            </summary>
    </member>
    <member name="P:Aspose.Gis.Geometries.IPoint.Y">
      <summary>
            Gets the y-coordinate.
            </summary>
    </member>
    <member name="P:Aspose.Gis.Geometries.IPoint.Z">
      <summary>
            Gets the z-coordinate.
            </summary>
    </member>
    <member name="P:Aspose.Gis.Geometries.IPoint.M">
      <summary>
            Gets the m-coordinate.
            </summary>
    </member>
    <member name="M:Aspose.Gis.Geometries.IPoint.ToEditable">
      <summary>
            Gets an editable copy of this geometry.
            </summary>
      <returns>An editable copy of this geometry.</returns>
    </member>
    <member name="T:Aspose.Gis.Geometries.IPolygon">
      <summary>
            A <see cref="T:Aspose.Gis.Geometries.ICurvePolygon" /> whose boundaries are defined by linear rings.
            </summary>
    </member>
    <member name="P:Aspose.Gis.Geometries.IPolygon.ExteriorRing">
      <summary>
            Gets the exterior ring.
            </summary>
      <value>
            The exterior ring.
            </value>
    </member>
    <member name="M:Aspose.Gis.Geometries.IPolygon.GetInteriorRing(System.Int32)">
      <summary>
            Gets the interior ring by its index.
            </summary>
      <param name="index">The index.</param>
      <returns>The interior ring.</returns>
    </member>
    <member name="M:Aspose.Gis.Geometries.IPolygon.ToEditable">
      <summary>
            Gets an editable copy of this geometry.
            </summary>
      <returns>An editable copy of this geometry.</returns>
    </member>
    <member name="T:Aspose.Gis.Geometries.ISurface">
      <summary>
            A <see cref="T:Aspose.Gis.Geometries.ISurface" /> is a two-dimensional geometric object.
            </summary>
    </member>
    <member name="M:Aspose.Gis.Geometries.ISurface.GetPointOnSurface">
      <summary>
            Finds a point that is guaranteed to be on this surface.
            </summary>
      <returns>A point on this surface. An empty point if this surface has no interior.</returns>
    </member>
    <member name="M:Aspose.Gis.Geometries.ISurface.ToEditable">
      <summary>
            Gets an editable copy of this geometry.
            </summary>
      <returns>An editable copy of this geometry.</returns>
    </member>
    <member name="M:Aspose.Gis.Geometries.ISurface.ToLinearGeometry">
      <summary>
            Gets approximate or equivalent non-curve version of this geometry using the default <c>tolerance</c>.
            </summary>
      <returns>
            A <see cref="T:Aspose.Gis.Geometries.IPolygon" /> that approximates or equivalent to this <c>ISurface</c>.
            This is the equivalent of <see cref="M:Aspose.Gis.Geometries.ISurface.ToLinearGeometry(System.Double)" /> with
            default <c>tolerance</c>. Default <c>tolerance</c>s value is dependent on <see cref="T:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem" />
            of this geometry:
            <ul><li> For projected SRS Tolerance is 0.001 meters (in SRS units) </li><li> For geographic SRS Tolerance is <c>1e-5</c> degrees (in SRS units) </li><li> For unknown SRS Tolerance is <c>1e-5</c></li></ul>
            For more details on what transformations are applied refer to <see cref="M:Aspose.Gis.Geometries.ISurface.ToLinearGeometry(System.Double)" /> specification.
            </returns>
      <exception cref="T:System.InvalidOperationException">
            This geometry is invalid in a such way, that operation can not be completed.
            </exception>
    </member>
    <member name="M:Aspose.Gis.Geometries.ISurface.ToLinearGeometry(System.Double)">
      <summary>
             Gets approximate or equivalent non-curve version of this geometry using the specified <c>tolerance</c>.
             </summary>
      <param name="tolerance">
             The <c>tolerance</c> to use. The result is guaranteed to be less than <c>tolerance</c> away from the
             curved geometry, unless the number of points needed to linearize the geometry exceeds the per-quadrant maximum,
             currently equal to 10000 points.
             </param>
      <returns>
             A <see cref="T:Aspose.Gis.Geometries.IPolygon" /> that approximates or equivalent to this <c>ISurface</c>:
             <ul>
             If this object is <see cref="T:Aspose.Gis.Geometries.IPolygon" /> itself the result is equivalent to this object
             If this object is not <see cref="T:Aspose.Gis.Geometries.IPolygon" /> it is linearized and <see cref="T:Aspose.Gis.Geometries.IPolygon" /> is created
            </ul></returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <c>tolerance</c> is less than or equal to <c>0</c>.
             </exception>
      <exception cref="T:System.InvalidOperationException">
             This geometry is invalid in a such way, that operation can not be completed.
             </exception>
    </member>
    <member name="T:Aspose.Gis.Geometries.LinearRing">
      <summary>
            A <see cref="T:Aspose.Gis.Geometries.LinearRing" /> is a <see cref="T:Aspose.Gis.Geometries.LineString" /> that is both closed and simple.
            </summary>
    </member>
    <member name="M:Aspose.Gis.Geometries.LinearRing.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Geometries.LinearRing" /> class.
            </summary>
    </member>
    <member name="M:Aspose.Gis.Geometries.LinearRing.#ctor(Aspose.Gis.Geometries.ILineString)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Geometries.LinearRing" /> class.
            </summary>
      <param name="other">The other line to copy data from.</param>
      <exception cref="T:System.ArgumentNullException">The argument is <see langword="null" />.</exception>
    </member>
    <member name="M:Aspose.Gis.Geometries.LinearRing.#ctor(System.Collections.Generic.IEnumerable{Aspose.Gis.Geometries.IPoint})">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Geometries.LinearRing" /> class.
            </summary>
      <param name="collection">The collection of points.</param>
      <exception cref="T:System.ArgumentNullException">The argument is <see langword="null" />.</exception>
    </member>
    <member name="P:Aspose.Gis.Geometries.LinearRing.GeometryType">
      <summary>
            Gets the type of the geometry.
            </summary>
      <value>
            The type of the geometry.
            </value>
    </member>
    <member name="M:Aspose.Gis.Geometries.LinearRing.IsClockwise">
      <summary>
            Determines if the ring has clockwise winding. 
            </summary>
      <returns>
        <see langword="true" /> if clockwise; otherwise <see langword="false" />.</returns>
      <remarks> If linear ring is not valid (for example it is self intersecting), then function result is undefined. </remarks>
    </member>
    <member name="M:Aspose.Gis.Geometries.LinearRing.ToEditable">
      <summary>
            Gets an editable copy of this geometry.
            </summary>
      <returns>An editable copy of this geometry.</returns>
    </member>
    <member name="M:Aspose.Gis.Geometries.LinearRing.Clone">
      <summary>
            Clones this instance.
            </summary>
      <returns>The clone of this instance</returns>
    </member>
    <member name="T:Aspose.Gis.Geometries.LineString">
      <summary>
            A multi-vertex line.
            </summary>
    </member>
    <member name="M:Aspose.Gis.Geometries.LineString.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Geometries.LineString" /> class.
            </summary>
    </member>
    <member name="M:Aspose.Gis.Geometries.LineString.#ctor(System.Collections.Generic.IEnumerable{Aspose.Gis.Geometries.IPoint})">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Geometries.LineString" /> class.
            </summary>
      <param name="collection">The collection of points.</param>
      <exception cref="T:System.ArgumentNullException">The argument is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Any point is empty (its <see cref="P:Aspose.Gis.Geometries.IGeometry.IsEmpty" /> is <see langword="true" />).</exception>
    </member>
    <member name="M:Aspose.Gis.Geometries.LineString.#ctor(Aspose.Gis.Geometries.ILineString)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Geometries.LineString" /> class.
            </summary>
      <param name="other">The other line to copy data from.</param>
      <exception cref="T:System.ArgumentNullException">The argument is <see langword="null" />.</exception>
    </member>
    <member name="P:Aspose.Gis.Geometries.LineString.Count">
      <summary>
            Gets the number of points in the <see cref="T:Aspose.Gis.Geometries.LineString" />.
            </summary>
    </member>
    <member name="P:Aspose.Gis.Geometries.LineString.Item(System.Int32)">
      <summary>
            Gets or sets the <see cref="T:Aspose.Gis.Geometries.IPoint" /> at the specified index.
            </summary>
      <value>
            The <see cref="T:Aspose.Gis.Geometries.IPoint" />.
            </value>
      <param name="index">The index.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Index is out of range.</exception>
      <exception cref="T:System.ArgumentNullException" accessor="set">The value is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Point is empty.</exception>
      <exception cref="T:System.ArgumentException" accessor="set">
        <see cref="P:Aspose.Gis.Geometries.IGeometry.SpatialReferenceSystem" /> of this geometry and <see cref="P:Aspose.Gis.Geometries.LineString.SpatialReferenceSystem" /> of argument are both not <see langword="null" />
            and don't equal to each other.
            </exception>
    </member>
    <member name="P:Aspose.Gis.Geometries.LineString.GeometryType">
      <summary>
            Gets the type of the geometry.
            </summary>
      <value>
            The type of the geometry.
            </value>
    </member>
    <member name="P:Aspose.Gis.Geometries.LineString.StartPoint">
      <summary>
            Returns a copy of the starting point of the curve.
            </summary>
      <exception cref="T:System.InvalidOperationException" accessor="get">The geometry is empty.</exception>
    </member>
    <member name="P:Aspose.Gis.Geometries.LineString.EndPoint">
      <summary>
            Returns a copy of the end point of the curve.
            </summary>
      <exception cref="T:System.InvalidOperationException" accessor="get">The geometry is empty.</exception>
    </member>
    <member name="P:Aspose.Gis.Geometries.LineString.IsEmpty">
      <summary>
            Gets a value indicating whether this instance is empty.
            </summary>
      <value>
        <see langword="true" /> if this instance is empty; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:Aspose.Gis.Geometries.LineString.HasM">
      <summary>
            Gets a value indicating whether this instance has M coordinate.
            </summary>
      <value>
        <see langword="true" /> if this instance has M coordinate; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:Aspose.Gis.Geometries.LineString.HasZ">
      <summary>
            Gets a value indicating whether this instance has Z coordinate.
            </summary>
      <value>
        <see langword="true" /> if this instance has Z coordinate; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:Aspose.Gis.Geometries.LineString.SpatialReferenceSystem">
      <summary>
            Gets SpatialReferenceSystem of this instance.
            This property can be <see langword="null" />, if SpatialReferenceSystem is unset.
            Assigning new SpatialReferenceSystem will not perform any coordinate transformation, only reference will change.
            </summary>
    </member>
    <member name="M:Aspose.Gis.Geometries.LineString.AddPoint(Aspose.Gis.Geometries.IPoint)">
      <summary>
            Adds a point to the end of the line.
            </summary>
      <param name="point">The point to add.</param>
      <exception cref="T:System.ArgumentNullException">The argument is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
            The argument is empty (its <see cref="P:Aspose.Gis.Geometries.IGeometry.IsEmpty" /> is <see langword="true" />).
            </exception>
      <exception cref="T:System.ArgumentException">
        <see cref="P:Aspose.Gis.Geometries.IGeometry.SpatialReferenceSystem" /> of this geometry and <see cref="P:Aspose.Gis.Geometries.LineString.SpatialReferenceSystem" /> of argument are both not <see langword="null" />
            and don't equal to each other.
            </exception>
    </member>
    <member name="M:Aspose.Gis.Geometries.LineString.AddPoint(System.Double,System.Double)">
      <summary>
            Adds a point to the end of the line.
            </summary>
      <param name="x">The value for X coordinate.</param>
      <param name="y">The value for Y coordinate.</param>
    </member>
    <member name="M:Aspose.Gis.Geometries.LineString.AddPoint(System.Double,System.Double,System.Double)">
      <summary>
            Adds a point to the end of the line.
            </summary>
      <param name="x">The value for X coordinate.</param>
      <param name="y">The value for Y coordinate.</param>
      <param name="z">The value for Z coordinate.</param>
    </member>
    <member name="M:Aspose.Gis.Geometries.LineString.AddPoint(System.Double,System.Double,System.Double,System.Double)">
      <summary>
            Adds a point to the end of the line.
            </summary>
      <param name="x">The value for X coordinate.</param>
      <param name="y">The value for Y coordinate.</param>
      <param name="z">The value for Z coordinate.</param>
      <param name="m">The value for M coordinate.</param>
    </member>
    <member name="M:Aspose.Gis.Geometries.LineString.SetEmpty">
      <summary>
            Makes this <see cref="T:Aspose.Gis.Geometries.Geometry" /> empty.
            </summary>
    </member>
    <member name="M:Aspose.Gis.Geometries.LineString.ToEditable">
      <summary>
            Gets an editable copy of this geometry.
            </summary>
      <returns>An editable copy of this geometry.</returns>
    </member>
    <member name="M:Aspose.Gis.Geometries.LineString.Clone">
      <summary>
            Clones this instance.
            </summary>
      <returns>The clone of this instance</returns>
    </member>
    <member name="M:Aspose.Gis.Geometries.LineString.GetEnumerator">
      <summary>Returns an enumerator that iterates through the collection.</summary>
      <returns>An enumerator that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:Aspose.Gis.Geometries.LineString.Equals(System.Object)">
      <summary>Determines whether the specified object is equal to the current object.</summary>
      <param name="obj">The object to compare with the current object. </param>
      <returns>true if the specified object  is equal to the current object; otherwise, false.</returns>
    </member>
    <member name="M:Aspose.Gis.Geometries.LineString.GetHashCode">
      <summary>Serves as the default hash function. </summary>
      <returns>A hash code for the current object.</returns>
    </member>
    <member name="M:Aspose.Gis.Geometries.LineString.Equals(Aspose.Gis.Geometries.ILineString)">
      <summary>Indicates whether the current object is equal to another object of the same type.</summary>
      <param name="other">An object to compare with this object.</param>
      <returns>true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.</returns>
    </member>
    <member name="M:Aspose.Gis.Geometries.LineString.Reverse">
      <summary>
            Reverses order of points in this <see cref="T:Aspose.Gis.Geometries.LineString" />.
            </summary>
    </member>
    <member name="M:Aspose.Gis.Geometries.LineString.op_Equality(Aspose.Gis.Geometries.LineString,Aspose.Gis.Geometries.LineString)">
      <summary>
            Implements the operator ==.
            </summary>
      <param name="a">The A instance.</param>
      <param name="b">The B instance.</param>
      <returns>
            The result of the operator.
            </returns>
    </member>
    <member name="M:Aspose.Gis.Geometries.LineString.op_Inequality(Aspose.Gis.Geometries.LineString,Aspose.Gis.Geometries.LineString)">
      <summary>
            Implements the operator !=.
            </summary>
      <param name="a">The A instance.</param>
      <param name="b">The B instance.</param>
      <returns>
            The result of the operator.
            </returns>
    </member>
    <member name="T:Aspose.Gis.Geometries.MultiCurve">
      <summary>
            A <see cref="T:Aspose.Gis.Geometries.MultiCurve" /> is a one-dimensional <see cref="T:Aspose.Gis.Geometries.GeometryCollection" /> 
            whose elements are <see cref="T:Aspose.Gis.Geometries.Curve" />s.
            </summary>
    </member>
    <member name="M:Aspose.Gis.Geometries.MultiCurve.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Geometries.MultiCurve" /> class.
            </summary>
    </member>
    <member name="P:Aspose.Gis.Geometries.MultiCurve.Dimension">
      <summary>
            Gets the topological dimension of this <see cref="T:Aspose.Gis.Geometries.Geometry" />.
            </summary>
    </member>
    <member name="P:Aspose.Gis.Geometries.MultiCurve.GeometryType">
      <summary>
            Gets the type of the geometry.
            </summary>
      <value>
            The type of the geometry.
            </value>
    </member>
    <member name="M:Aspose.Gis.Geometries.MultiCurve.Clone">
      <summary>
            Clones this instance.
            </summary>
      <returns>The clone of this instance</returns>
    </member>
    <member name="M:Aspose.Gis.Geometries.MultiCurve.ToEditable">
      <summary>
            Gets an editable copy of this geometry.
            </summary>
      <returns>An editable copy of this geometry.</returns>
    </member>
    <member name="M:Aspose.Gis.Geometries.MultiCurve.ToLinearGeometry(System.Double)">
      <summary>
             Gets approximate or equivalent non-curve version of this geometry using the specified <c>tolerance</c>.
             </summary>
      <param name="tolerance">
             The <c>tolerance</c> to use. The result is guaranteed to be less than <c>tolerance</c> away from the
             curved geometry, unless the number of points needed to linearize the geometry exceeds the per-quadrant maximum,
             currently equal to 10000 points.
             </param>
      <returns>
             A <see cref="T:Aspose.Gis.Geometries.IMultiLineString" /> that approximates or equivalent to this <see cref="T:Aspose.Gis.Geometries.IMultiCurve" />:
             <ul>
             If this object is <see cref="T:Aspose.Gis.Geometries.IMultiLineString" /> itself the result is equivalent to this object
             If this object is not <see cref="T:Aspose.Gis.Geometries.IMultiLineString" /> - all curves are linearized and new <c>IMultiLineString</c> is created
            </ul></returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <c>tolerance</c> is less than or equal to <c>0</c>.
             </exception>
      <exception cref="T:System.InvalidOperationException">
             This geometry is invalid in a such way, that operation can not be completed.
             </exception>
    </member>
    <member name="M:Aspose.Gis.Geometries.MultiCurve.ToLinearGeometry">
      <summary>
            Gets approximate or equivalent non-curve version of this geometry using the default <c>tolerance</c>.
            </summary>
      <returns>
            A <see cref="T:Aspose.Gis.Geometries.IMultiLineString" /> that approximates or equivalent to this <see cref="T:Aspose.Gis.Geometries.IMultiCurve" />.
            This is the equivalent of <see cref="M:Aspose.Gis.Geometries.IMultiCurve.ToLinearGeometry(System.Double)" /> with
            default <c>tolerance</c>. Default <c>tolerance</c>s value is dependent on <see cref="T:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem" />
            of this geometry:
            <ul><li> For projected SRS Tolerance is 0.001 meters (in SRS units) </li><li> For geographic SRS Tolerance is <c>1e-5</c> degrees (in SRS units) </li><li> For unknown SRS Tolerance is <c>1e-5</c></li></ul>
            For more details on what transformations are applied refer to <see cref="M:Aspose.Gis.Geometries.IMultiCurve.ToLinearGeometry(System.Double)" /> specification.
            </returns>
      <exception cref="T:System.InvalidOperationException">
            This geometry is invalid in a such way, that operation can not be completed.
            </exception>
    </member>
    <member name="P:Aspose.Gis.Geometries.MultiCurve.IsClosed">
      <summary>
            Determines whether this curve is closed.
            </summary>
      <value>
        <see langword="true" /> if this instance is closed; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="T:Aspose.Gis.Geometries.MultiLineString">
      <summary>
            A <see cref="T:Aspose.Gis.Geometries.MultiLineString" /> is a one-dimensional <see cref="T:Aspose.Gis.Geometries.GeometryCollection" /> 
            whose elements are <see cref="T:Aspose.Gis.Geometries.LineString" />s.
            </summary>
    </member>
    <member name="M:Aspose.Gis.Geometries.MultiLineString.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Geometries.MultiLineString" /> class.
            </summary>
    </member>
    <member name="P:Aspose.Gis.Geometries.MultiLineString.GeometryType">
      <summary>
            Gets the type of the geometry.
            </summary>
      <value>
            The type of the geometry.
            </value>
    </member>
    <member name="M:Aspose.Gis.Geometries.MultiLineString.Clone">
      <summary>
            Clones this instance.
            </summary>
      <returns>The clone of this instance</returns>
    </member>
    <member name="M:Aspose.Gis.Geometries.MultiLineString.ToEditable">
      <summary>
            Gets an editable copy of this geometry.
            </summary>
      <returns>An editable copy of this geometry.</returns>
    </member>
    <member name="T:Aspose.Gis.Geometries.MultiPoint">
      <summary>
            A <see cref="T:Aspose.Gis.Geometries.MultiPoint" /> is a one-dimensional <see cref="T:Aspose.Gis.Geometries.GeometryCollection" /> 
            whose elements are <see cref="T:Aspose.Gis.Geometries.Point" />s.
            </summary>
    </member>
    <member name="M:Aspose.Gis.Geometries.MultiPoint.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Geometries.MultiPoint" /> class.
            </summary>
    </member>
    <member name="P:Aspose.Gis.Geometries.MultiPoint.GeometryType">
      <summary>
            Gets the type of the geometry.
            </summary>
      <value>
            The type of the geometry.
            </value>
    </member>
    <member name="P:Aspose.Gis.Geometries.MultiPoint.Dimension">
      <summary>
            Gets the topological dimension of this <see cref="T:Aspose.Gis.Geometries.Geometry" />.
            </summary>
    </member>
    <member name="M:Aspose.Gis.Geometries.MultiPoint.ToEditable">
      <summary>
            Gets an editable copy of this geometry.
            </summary>
      <returns>An editable copy of this geometry.</returns>
    </member>
    <member name="M:Aspose.Gis.Geometries.MultiPoint.Clone">
      <summary>
            Clones this instance.
            </summary>
      <returns>The clone of this instance</returns>
    </member>
    <member name="T:Aspose.Gis.Geometries.MultiPolygon">
      <summary>
            A <see cref="T:Aspose.Gis.Geometries.MultiPolygon" /> is a one-dimensional 
            <see cref="T:Aspose.Gis.Geometries.GeometryCollection" /> whose elements are <see cref="T:Aspose.Gis.Geometries.Polygon" />s.
            </summary>
    </member>
    <member name="M:Aspose.Gis.Geometries.MultiPolygon.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Geometries.MultiPolygon" /> class.
            </summary>
    </member>
    <member name="P:Aspose.Gis.Geometries.MultiPolygon.GeometryType">
      <summary>
            Gets the type of the geometry.
            </summary>
      <value>
            The type of the geometry.
            </value>
    </member>
    <member name="M:Aspose.Gis.Geometries.MultiPolygon.ToEditable">
      <summary>
            Gets an editable copy of this geometry.
            </summary>
      <returns>An editable copy of this geometry.</returns>
    </member>
    <member name="M:Aspose.Gis.Geometries.MultiPolygon.Clone">
      <summary>
            Clones this instance.
            </summary>
      <returns>The clone of this instance</returns>
    </member>
    <member name="T:Aspose.Gis.Geometries.MultiSurface">
      <summary>
            A <see cref="T:Aspose.Gis.Geometries.MultiSurface" /> is a one-dimensional <see cref="T:Aspose.Gis.Geometries.GeometryCollection" /> whose elements are <see cref="T:Aspose.Gis.Geometries.ISurface" />s.
            </summary>
    </member>
    <member name="M:Aspose.Gis.Geometries.MultiSurface.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Geometries.MultiSurface" /> class.
            </summary>
    </member>
    <member name="P:Aspose.Gis.Geometries.MultiSurface.Dimension">
      <summary>
            Gets the topological dimension of this <see cref="T:Aspose.Gis.Geometries.Geometry" />.
            </summary>
    </member>
    <member name="P:Aspose.Gis.Geometries.MultiSurface.GeometryType">
      <summary>
            Gets the type of the geometry.
            </summary>
      <value>
            The type of the geometry.
            </value>
    </member>
    <member name="M:Aspose.Gis.Geometries.MultiSurface.ToEditable">
      <summary>
            Gets an editable copy of this geometry.
            </summary>
      <returns>An editable copy of this geometry.</returns>
    </member>
    <member name="M:Aspose.Gis.Geometries.MultiSurface.ToLinearGeometry">
      <summary>
            Gets approximate or equivalent non-curve version of this geometry using the default <c>tolerance</c>.
            </summary>
      <returns>
            A <see cref="T:Aspose.Gis.Geometries.IMultiPolygon" /> that approximates or equivalent to this <see cref="T:Aspose.Gis.Geometries.IMultiSurface" />.
            This is the equivalent of <see cref="M:Aspose.Gis.Geometries.IMultiSurface.ToLinearGeometry(System.Double)" /> with
            default <c>tolerance</c>. Default <c>tolerance</c>s value is dependent on <see cref="T:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem" />
            of this geometry:
            <ul><li> For projected SRS Tolerance is 0.001 meters (in SRS units) </li><li> For geographic SRS Tolerance is <c>1e-5</c> degrees (in SRS units) </li><li> For unknown SRS Tolerance is <c>1e-5</c></li></ul>
            For more details on what transformations are applied refer to <see cref="M:Aspose.Gis.Geometries.IMultiSurface.ToLinearGeometry(System.Double)" /> specification.
            </returns>
      <exception cref="T:System.InvalidOperationException">
            This geometry is invalid in a such way, that operation can not be completed.
            </exception>
    </member>
    <member name="M:Aspose.Gis.Geometries.MultiSurface.ToLinearGeometry(System.Double)">
      <summary>
             Gets approximate or equivalent non-curve version of this geometry using the specified <c>tolerance</c>.
             </summary>
      <param name="tolerance">
             The <c>tolerance</c> to use. The result is guaranteed to be less than <c>tolerance</c> away from the
             curved geometry, unless the number of points needed to linearize the geometry exceeds the per-quadrant maximum,
             currently equal to 10000 points.
             </param>
      <returns>
             A <see cref="T:Aspose.Gis.Geometries.IMultiPolygon" /> that approximates or equivalent to this <see cref="T:Aspose.Gis.Geometries.IMultiSurface" />:
             <ul>
             If this object is <see cref="T:Aspose.Gis.Geometries.IMultiPolygon" /> itself the result is equivalent to this object
             If this object is not <see cref="T:Aspose.Gis.Geometries.IMultiPolygon" /> - all surfaces are linearized and new <c>IMultiPolygon</c> is created
            </ul></returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <c>tolerance</c> is less than or equal to <c>0</c>.
             </exception>
      <exception cref="T:System.InvalidOperationException">
             This geometry is invalid in a such way, that operation can not be completed.
             </exception>
    </member>
    <member name="M:Aspose.Gis.Geometries.MultiSurface.Clone">
      <summary>
            Clones this instance.
            </summary>
      <returns>The clone of this instance</returns>
    </member>
    <member name="T:Aspose.Gis.Geometries.NamespaceDoc">
      <summary>
        <c>Aspose.Gis.Geometries</c> namespace contains classes that represent geometry data.
            </summary>
    </member>
    <member name="T:Aspose.Gis.Geometries.Point">
      <summary>
            A <see cref="T:Aspose.Gis.Geometries.Point" /> represents a single location in coordinate space.
            </summary>
    </member>
    <member name="M:Aspose.Gis.Geometries.Point.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Geometries.Point" /> class.
            </summary>
    </member>
    <member name="M:Aspose.Gis.Geometries.Point.#ctor(System.Double,System.Double)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Geometries.Point" /> class.
            </summary>
      <param name="x">The value for X coordinate.</param>
      <param name="y">The value for Y coordinate.</param>
    </member>
    <member name="M:Aspose.Gis.Geometries.Point.#ctor(System.Double,System.Double,System.Double)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Geometries.Point" /> class.
            </summary>
      <param name="x">The value for X coordinate.</param>
      <param name="y">The value for Y coordinate.</param>
      <param name="z">The value for Z coordinate.</param>
    </member>
    <member name="M:Aspose.Gis.Geometries.Point.#ctor(System.Double,System.Double,System.Double,System.Double)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Geometries.Point" /> class.
            </summary>
      <param name="x">The value for X coordinate.</param>
      <param name="y">The value for Y coordinate.</param>
      <param name="z">The value for Z coordinate.</param>
      <param name="m">The value for M coordinate.</param>
    </member>
    <member name="M:Aspose.Gis.Geometries.Point.#ctor(Aspose.Gis.Geometries.IPoint)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Geometries.Point" /> class.
            </summary>
      <param name="other">The other <see cref="T:Aspose.Gis.Geometries.IPoint" /> to copy data from.</param>
      <exception cref="T:System.ArgumentNullException">The argument is <see langword="null" />.</exception>
    </member>
    <member name="P:Aspose.Gis.Geometries.Point.X">
      <summary>
            Gets or sets a value for the x-coordinate.
            </summary>
    </member>
    <member name="P:Aspose.Gis.Geometries.Point.Y">
      <summary>
            Gets or sets a value for the y-coordinate.
            </summary>
    </member>
    <member name="P:Aspose.Gis.Geometries.Point.Z">
      <summary>
            Gets or sets a value for the z-coordinate.
            </summary>
      <exception cref="T:System.InvalidOperationException" accessor="get">The geometry does not have a Z coordinate.</exception>
    </member>
    <member name="P:Aspose.Gis.Geometries.Point.M">
      <summary>
            Gets or sets a value for the m-coordinate.
            </summary>
      <exception cref="T:System.InvalidOperationException" accessor="get">The geometry does not have an M coordinate.</exception>
    </member>
    <member name="P:Aspose.Gis.Geometries.Point.Dimension">
      <summary>
            Gets the topological dimension of this <see cref="T:Aspose.Gis.Geometries.Geometry" />.
            </summary>
    </member>
    <member name="P:Aspose.Gis.Geometries.Point.GeometryType">
      <summary>
            Gets the type of the geometry.
            </summary>
      <value>
            The type of the geometry.
            </value>
    </member>
    <member name="P:Aspose.Gis.Geometries.Point.HasZ">
      <summary>
            Gets a value indicating whether this instance has Z coordinate.
            </summary>
      <value>
        <see langword="true" /> if this instance has Z coordinate; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:Aspose.Gis.Geometries.Point.HasM">
      <summary>
            Gets a value indicating whether this instance has an M coordinate.
            </summary>
      <value>
        <see langword="true" /> if this instance has an M coordinate; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:Aspose.Gis.Geometries.Point.SpatialReferenceSystem">
      <summary>
            Gets SpatialReferenceSystem of this instance.
            This property can be <see langword="null" />, is SpatialReferenceSystem is unknown.
            Assigning new SpatialReferenceSystem will not perform any coordinate transformation, only reference will change.
            </summary>
    </member>
    <member name="M:Aspose.Gis.Geometries.Point.ToEditable">
      <summary>
            Gets an editable copy of this geometry.
            </summary>
      <returns>An editable copy of this geometry.</returns>
    </member>
    <member name="M:Aspose.Gis.Geometries.Point.op_Equality(Aspose.Gis.Geometries.Point,Aspose.Gis.Geometries.Point)">
      <summary>
            Implements the operator ==.
            </summary>
      <param name="a">The A instance.</param>
      <param name="b">The B instance.</param>
      <returns>
            The result of the operator.
            </returns>
    </member>
    <member name="M:Aspose.Gis.Geometries.Point.op_Inequality(Aspose.Gis.Geometries.Point,Aspose.Gis.Geometries.Point)">
      <summary>
            Implements the operator !=.
            </summary>
      <param name="a">The A instance.</param>
      <param name="b">The B instance.</param>
      <returns>
            The result of the operator.
            </returns>
    </member>
    <member name="M:Aspose.Gis.Geometries.Point.SetEmpty">
      <summary>
            Makes this <see cref="T:Aspose.Gis.Geometries.Geometry" /> empty.
            </summary>
    </member>
    <member name="M:Aspose.Gis.Geometries.Point.Clone">
      <summary>
            Clones this instance.
            </summary>
      <returns>The clone of this instance</returns>
    </member>
    <member name="M:Aspose.Gis.Geometries.Point.Equals(System.Object)">
      <summary>Determines whether the specified object is equal to the current object.</summary>
      <param name="obj">The object to compare with the current object. </param>
      <returns>true if the specified object  is equal to the current object; otherwise, false.</returns>
    </member>
    <member name="M:Aspose.Gis.Geometries.Point.GetHashCode">
      <summary>Serves as the default hash function. </summary>
      <returns>A hash code for the current object.</returns>
    </member>
    <member name="M:Aspose.Gis.Geometries.Point.Equals(Aspose.Gis.Geometries.IPoint)">
      <summary>Indicates whether the current object is equal to another object of the same type.</summary>
      <param name="other">An object to compare with this object.</param>
      <returns>true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.</returns>
    </member>
    <member name="T:Aspose.Gis.Geometries.Polygon">
      <summary>
            A <see cref="T:Aspose.Gis.Geometries.Polygon" /> is a planar surface,
            defined by 1 exterior boundary and 0 or more interior boundaries.
            </summary>
    </member>
    <member name="M:Aspose.Gis.Geometries.Polygon.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Geometries.Polygon" /> class.
            </summary>
    </member>
    <member name="M:Aspose.Gis.Geometries.Polygon.#ctor(Aspose.Gis.Geometries.ILinearRing)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Geometries.Polygon" /> class.
            </summary>
      <param name="exteriorRing">The exterior ring.</param>
      <exception cref="T:System.ArgumentNullException">The argument is <see langword="null" />.</exception>
    </member>
    <member name="M:Aspose.Gis.Geometries.Polygon.#ctor(Aspose.Gis.Geometries.ILinearRing,System.Collections.Generic.IEnumerable{Aspose.Gis.Geometries.ILinearRing})">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Geometries.Polygon" /> class.
            </summary>
      <param name="exteriorRing">The exterior ring.</param>
      <param name="interiorRings">The interior rings.</param>
      <exception cref="T:System.ArgumentNullException">The argument is <see langword="null" />.</exception>
    </member>
    <member name="P:Aspose.Gis.Geometries.Polygon.IsEmpty">
      <summary>
            Gets a value indicating whether this instance is empty.
            </summary>
      <value>
        <see langword="true" /> if this instance is empty; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:Aspose.Gis.Geometries.Polygon.HasM">
      <summary>
            Gets a value indicating whether this instance has M coordinate.
            </summary>
      <value>
        <see langword="true" /> if this instance has M coordinate; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:Aspose.Gis.Geometries.Polygon.HasZ">
      <summary>
            Gets a value indicating whether this instance has Z coordinate.
            </summary>
      <value>
        <see langword="true" /> if this instance has Z coordinate; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:Aspose.Gis.Geometries.Polygon.SpatialReferenceSystem">
      <summary>
            Gets SpatialReferenceSystem of this instance.
            This property can be <see langword="null" />, is SpatialReferenceSystem is unknown.
            Assigning new SpatialReferenceSystem will not perform any coordinate transformation, only reference will change.
            </summary>
    </member>
    <member name="P:Aspose.Gis.Geometries.Polygon.GeometryType">
      <summary>
            Gets the type of the geometry.
            </summary>
      <value>
            The type of the geometry.
            </value>
    </member>
    <member name="P:Aspose.Gis.Geometries.Polygon.ExteriorRing">
      <summary>
            Gets the exterior ring.
            </summary>
      <value>
            The exterior ring.
            </value>
      <exception cref="T:System.ArgumentException" accessor="set">
        <see cref="P:Aspose.Gis.Geometries.IGeometry.SpatialReferenceSystem" /> of this geometry and <see cref="P:Aspose.Gis.Geometries.Polygon.SpatialReferenceSystem" /> of argument are both not <see langword="null" />
            and don't equal to each other.
            </exception>
    </member>
    <member name="P:Aspose.Gis.Geometries.Polygon.InteriorRingsCount">
      <summary>
            Gets the number of interior rings.
            </summary>
      <value>
            The number of interior rings.
            </value>
    </member>
    <member name="M:Aspose.Gis.Geometries.Polygon.GetPointOnSurface">
      <summary>
            Finds a point that is guaranteed to be on this polygon.
            </summary>
      <returns>A point on this polygon. An empty point if this polygon has no interior.</returns>
      <exception cref="T:System.InvalidOperationException">Polygon is invalid in such way that operation can not be completed.</exception>
    </member>
    <member name="M:Aspose.Gis.Geometries.Polygon.SetEmpty">
      <summary>
            Makes this <see cref="T:Aspose.Gis.Geometries.Geometry" /> empty.
            </summary>
    </member>
    <member name="M:Aspose.Gis.Geometries.Polygon.GetInteriorRing(System.Int32)">
      <summary>
            Gets the interior ring by its index.
            </summary>
      <param name="index">The index.</param>
      <returns>The interior ring.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The index is out of range.</exception>
    </member>
    <member name="M:Aspose.Gis.Geometries.Polygon.ToEditable">
      <summary>
            Gets an editable copy of this geometry.
            </summary>
      <returns>An editable copy of this geometry.</returns>
    </member>
    <member name="M:Aspose.Gis.Geometries.Polygon.AddInteriorRing(Aspose.Gis.Geometries.ILinearRing)">
      <summary>
            Adds an interior ring.
            </summary>
      <param name="ring">The ring to add.</param>
      <exception cref="T:System.ArgumentNullException">The argument is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="P:Aspose.Gis.Geometries.IGeometry.SpatialReferenceSystem" /> of this geometry and <see cref="P:Aspose.Gis.Geometries.Polygon.SpatialReferenceSystem" /> of argument are both not
            <see langword="null" /> and don't equal to each other.
            </exception>
    </member>
    <member name="M:Aspose.Gis.Geometries.Polygon.Clone">
      <summary>
            Clones this instance.
            </summary>
      <returns>The clone of this instance</returns>
    </member>
    <member name="M:Aspose.Gis.Geometries.Polygon.Equals(Aspose.Gis.Geometries.ICurvePolygon)">
      <summary>Determines whether the specified object is equal to the current object.</summary>
      <param name="other">The object to compare with the current object. </param>
      <returns>true if the specified object  is equal to the current object; otherwise, false.</returns>
    </member>
    <member name="M:Aspose.Gis.Geometries.Polygon.Equals(Aspose.Gis.Geometries.IPolygon)">
      <summary>Determines whether the specified object is equal to the current object.</summary>
      <param name="other">The object to compare with the current object. </param>
      <returns>true if the specified object  is equal to the current object; otherwise, false.</returns>
    </member>
    <member name="M:Aspose.Gis.Geometries.Polygon.Equals(System.Object)">
      <summary>Determines whether the specified object is equal to the current object.</summary>
      <param name="obj">The object to compare with the current object. </param>
      <returns>true if the specified object  is equal to the current object; otherwise, false.</returns>
    </member>
    <member name="M:Aspose.Gis.Geometries.Polygon.GetHashCode">
      <summary>Serves as the default hash function. </summary>
      <returns>A hash code for the current object.</returns>
    </member>
    <member name="M:Aspose.Gis.Geometries.Polygon.op_Equality(Aspose.Gis.Geometries.Polygon,Aspose.Gis.Geometries.Polygon)">
      <summary>
            Implements the operator ==.
            </summary>
      <param name="a">The A instance.</param>
      <param name="b">The B instance.</param>
      <returns>
            The result of the operator.
            </returns>
    </member>
    <member name="M:Aspose.Gis.Geometries.Polygon.op_Inequality(Aspose.Gis.Geometries.Polygon,Aspose.Gis.Geometries.Polygon)">
      <summary>
            Implements the operator !=.
            </summary>
      <param name="a">The A instance.</param>
      <param name="b">The B instance.</param>
      <returns>
            The result of the operator.
            </returns>
    </member>
    <member name="T:Aspose.Gis.Geometries.Surface">
      <summary>
            A <see cref="T:Aspose.Gis.Geometries.Surface" /> is a two-dimensional geometric object.
            </summary>
    </member>
    <member name="P:Aspose.Gis.Geometries.Surface.Dimension">
      <summary>
            Gets the topological dimension of this <see cref="T:Aspose.Gis.Geometries.Geometry" />.
            </summary>
    </member>
    <member name="M:Aspose.Gis.Geometries.Surface.GetPointOnSurface">
      <summary>
            Finds a point that is guaranteed to be on this surface.
            </summary>
      <returns>A point on this surface. An empty point if this surface has no interior.</returns>
    </member>
    <member name="M:Aspose.Gis.Geometries.Surface.ToEditable">
      <summary>
            Gets an editable copy of this geometry.
            </summary>
      <returns>An editable copy of this geometry.</returns>
    </member>
    <member name="M:Aspose.Gis.Geometries.Surface.ToLinearGeometry">
      <summary>
            Gets approximate or equivalent non-curve version of this geometry using the default <c>tolerance</c>.
            </summary>
      <returns>
            A <see cref="T:Aspose.Gis.Geometries.IPolygon" /> that approximates or equivalent to this <c>ISurface</c>.
            This is the equivalent of <see cref="M:Aspose.Gis.Geometries.ISurface.ToLinearGeometry(System.Double)" /> with
            default <c>tolerance</c>. Default <c>tolerance</c>s value is dependent on <see cref="T:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem" />
            of this geometry:
            <ul><li> For projected SRS Tolerance is 0.001 meters (in SRS units) </li><li> For geographic SRS Tolerance is <c>1e-5</c> degrees (in SRS units) </li><li> For unknown SRS Tolerance is <c>1e-5</c></li></ul>
            For more details on what transformations are applied refer to <see cref="M:Aspose.Gis.Geometries.ISurface.ToLinearGeometry(System.Double)" /> specification.
            </returns>
      <exception cref="T:System.InvalidOperationException">
            This geometry is invalid in a such way, that operation can not be completed.
            </exception>
    </member>
    <member name="M:Aspose.Gis.Geometries.Surface.ToLinearGeometry(System.Double)">
      <summary>
             Gets approximate or equivalent non-curve version of this geometry using the specified <c>tolerance</c>.
             </summary>
      <param name="tolerance">
             The <c>tolerance</c> to use. The result is guaranteed to be less than <c>tolerance</c> away from the
             curved geometry, unless the number of points needed to linearize the geometry exceeds the per-quadrant maximum,
             currently equal to 10000 points.
             </param>
      <returns>
             A <see cref="T:Aspose.Gis.Geometries.IPolygon" /> that approximates or equivalent to this <c>ISurface</c>:
             <ul>
             If this object is <see cref="T:Aspose.Gis.Geometries.IPolygon" /> itself the result is equivalent to this object
             If this object is not <see cref="T:Aspose.Gis.Geometries.IPolygon" /> it is linearized and <see cref="T:Aspose.Gis.Geometries.IPolygon" /> is created
            </ul></returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <c>tolerance</c> is less than or equal to <c>0</c>.
             </exception>
      <exception cref="T:System.InvalidOperationException">
             This geometry is invalid in a such way, that operation can not be completed.
             </exception>
    </member>
    <member name="M:Aspose.Gis.Geometries.Surface.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Geometries.Surface" /> class.
            </summary>
    </member>
    <member name="M:Aspose.Gis.Geometries.Surface.#ctor(Aspose.Gis.Geometries.Surface)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Geometries.Surface" /> class.
            </summary>
      <param name="other">The other <see cref="T:Aspose.Gis.Geometries.Surface" /> to copy data from.</param>
    </member>
    <member name="T:Aspose.Gis.Geometries.WkbVariant">
      <summary>
            The variant of Well-Known Binary
            </summary>
    </member>
    <member name="F:Aspose.Gis.Geometries.WkbVariant.SimpleFeatureAccessOutdated">
      <summary>
            Well-Known Binary compliant with Simple Feature Access specification, version 1.1.
            </summary>
      <remarks>
            This variant of Well-Known Binary does not include Z and M values.
            </remarks>
    </member>
    <member name="F:Aspose.Gis.Geometries.WkbVariant.Iso">
      <summary>
            Well-Known Binary compliant with ISO standard "SQL Multimedia and application packages - Part 3: Spatial" and
            Simple Feature Access specification, version 1.2.
            </summary>
    </member>
    <member name="F:Aspose.Gis.Geometries.WkbVariant.ExtendedPostGis">
      <summary>
            Extended Well-Known Binary variant designed by PostGIS that exports Spatial Reference System identifier (EPSG code).
            </summary>
    </member>
    <member name="T:Aspose.Gis.Geometries.WktVariant">
      <summary>
            The variant of Well-Known Text
            </summary>
    </member>
    <member name="F:Aspose.Gis.Geometries.WktVariant.SimpleFeatureAccessOutdated">
      <summary>
            Well-Known Text compliant with Simple Feature Access specification, version 1.1.
            </summary>
      <remarks>
            This variant of Well-Known Text does not include Z and M values.
            </remarks>
    </member>
    <member name="F:Aspose.Gis.Geometries.WktVariant.Iso">
      <summary>
            Well-Known Text compliant with ISO standard "SQL Multimedia and application packages - Part 3: Spatial" and
            Simple Feature Access specification, version 1.2.
            </summary>
    </member>
    <member name="F:Aspose.Gis.Geometries.WktVariant.ExtendedPostGis">
      <summary>
            Extended Well-Known Text variant designed by PostGIS that exports Spatial Reference System identifier (EPSG code).
            </summary>
    </member>
    <member name="T:Aspose.Gis.GisException">
      <summary>
            The exception that is thrown when an error occurs during GIS data processing.
            </summary>
    </member>
    <member name="M:Aspose.Gis.GisException.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.GisException" /> class.
            </summary>
    </member>
    <member name="M:Aspose.Gis.GisException.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.GisException" /> class.
            </summary>
      <param name="message">The message that describes the error.</param>
    </member>
    <member name="M:Aspose.Gis.GisException.#ctor(System.String,System.Exception)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.GisException" /> class.
            </summary>
      <param name="message">The message that describes the error.</param>
      <param name="inner">The exception that is the cause of the current exception.</param>
    </member>
    <member name="M:Aspose.Gis.GisException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.GisException" /> class.
            </summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
      <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is <see langword="null" /> or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is <see langword="null" />. </exception>
    </member>
    <member name="T:Aspose.Gis.IAttributesConverter">
      <summary>
            A custom converter for layer attributes.
            </summary>
    </member>
    <member name="M:Aspose.Gis.IAttributesConverter.ModifyAttribute(Aspose.Gis.FeatureAttribute)">
      <summary>
            Adjusts a <see cref="T:Aspose.Gis.FeatureAttribute" /> as necessary for the target layer.
            </summary>
      <param name="attribute">A copy of an attribute of the source layer.</param>
    </member>
    <member name="T:Aspose.Gis.License">
      <summary>
            Provides methods to license the component.
            </summary>
    </member>
    <member name="M:Aspose.Gis.License.SetLicense(System.String)">
      <summary>
            Licenses the component.
            </summary>
      <remarks>
        <p>Tries to find the license in the following locations:</p>
        <p>1. Explicit path.</p>
        <p>2. The folder that contains the Aspose component assembly.</p>
        <p>3. The folder that contains the client's calling assembly.</p>
        <p>4. The folder that contains the entry (startup) assembly.</p>
        <p>5. An embedded resource in the client's calling assembly.</p>
        <p>
          <b>Note:</b>On the .NET Compact Framework, tries to find the license only in these locations:</p>
        <p>1. Explicit path.</p>
        <p>2. An embedded resource in the client's calling assembly.</p>
      </remarks>
      <param name="licenseName">Can be a full or short file name or name of an embedded resource.
            Use an empty string to switch to evaluation mode.</param>
    </member>
    <member name="M:Aspose.Gis.License.SetLicense(System.IO.Stream)">
      <summary>
            Licenses the component.
            </summary>
      <param name="stream">A stream that contains the license.</param>
      <remarks>
        <p>Use this method to load a license from a stream.</p>
      </remarks>
    </member>
    <member name="T:Aspose.Gis.NamespaceDoc">
      <summary>
        <c>Aspose.Gis</c> namespace provides classes for generating, converting, and modifying GIS data.
            </summary>
    </member>
    <member name="T:Aspose.Gis.PrecisionModel">
      <summary>
        <see cref="T:Aspose.Gis.PrecisionModel" /> specifies a number of significant digits in a coordinate.
            </summary>
      <remarks>
            There are two types of PrecisionModel:
            <ul><li>Exact <see cref="T:Aspose.Gis.PrecisionModel" /> (all digits are significant);</li><li>Rounded <see cref="T:Aspose.Gis.PrecisionModel" /> (some number of digits are significant).</li></ul>
            A <see cref="T:Aspose.Gis.PrecisionModel" /> can be set to <see cref="T:Aspose.Gis.VectorLayer" /> via <see cref="T:Aspose.Gis.DriverOptions" />
            in order to round coordinates when writing or reading geometries.
            </remarks>
      <seealso cref="P:Aspose.Gis.DriverOptions.XYPrecisionModel" />
      <seealso cref="P:Aspose.Gis.DriverOptions.ZPrecisionModel" />
      <seealso cref="P:Aspose.Gis.DriverOptions.MPrecisionModel" />
    </member>
    <member name="P:Aspose.Gis.PrecisionModel.Exact">
      <summary>
            Returns an exact precision model.
            According to exact precision model all digits in a double value are significant.
            </summary>
    </member>
    <member name="M:Aspose.Gis.PrecisionModel.Rounding(System.Int32)">
      <summary>
            Returns a rounding precision model.
            According to rounding precision model only a limited number of digits are significant.
            </summary>
      <remarks>
            When applied to a coordinate, the following code is used to reduce precision:
            <code>double rounded = Math.Round(value, significantDigits);</code></remarks>
      <param name="significantDigits">Number of significant digits.</param>
      <returns>Rounding Precision model.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
            Number of significant digits is less then 0 or more than 15.
            </exception>
    </member>
    <member name="P:Aspose.Gis.PrecisionModel.IsExact">
      <summary>
            Gets a value indicating whether this precision model is exact.
            </summary>
      <value>
        <see langword="true" /> if this precision model is exact; <see langword="false" /> otherwise.</value>
    </member>
    <member name="P:Aspose.Gis.PrecisionModel.IsRounding">
      <summary>
            Gets a value indicating whether this precision model is rounding.
            </summary>
      <value>
        <see langword="true" /> if this precision model is rounding; <see langword="false" /> otherwise.</value>
    </member>
    <member name="P:Aspose.Gis.PrecisionModel.SignificantDigits">
      <summary>
            Gets a number of significant digits in a precision model if it is rounding.
            </summary>
      <value>
            Number of significant digits if this is a rounded precision model. -1 if this is an exact precision model.
            </value>
    </member>
    <member name="M:Aspose.Gis.PrecisionModel.Equals(System.Object)">
      <summary>Indicates whether the current object is equal to another object of the same type.</summary>
      <param name="other">An object to compare with this object.</param>
      <returns>true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.</returns>
    </member>
    <member name="M:Aspose.Gis.PrecisionModel.GetHashCode">
      <summary>Serves as the default hash function. </summary>
      <returns>A hash code for the current object.</returns>
    </member>
    <member name="M:Aspose.Gis.PrecisionModel.Equals(Aspose.Gis.PrecisionModel)">
      <summary>Indicates whether the current object is equal to another object of the same type.</summary>
      <param name="other">An object to compare with this object.</param>
      <returns>true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.</returns>
    </member>
    <member name="M:Aspose.Gis.PrecisionModel.op_Equality(Aspose.Gis.PrecisionModel,Aspose.Gis.PrecisionModel)">
      <summary>
            Implements the operator ==.
            </summary>
      <param name="a">The A instance.</param>
      <param name="b">The B instance.</param>
      <returns>
            The result of the operator.
            </returns>
    </member>
    <member name="M:Aspose.Gis.PrecisionModel.op_Inequality(Aspose.Gis.PrecisionModel,Aspose.Gis.PrecisionModel)">
      <summary>
            Implements the operator !=.
            </summary>
      <param name="a">The A instance.</param>
      <param name="b">The B instance.</param>
      <returns>
            The result of the operator.
            </returns>
    </member>
    <member name="M:Aspose.Gis.PrecisionModel.#ctor">
      <summary>
            Create new instance.
            </summary>
    </member>
    <member name="T:Aspose.Gis.Rendering.CapStyle">
      <summary> Specifies how lines are rendered at their ends. </summary>
    </member>
    <member name="F:Aspose.Gis.Rendering.CapStyle.Butt">
      <summary> Sharp square edge. </summary>
    </member>
    <member name="F:Aspose.Gis.Rendering.CapStyle.Round">
      <summary> Rounded edge. </summary>
    </member>
    <member name="F:Aspose.Gis.Rendering.CapStyle.Square">
      <summary> Slightly elongated square edge. </summary>
    </member>
    <member name="T:Aspose.Gis.Rendering.FillStyle">
      <summary>
            Specifies a filling pattern.
            </summary>
    </member>
    <member name="F:Aspose.Gis.Rendering.FillStyle.Solid">
      <summary> Solid fill. </summary>
    </member>
    <member name="F:Aspose.Gis.Rendering.FillStyle.None">
      <summary> Do not fill. </summary>
    </member>
    <member name="F:Aspose.Gis.Rendering.FillStyle.HorizontalHatch">
      <summary> A pattern of horizontal lines. </summary>
    </member>
    <member name="F:Aspose.Gis.Rendering.FillStyle.VerticalHatch">
      <summary> A pattern of vertical lines. </summary>
    </member>
    <member name="F:Aspose.Gis.Rendering.FillStyle.CrossHatch">
      <summary> A pattern of horizontal and vertical lines that cross. </summary>
    </member>
    <member name="F:Aspose.Gis.Rendering.FillStyle.ForwardDiagonalHatch">
      <summary> A pattern of lines on a diagonal from upper left to lower right. </summary>
    </member>
    <member name="F:Aspose.Gis.Rendering.FillStyle.BackwardDiagonalHatch">
      <summary> A pattern of lines on a diagonal from upper right to lower left. </summary>
    </member>
    <member name="F:Aspose.Gis.Rendering.FillStyle.DiagonalCrossHatch">
      <summary> A pattern of crisscross diagonal lines. </summary>
    </member>
    <member name="T:Aspose.Gis.Rendering.Formats.Bmp.BmpRenderer">
      <summary>
            A <see cref="T:Aspose.Gis.Rendering.Renderer" /> that renders <see cref="T:Aspose.Gis.Rendering.Map" /> into BMP file.
            </summary>
    </member>
    <member name="T:Aspose.Gis.Rendering.Formats.Bmp.NamespaceDoc">
      <summary>
        <c>Aspose.Gis.Formats.Bmp</c> namespace provides classes for working with BMP format.
            </summary>
    </member>
    <member name="T:Aspose.Gis.Rendering.Formats.Jpeg.JpegRenderer">
      <summary>
            A <see cref="T:Aspose.Gis.Rendering.Renderer" /> that renders <see cref="T:Aspose.Gis.Rendering.Map" /> into JPEG file.
            </summary>
    </member>
    <member name="T:Aspose.Gis.Rendering.Formats.Jpeg.NamespaceDoc">
      <summary>
        <c>Aspose.Gis.Formats.Jpeg</c> namespace provides classes for working with JPEG format.
            </summary>
    </member>
    <member name="T:Aspose.Gis.Rendering.Formats.NamespaceGroupDoc">
      <summary>
        <c>Aspose.Gis.Rendering.Formats</c> namespace provides classes for working with specific rendering formats.
            </summary>
    </member>
    <member name="T:Aspose.Gis.Rendering.Formats.Png.NamespaceDoc">
      <summary>
        <c>Aspose.Gis.Formats.Png</c> namespace provides classes for working with PNG format.
            </summary>
    </member>
    <member name="T:Aspose.Gis.Rendering.Formats.Png.PngRenderer">
      <summary>
            A <see cref="T:Aspose.Gis.Rendering.Renderer" /> that renders <see cref="T:Aspose.Gis.Rendering.Map" /> into PNG file.
            </summary>
    </member>
    <member name="T:Aspose.Gis.Rendering.Formats.Svg.NamespaceDoc">
      <summary>
        <c>Aspose.Gis.Formats.Svg</c> namespace provides classes for working with SVG format.
            </summary>
    </member>
    <member name="T:Aspose.Gis.Rendering.Formats.Svg.SvgRenderer">
      <summary>
            A <see cref="T:Aspose.Gis.Rendering.Renderer" /> that renders <see cref="T:Aspose.Gis.Rendering.Map" /> into SVG file.
            </summary>
    </member>
    <member name="T:Aspose.Gis.Rendering.Labelings.FontStyle">
      <summary>
            Specifies style to be applied to text.
            </summary>
    </member>
    <member name="F:Aspose.Gis.Rendering.Labelings.FontStyle.Regular">
      <summary> Regular text. </summary>
    </member>
    <member name="F:Aspose.Gis.Rendering.Labelings.FontStyle.Bold">
      <summary> Bold text. </summary>
    </member>
    <member name="F:Aspose.Gis.Rendering.Labelings.FontStyle.Italic">
      <summary> Italic text. </summary>
    </member>
    <member name="F:Aspose.Gis.Rendering.Labelings.FontStyle.Underline">
      <summary> Underlined text. </summary>
    </member>
    <member name="F:Aspose.Gis.Rendering.Labelings.FontStyle.Strikeout">
      <summary> Text with a line through the middle. </summary>
    </member>
    <member name="T:Aspose.Gis.Rendering.Labelings.Labeling">
      <summary>
            The abstract root class for labelings, classes that describe how to place labels on features.
            </summary>
    </member>
    <member name="P:Aspose.Gis.Rendering.Labelings.Labeling.Null">
      <summary> Gets an instance of <see cref="T:Aspose.Gis.Rendering.Labelings.NullLabeling" />. </summary>
    </member>
    <member name="T:Aspose.Gis.Rendering.Labelings.LabelingRule">
      <summary>
            A user-defined rule for <see cref="T:Aspose.Gis.Rendering.Labelings.RuleBasedLabeling" />.
            </summary>
    </member>
    <member name="M:Aspose.Gis.Rendering.Labelings.LabelingRule.CreateFilterRule(System.Func{Aspose.Gis.Feature,System.Boolean},Aspose.Gis.Rendering.Labelings.Labeling)">
      <summary>
            Creates new rule that applies a labeling to feature whenever it passes filter.
            </summary>
      <param name="filter">Determines when labeling should be used.</param>
      <param name="labeling">Labeling to apply.</param>
      <exception cref="T:System.ArgumentNullException">Filter is <see langword="null" />.</exception>
      <returns> New LabelingRule object. </returns>
    </member>
    <member name="M:Aspose.Gis.Rendering.Labelings.LabelingRule.CreateElseRule(Aspose.Gis.Rendering.Labelings.Labeling)">
      <summary>
            Creates new rule that applies a labeling to feature whenever it doesn't match any filter rule.
            </summary>
      <param name="labeling">Labeling to apply.</param>
      <returns> New LabelingRule object. </returns>
    </member>
    <member name="P:Aspose.Gis.Rendering.Labelings.LabelingRule.IsElseRule">
      <summary>
            Gets a value indicating whether this rule is "else-rule".
            </summary>
      <remarks>
            "Else-rule" applies labeling to a feature if feature doesn't match any filter rule.
            </remarks>
    </member>
    <member name="P:Aspose.Gis.Rendering.Labelings.LabelingRule.IsFilterRule">
      <summary>
            Gets a value indicating whether this rule is "filter-rule".
            </summary>
      <remarks>
            "filter-rule" applies labeling to a feature if <see cref="P:Aspose.Gis.Rendering.Labelings.LabelingRule.Filter" /> returns <see langword="true" /> for the feature.
            </remarks>
    </member>
    <member name="P:Aspose.Gis.Rendering.Labelings.LabelingRule.Filter">
      <summary>
            Determines if "filter-rule" should apply labeling to the feature.
            If returns <see langword="true" /> labeling is used; otherwise, feature is skipped.
            </summary>
    </member>
    <member name="P:Aspose.Gis.Rendering.Labelings.LabelingRule.Labeling">
      <summary>
            Labeling to apply to the feature.
            </summary>
    </member>
    <member name="T:Aspose.Gis.Rendering.Labelings.LabelPlacement">
      <summary>
            Label placement specifies how labels are placed relatively to feature's geometry.
            </summary>
    </member>
    <member name="M:Aspose.Gis.Rendering.Labelings.LabelPlacement.Clone">
      <summary> Clones this instance. </summary>
      <returns>A clone of this instance.</returns>
    </member>
    <member name="T:Aspose.Gis.Rendering.Labelings.LineLabelAlignment">
      <summary>
            Specifies how the label is aligned with the line.
            </summary>
    </member>
    <member name="F:Aspose.Gis.Rendering.Labelings.LineLabelAlignment.Horizontal">
      <summary>
            No alignment. The label is horizontal.
            </summary>
    </member>
    <member name="F:Aspose.Gis.Rendering.Labelings.LineLabelAlignment.Parallel">
      <summary>
            The label is parallel to the line.
            </summary>
    </member>
    <member name="F:Aspose.Gis.Rendering.Labelings.LineLabelAlignment.Curved">
      <summary>
            The label follows the shape of the line.
            </summary>
    </member>
    <member name="T:Aspose.Gis.Rendering.Labelings.LineLabelPlacement">
      <summary>
            Line label placement places labels along line.
            </summary>
    </member>
    <member name="M:Aspose.Gis.Rendering.Labelings.LineLabelPlacement.#ctor">
      <summary> Creates new instance. </summary>
    </member>
    <member name="M:Aspose.Gis.Rendering.Labelings.LineLabelPlacement.#ctor(Aspose.Gis.Rendering.Labelings.LineLabelPlacement)">
      <summary> Creates new instance. </summary>
      <param name="other">The other <see cref="T:Aspose.Gis.Rendering.Labelings.LineLabelPlacement" /> to copy data from.</param>
      <exception cref="T:System.ArgumentNullException">The argument is <see langword="null" />.</exception>
    </member>
    <member name="P:Aspose.Gis.Rendering.Labelings.LineLabelPlacement.Offset">
      <summary>
            The offset from the linear path.
            Positive values offset to the left of the line, negative to the right. Default is 0.
            </summary>
    </member>
    <member name="P:Aspose.Gis.Rendering.Labelings.LineLabelPlacement.Alignment">
      <summary>
            Specifies how the label is aligned with the linear path. Default is <see cref="F:Aspose.Gis.Rendering.Labelings.LineLabelAlignment.Parallel" />.
            </summary>
    </member>
    <member name="P:Aspose.Gis.Rendering.Labelings.LineLabelPlacement.MaxAngleDelta">
      <summary>
            When used with <see cref="F:Aspose.Gis.Rendering.Labelings.LineLabelAlignment.Curved" /> sets the maximum angle in degrees between two
            subsequent characters in a curved label. Default is 25.
            </summary>
      <exception cref="T:System.ArgumentException" accessor="set">Value is negative.</exception>
    </member>
    <member name="M:Aspose.Gis.Rendering.Labelings.LineLabelPlacement.Clone">
      <summary>
            Clones this instance.
            </summary>
      <returns>A clone of this instance.</returns>
    </member>
    <member name="T:Aspose.Gis.Rendering.Labelings.MultipartMode">
      <summary>
            Specifies how labels are rendered for features that contain multipart geometries.
            </summary>
    </member>
    <member name="F:Aspose.Gis.Rendering.Labelings.MultipartMode.All">
      <summary>
            Places a label near each part of the geometry as long as there is space near the part.
            </summary>
    </member>
    <member name="F:Aspose.Gis.Rendering.Labelings.MultipartMode.Any">
      <summary>
            Places one label for the whole geometry.
            </summary>
    </member>
    <member name="F:Aspose.Gis.Rendering.Labelings.MultipartMode.Largest">
      <summary>
            Places a label for the largest part of the geometry as long as there is space for the label.
            </summary>
    </member>
    <member name="T:Aspose.Gis.Rendering.Labelings.NamespaceDoc">
      <summary>
        <c>Aspose.Gis.Rendering.Labelings</c> namespace provides classes for configuring vector features labeling.
            </summary>
    </member>
    <member name="T:Aspose.Gis.Rendering.Labelings.NullLabeling">
      <summary>
            The <see cref="T:Aspose.Gis.Rendering.Labelings.NullLabeling" /> skips labeling of a geometry it is applied to.
            </summary>
    </member>
    <member name="P:Aspose.Gis.Rendering.Labelings.NullLabeling.Instance">
      <summary>
            Gets an instance of <see cref="T:Aspose.Gis.Rendering.Labelings.NullLabeling" />.
            </summary>
    </member>
    <member name="T:Aspose.Gis.Rendering.Labelings.PointLabelPlacement">
      <summary>
            Points label placement places labels near geometries centers.
            </summary>
    </member>
    <member name="M:Aspose.Gis.Rendering.Labelings.PointLabelPlacement.#ctor">
      <summary> Creates new instance. </summary>
    </member>
    <member name="M:Aspose.Gis.Rendering.Labelings.PointLabelPlacement.#ctor(Aspose.Gis.Rendering.Labelings.PointLabelPlacement)">
      <summary> Creates new instance. </summary>
      <param name="other">The other <see cref="T:Aspose.Gis.Rendering.Labelings.PointLabelPlacement" /> to copy data from.</param>
      <exception cref="T:System.ArgumentNullException">The argument is <see langword="null" />.</exception>
    </member>
    <member name="P:Aspose.Gis.Rendering.Labelings.PointLabelPlacement.HorizontalAnchorPoint">
      <summary> Specifies which side of a label will be aligned horizontally with the point location. </summary>
    </member>
    <member name="P:Aspose.Gis.Rendering.Labelings.PointLabelPlacement.VerticalAnchorPoint">
      <summary> Specifies which side of a label will be aligned vertically with the point location. </summary>
    </member>
    <member name="P:Aspose.Gis.Rendering.Labelings.PointLabelPlacement.HorizontalOffset">
      <summary> Specifies horizontal offset from a point location to the labels anchor point. </summary>
    </member>
    <member name="P:Aspose.Gis.Rendering.Labelings.PointLabelPlacement.VerticalOffset">
      <summary> Specifies vertical offset from a point location to the labels anchor point. </summary>
    </member>
    <member name="P:Aspose.Gis.Rendering.Labelings.PointLabelPlacement.Rotation">
      <summary> Specifies rotation of label in degrees. </summary>
    </member>
    <member name="M:Aspose.Gis.Rendering.Labelings.PointLabelPlacement.Clone">
      <summary> Clones this instance. </summary>
      <returns>A clone of this instance.</returns>
    </member>
    <member name="T:Aspose.Gis.Rendering.Labelings.RuleBasedLabeling">
      <summary>
            Applies a labeling to feature according to user-defined rules.
            </summary>
    </member>
    <member name="P:Aspose.Gis.Rendering.Labelings.RuleBasedLabeling.Count">
      <summary>Gets the number of rules.</summary>
      <returns>The number of rules. </returns>
    </member>
    <member name="P:Aspose.Gis.Rendering.Labelings.RuleBasedLabeling.Item(System.Int32)">
      <summary>Gets the rule at the specified index .</summary>
      <param name="index">The zero-based index of the rule to get. </param>
      <returns>The rule at the specified index.</returns>
    </member>
    <member name="M:Aspose.Gis.Rendering.Labelings.RuleBasedLabeling.Add(System.Func{Aspose.Gis.Feature,System.Boolean},Aspose.Gis.Rendering.Labelings.Labeling)">
      <summary>
            Adds new <see cref="T:Aspose.Gis.Rendering.Labelings.LabelingRule" />.
            </summary>
      <param name="filter">Determines when labeling should be applied to a feature.</param>
      <param name="labeling">Labeling to apply to a feature when <paramref name="filter" /> returns true.</param>
    </member>
    <member name="M:Aspose.Gis.Rendering.Labelings.RuleBasedLabeling.AddElseRule(Aspose.Gis.Rendering.Labelings.Labeling)">
      <summary>
            Adds a labeling that will be applied to features that don't match any filtering rule.
            </summary>
      <param name="labeling">A labeling.</param>
      <exception cref="T:System.ArgumentNullException">Argument is <see langword="null" />.</exception>
    </member>
    <member name="M:Aspose.Gis.Rendering.Labelings.RuleBasedLabeling.Add(Aspose.Gis.Rendering.Labelings.LabelingRule)">
      <summary> Adds a rule. </summary>
      <param name="rule">Rule to add.</param>
      <exception cref="T:System.ArgumentNullException">Argument is <see langword="null" />.</exception>
    </member>
    <member name="M:Aspose.Gis.Rendering.Labelings.RuleBasedLabeling.GetEnumerator">
      <summary>Returns an enumerator that iterates through rules.</summary>
      <returns>An enumerator that can be used to iterate through rules.</returns>
    </member>
    <member name="T:Aspose.Gis.Rendering.Labelings.SimpleLabeling">
      <summary> A simple labeling places label on every feature. </summary>
    </member>
    <member name="M:Aspose.Gis.Rendering.Labelings.SimpleLabeling.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Rendering.Labelings.SimpleLabeling" /> class.
            </summary>
    </member>
    <member name="M:Aspose.Gis.Rendering.Labelings.SimpleLabeling.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Rendering.Labelings.SimpleLabeling" /> class.
            </summary>
      <param name="labelAttribute">Attribute name to use as a source of labels.</param>
    </member>
    <member name="M:Aspose.Gis.Rendering.Labelings.SimpleLabeling.#ctor(Aspose.Gis.Rendering.Labelings.SimpleLabeling)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Rendering.Labelings.SimpleLabeling" /> class.
            </summary>
      <param name="other">The other <see cref="T:Aspose.Gis.Rendering.Labelings.SimpleLabeling" /> to copy data from.</param>
      <exception cref="T:System.ArgumentNullException">The argument is <see langword="null" />.</exception>
    </member>
    <member name="P:Aspose.Gis.Rendering.Labelings.SimpleLabeling.LabelAttribute">
      <summary>
            Attribute name to use as a source of labels. Ignored if <see cref="P:Aspose.Gis.Rendering.Labelings.SimpleLabeling.LabelExpression" /> is set.
            Either <see cref="P:Aspose.Gis.Rendering.Labelings.SimpleLabeling.LabelAttribute" /> or <see cref="P:Aspose.Gis.Rendering.Labelings.SimpleLabeling.LabelExpression" /> must be set before rendering;
            <see cref="T:System.InvalidOperationException" /> is thrown otherwise.
            </summary>
    </member>
    <member name="P:Aspose.Gis.Rendering.Labelings.SimpleLabeling.LabelExpression">
      <summary>
            Provides a way to customize and format label text. If set, overrides <see cref="P:Aspose.Gis.Rendering.Labelings.SimpleLabeling.LabelAttribute" />.
            Either <see cref="P:Aspose.Gis.Rendering.Labelings.SimpleLabeling.LabelAttribute" /> or <see cref="P:Aspose.Gis.Rendering.Labelings.SimpleLabeling.LabelExpression" /> must be set before rendering;
            <see cref="T:System.InvalidOperationException" /> is thrown otherwise.
            </summary>
    </member>
    <member name="P:Aspose.Gis.Rendering.Labelings.SimpleLabeling.FontFamily">
      <summary>
            Font family to use to render text. The default is system dependent value.
            </summary>
      <exception cref="T:System.ArgumentNullException" accessor="set">Argument is <see langword="null" />.</exception>
    </member>
    <member name="P:Aspose.Gis.Rendering.Labelings.SimpleLabeling.FontStyle">
      <summary>
            Style to apply to text.
            </summary>
    </member>
    <member name="P:Aspose.Gis.Rendering.Labelings.SimpleLabeling.FontSize">
      <summary>
            Size of the text.
            </summary>
      <exception cref="T:System.ArgumentException" accessor="set">Value is not positive.</exception>
    </member>
    <member name="P:Aspose.Gis.Rendering.Labelings.SimpleLabeling.FontColor">
      <summary> Determines color of text. </summary>
    </member>
    <member name="P:Aspose.Gis.Rendering.Labelings.SimpleLabeling.HaloSize">
      <summary> Size of the halo (stroke) around text. </summary>
      <exception cref="T:System.ArgumentException" accessor="set">Value is negative.</exception>
    </member>
    <member name="P:Aspose.Gis.Rendering.Labelings.SimpleLabeling.HaloColor">
      <summary> Color of the halo (stroke) around text. </summary>
    </member>
    <member name="P:Aspose.Gis.Rendering.Labelings.SimpleLabeling.GeometryExpression">
      <summary>
            Provides a way to substitute the feature geometry with a one modified for labeling.
            This callback is invoked the first after <see cref="P:Aspose.Gis.Rendering.Labelings.SimpleLabeling.FeatureBasedConfiguration" /> .
            Default is <see langword="null" /> (use feature geometry as-is).
            </summary>
    </member>
    <member name="P:Aspose.Gis.Rendering.Labelings.SimpleLabeling.MultipartMode">
      <summary>
            Specifies rendering behavior for multipart geometries. Default is <see cref="F:Aspose.Gis.Rendering.Labelings.MultipartMode.All" />.
            </summary>
    </member>
    <member name="P:Aspose.Gis.Rendering.Labelings.SimpleLabeling.Placement">
      <summary>
            Label placement specifies how labels are placed relatively to feature's geometries.
            </summary>
    </member>
    <member name="P:Aspose.Gis.Rendering.Labelings.SimpleLabeling.Priority">
      <summary>
            Indicates priority of this label in case if it overlaps with another label. The label with lower priority is not rendered.
            Default is 1000.
            </summary>
    </member>
    <member name="M:Aspose.Gis.Rendering.Labelings.SimpleLabeling.Clone">
      <summary>
            Clones this instance.
            </summary>
      <returns>A clone of this instance.</returns>
    </member>
    <member name="P:Aspose.Gis.Rendering.Labelings.SimpleLabeling.FeatureBasedConfiguration">
      <summary>
            A callback that is used to configure this labeling before handling a feature.
            </summary>
      <remarks>
            This callback is invoked before labeling every feature. It accepts a feature that is about to be
            labeled and a clone of this labeling. By changing properties of the clone, it is possible to
            update labeling's behavior based on feature's attributes.
            </remarks>
    </member>
    <member name="T:Aspose.Gis.Rendering.LineJoin">
      <summary> Determines how lines are rendered at intersections of line segments. </summary>
    </member>
    <member name="F:Aspose.Gis.Rendering.LineJoin.Miter">
      <summary> Sharp corner. </summary>
    </member>
    <member name="F:Aspose.Gis.Rendering.LineJoin.Round">
      <summary> Rounded corner. </summary>
    </member>
    <member name="F:Aspose.Gis.Rendering.LineJoin.Bevel">
      <summary> Diagonal corner. </summary>
    </member>
    <member name="T:Aspose.Gis.Rendering.Map">
      <summary>
            Map is a collection of layers that can be rendered on top of each other via <see cref="T:Aspose.Gis.Rendering.Renderer" />.
            </summary>
    </member>
    <member name="M:Aspose.Gis.Rendering.Map.#ctor(Aspose.Gis.Rendering.Measurement,Aspose.Gis.Rendering.Measurement)">
      <summary>
            Creates new instance of the <c>Map</c> class.
            </summary>
      <param name="width"> Width of the map. </param>
      <param name="height"> Height of the map. </param>
      <exception cref="T:System.ArgumentException" accessor="set"> Unit of width or height is <see cref="F:Aspose.Gis.Rendering.Unit.MapUnits" />. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException" accessor="set"> Width or height is negative or zero. </exception>
    </member>
    <member name="P:Aspose.Gis.Rendering.Map.Extent">
      <summary>
            Specifies bounds of map to render.
            If set to <see langword="null" />, extent is calculated during rendering to include all geometries in all layers.
            </summary>
      <exception cref="T:System.ArgumentException" accessor="set">
        <ul>
          <li>
            <see cref="P:Aspose.Gis.Extent.IsValid" /> is <see langword="false" />.</li>
          <li>
            <see cref="P:Aspose.Gis.Extent.Width" /> is less or equal to zero.</li>
          <li>
            <see cref="P:Aspose.Gis.Extent.Height" /> is less or equal to zero.</li>
          <li>
            <see cref="P:Aspose.Gis.Extent.SpatialReferenceSystem" /> is <see langword="null" />.</li>
        </ul>
      </exception>
      <remarks>
            If spatial reference system of the extent is not equal to spatial reference system of the map, extent is being transformed
            to the target spatial reference system during rendering.
            </remarks>
    </member>
    <member name="P:Aspose.Gis.Rendering.Map.Padding">
      <summary>
            Specifies padding to add to the extent.
            </summary>
      <exception cref="T:System.ArgumentOutOfRangeException" accessor="set"> Value is negative.</exception>
    </member>
    <member name="P:Aspose.Gis.Rendering.Map.Width">
      <summary> Visual width of the map. </summary>
      <exception cref="T:System.ArgumentException" accessor="set">
        <see cref="P:Aspose.Gis.Rendering.Measurement.Unit" /> of the value is <see cref="F:Aspose.Gis.Rendering.Unit.MapUnits" /> or <see cref="F:Aspose.Gis.Rendering.Unit.MetersOnEarth" />.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException" accessor="set"> Value is negative or zero. </exception>
    </member>
    <member name="P:Aspose.Gis.Rendering.Map.Height">
      <summary> Visual height of the map. </summary>
      <exception cref="T:System.ArgumentException" accessor="set">
        <see cref="P:Aspose.Gis.Rendering.Measurement.Unit" /> of the value is <see cref="F:Aspose.Gis.Rendering.Unit.MapUnits" /> or <see cref="F:Aspose.Gis.Rendering.Unit.MetersOnEarth" />.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException" accessor="set"> Value is negative or zero. </exception>
    </member>
    <member name="P:Aspose.Gis.Rendering.Map.Resolution">
      <summary> Resolution to be used to render this map and to convert between <see cref="T:Aspose.Gis.Rendering.Measurement" />. Defaults to 96. </summary>
      <exception accessor="set" cref="T:System.ArgumentOutOfRangeException">
            Argument is negative or equal to 0.
            </exception>
    </member>
    <member name="P:Aspose.Gis.Rendering.Map.BackgroundColor">
      <summary>
            Background color of the map. Defaults to <see cref="P:System.Drawing.Color.Transparent" />.
            </summary>
      <remarks>
            If transparent background is not supported by the output format, background color is set to white.
            </remarks>
    </member>
    <member name="P:Aspose.Gis.Rendering.Map.SpatialReferenceSystem">
      <summary>
        <see cref="P:Aspose.Gis.Rendering.Map.SpatialReferenceSystem" /> of the map.</summary>
      <exception accessor="set" cref="T:System.ArgumentNullException">Argument is <see langword="null" />.</exception>
      <exception accessor="set" cref="T:System.ArgumentException">
            Value is not <see cref="F:Aspose.Gis.SpatialReferencing.SpatialReferenceSystemType.Projected" /> or <see cref="F:Aspose.Gis.SpatialReferencing.SpatialReferenceSystemType.Geographic" />.
            </exception>
    </member>
    <member name="M:Aspose.Gis.Rendering.Map.GetEnumerator">
      <summary>Returns an enumerator that iterates through the layers in the map.</summary>
      <returns>An enumerator that can be used to iterate through the layers in the map.</returns>
    </member>
    <member name="P:Aspose.Gis.Rendering.Map.Count">
      <summary>Gets the number of layers in the map.</summary>
      <returns>The number of layers in the map. </returns>
    </member>
    <member name="P:Aspose.Gis.Rendering.Map.Item(System.Int32)">
      <summary>Gets the layer at the specified index.</summary>
      <param name="index">The index of the layer to get.</param>
      <returns>The layer at the specified index.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Index is out of range.</exception>
    </member>
    <member name="M:Aspose.Gis.Rendering.Map.Add(Aspose.Gis.VectorLayer,System.Boolean)">
      <summary>
            Creates a <see cref="T:Aspose.Gis.Rendering.VectorMapLayer" /> with default symbolizer and adds it to the map. Layers are rendered in addition order.
            </summary>
      <param name="layer">A vector layer to represent by <see cref="T:Aspose.Gis.Rendering.VectorMapLayer" />.</param>
      <param name="keepOpen">
        <see langword="true" /> to leave the vector layer open after the <see cref="T:Aspose.Gis.Rendering.Map" /> object is disposed;
            <see langword="false" /> to dispose the layer.
            </param>
      <exception cref="T:System.ArgumentNullException">Layer is <see langword="null" />.</exception>
    </member>
    <member name="M:Aspose.Gis.Rendering.Map.Add(Aspose.Gis.VectorLayer,Aspose.Gis.Rendering.Symbolizers.VectorSymbolizer,System.Boolean)">
      <summary>
            Creates and adds a <see cref="T:Aspose.Gis.Rendering.VectorMapLayer" /> to the map. Layers are rendered in addition order.
            </summary>
      <param name="layer">A vector layer to represent by <see cref="T:Aspose.Gis.Rendering.VectorMapLayer" />.</param>
      <param name="symbolizer">A symbolizer to use for rendering. If <see langword="null" />, default symbolizer is used.</param>
      <param name="keepOpen">
        <see langword="true" /> to leave the vector layer open after the <see cref="T:Aspose.Gis.Rendering.Map" /> object is disposed;
            <see langword="false" /> to dispose the layer.
            </param>
      <exception cref="T:System.ArgumentNullException">Layer is <see langword="null" />.</exception>
    </member>
    <member name="M:Aspose.Gis.Rendering.Map.Add(Aspose.Gis.VectorLayer,Aspose.Gis.Rendering.Symbolizers.VectorSymbolizer,Aspose.Gis.Rendering.Labelings.Labeling,System.Boolean)">
      <summary>
            Creates and adds a <see cref="T:Aspose.Gis.Rendering.VectorMapLayer" /> to the map. Layers are rendered in addition order.
            </summary>
      <param name="layer">A vector layer to represent by <see cref="T:Aspose.Gis.Rendering.VectorMapLayer" />.</param>
      <param name="symbolizer">A symbolizer to use for rendering. If <see langword="null" />, default symbolizer is used.</param>
      <param name="labeling">
            Labeling to use to label features in layer. If <see langword="null" />, default <see cref="T:Aspose.Gis.Rendering.Labelings.NullLabeling" /> will be used.
            </param>
      <param name="keepOpen">
        <see langword="true" /> to leave the layer open after the <see cref="T:Aspose.Gis.Rendering.Map" /> object is disposed; otherwise, <see langword="false" />.
            </param>
      <exception cref="T:System.ArgumentNullException">Layer is <see langword="null" />.</exception>
    </member>
    <member name="M:Aspose.Gis.Rendering.Map.Add(Aspose.Gis.FeaturesSequence)">
      <summary>
            Creates and adds a <see cref="T:Aspose.Gis.Rendering.VectorMapLayer" /> to the map. Layers are rendered in addition order.
            </summary>
      <param name="featuresSequence">A features sequence to represent by <see cref="T:Aspose.Gis.Rendering.VectorMapLayer" />.</param>
      <exception cref="T:System.ArgumentNullException">Features sequence is <see langword="null" />.</exception>
    </member>
    <member name="M:Aspose.Gis.Rendering.Map.Add(Aspose.Gis.FeaturesSequence,Aspose.Gis.Rendering.Symbolizers.VectorSymbolizer)">
      <summary>
            Creates and adds a <see cref="T:Aspose.Gis.Rendering.VectorMapLayer" /> to the map. Layers are rendered in addition order.
            </summary>
      <param name="featuresSequence">A features sequence to represent by <see cref="T:Aspose.Gis.Rendering.VectorMapLayer" />.</param>
      <param name="symbolizer">A symbolizer to use for rendering. If <see langword="null" />, default symbolizer is used.</param>
      <exception cref="T:System.ArgumentNullException">Features sequence is <see langword="null" />.</exception>
    </member>
    <member name="M:Aspose.Gis.Rendering.Map.Add(Aspose.Gis.FeaturesSequence,Aspose.Gis.Rendering.Symbolizers.VectorSymbolizer,Aspose.Gis.Rendering.Labelings.Labeling)">
      <summary>
            Creates and adds a <see cref="T:Aspose.Gis.Rendering.VectorMapLayer" /> to the map. Layers are rendered in addition order.
            </summary>
      <param name="featuresSequence">A features sequence to represent by <see cref="T:Aspose.Gis.Rendering.VectorMapLayer" />.</param>
      <param name="symbolizer">A symbolizer to use for rendering.</param>
      <param name="labeling">
            Labeling to use to label features in layer. If <see langword="null" />, <see cref="T:Aspose.Gis.Rendering.Labelings.NullLabeling" /> will be used.
            </param>
      <exception cref="T:System.ArgumentNullException">Features sequence is <see langword="null" />.</exception>
    </member>
    <member name="M:Aspose.Gis.Rendering.Map.Add(Aspose.Gis.Rendering.MapLayer)">
      <summary>
            Adds a layer to the map. Layers are rendered in addition order.
            </summary>
      <param name="mapLayer">The layer to be added.</param>
      <exception cref="T:System.ArgumentNullException">Argument is <see langword="null" />.</exception>
    </member>
    <member name="M:Aspose.Gis.Rendering.Map.Render(System.String,Aspose.Gis.Rendering.Renderer)">
      <summary>
            Renders map into a file.
            </summary>
      <param name="outputPath">Path to the output file.</param>
      <param name="renderer">Renderer to use.</param>
    </member>
    <member name="M:Aspose.Gis.Rendering.Map.Render(Aspose.Gis.AbstractPath,Aspose.Gis.Rendering.Renderer)">
      <summary>
            Renders map into a file.
            </summary>
      <param name="outputPath">Path to the output file.</param>
      <param name="renderer">Renderer to use.</param>
      <exception cref="T:System.ArgumentNullException">Any argument <see langword="null" />.</exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
      <exception cref="T:Aspose.Gis.GisException">An error while processing or reading GIS data.</exception>
    </member>
    <member name="M:Aspose.Gis.Rendering.Map.Dispose">
      <summary> Disposes resources. </summary>
    </member>
    <member name="T:Aspose.Gis.Rendering.MapLayer">
      <summary>A <c>MapLayer</c>is a base class for layers inside the <see cref="T:Aspose.Gis.Rendering.Map" />.</summary>
    </member>
    <member name="P:Aspose.Gis.Rendering.MapLayer.Opacity">
      <summary>
            Opacity of the layer.
            </summary>
      <exception cref="T:System.ArgumentOutOfRangeException">Argument is less than 0 or greater than 1.</exception>
    </member>
    <member name="M:Aspose.Gis.Rendering.MapLayer.Dispose">
      <summary>
            Disposes resources.
            </summary>
    </member>
    <member name="T:Aspose.Gis.Rendering.Measurement">
      <summary>
            A number that indicates a render measurement.
            </summary>
    </member>
    <member name="M:Aspose.Gis.Rendering.Measurement.op_Implicit(System.Double)~Aspose.Gis.Rendering.Measurement">
      <summary>
            Returns a new instance of <c>Measurement</c> that represents length in pixels.
            </summary>
      <param name="pixels">Number of pixels.</param>
      <returns>New instance of <c>Measurement</c> class.</returns>
    </member>
    <member name="P:Aspose.Gis.Rendering.Measurement.Zero">
      <summary>
            A measurement of zero length.
            </summary>
    </member>
    <member name="M:Aspose.Gis.Rendering.Measurement.Pixels(System.Double)">
      <summary>
            Returns a new instance of <c>Measurement</c> that represents length in pixels.
            </summary>
      <param name="value">Number of pixels.</param>
      <returns>New instance of <c>Measurement</c> class.</returns>
    </member>
    <member name="M:Aspose.Gis.Rendering.Measurement.Points(System.Double)">
      <summary>
            Returns a new instance of <c>Measurement</c> that represents length in points.
            </summary>
      <param name="value">Number of points.</param>
      <returns>New instance of <c>Measurement</c> class.</returns>
    </member>
    <member name="M:Aspose.Gis.Rendering.Measurement.Millimeters(System.Double)">
      <summary>
            Returns a new instance of <c>Measurement</c> that represents length in millimeters.
            </summary>
      <param name="value">Number of millimeters.</param>
      <returns>New instance of <c>Measurement</c> class.</returns>
    </member>
    <member name="M:Aspose.Gis.Rendering.Measurement.Inches(System.Double)">
      <summary>
            Returns a new instance of <c>Measurement</c> that represents length in inches.
            </summary>
      <param name="value">Number of inches.</param>
      <returns>New instance of <c>Measurement</c> class.</returns>
    </member>
    <member name="M:Aspose.Gis.Rendering.Measurement.MapUnits(System.Double)">
      <summary>
            Returns a new instance of <c>Measurement</c> that represents length in maps Spatial Reference units.
            </summary>
      <param name="value">Number of units.</param>
      <returns>New instance of <c>Measurement</c> class.</returns>
    </member>
    <member name="M:Aspose.Gis.Rendering.Measurement.MetersOnEarth(System.Double)">
      <summary>
            Returns a new instance of <c>Measurement</c> that represents length in meters on the Earth.
            </summary>
      <param name="value">Number of meters.</param>
      <returns>New instance of <c>Measurement</c> class.</returns>
    </member>
    <member name="M:Aspose.Gis.Rendering.Measurement.#ctor(System.Double,Aspose.Gis.Rendering.Unit)">
      <summary>
            Creates new instance.
            </summary>
      <param name="value">A number that indicates the length of the measurement.</param>
      <param name="unit">A unit of measurement.</param>
    </member>
    <member name="P:Aspose.Gis.Rendering.Measurement.Value">
      <summary>
            A number that indicates the length of the measurement.
            </summary>
    </member>
    <member name="P:Aspose.Gis.Rendering.Measurement.Unit">
      <summary>
            A unit of measurement.
            </summary>
    </member>
    <member name="M:Aspose.Gis.Rendering.Measurement.op_Multiply(Aspose.Gis.Rendering.Measurement,System.Double)">
      <summary>
            Multiplies measurement by factor.
            </summary>
      <param name="measurement">Measurement to multiply.</param>
      <param name="factor">Factor to divide on.</param>
      <returns>A measurement with <see cref="P:Aspose.Gis.Rendering.Measurement.Value" /> multiplied by factor.</returns>
    </member>
    <member name="M:Aspose.Gis.Rendering.Measurement.op_Division(Aspose.Gis.Rendering.Measurement,System.Double)">
      <summary>
            Divide measurement by factor.
            </summary>
      <param name="measurement">Measurement to multiply.</param>
      <param name="factor">Factor to divide by.</param>
      <returns>A measurement with <see cref="P:Aspose.Gis.Rendering.Measurement.Value" /> divided by factor.</returns>
    </member>
    <member name="M:Aspose.Gis.Rendering.Measurement.ToString">
      <summary>Returns this instance converted to string.</summary>
      <returns>String representation of this instance.</returns>
    </member>
    <member name="T:Aspose.Gis.Rendering.NamespaceDoc">
      <summary>
        <c>Aspose.Gis.Rendering</c> namespace provides classes for rendering maps.
            </summary>
    </member>
    <member name="T:Aspose.Gis.Rendering.NamespaceGroupDoc">
      <summary>
        <c>Aspose.Gis.Rendering</c> namespace provides classes for rendering maps.
            </summary>
    </member>
    <member name="T:Aspose.Gis.Rendering.Renderer">
      <summary>
            A base class for renderers.
            </summary>
    </member>
    <member name="M:Aspose.Gis.Rendering.Renderer.Render(Aspose.Gis.Rendering.Map,System.String)">
      <summary>
            Renders map.
            </summary>
      <param name="map">Map to render.</param>
      <param name="outputPath">Path to the output file.</param>
      <exception cref="T:System.ArgumentNullException">Any argument is <see langword="null" />.</exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
    </member>
    <member name="M:Aspose.Gis.Rendering.Renderer.Render(Aspose.Gis.Rendering.Map,Aspose.Gis.AbstractPath)">
      <summary>
            Renders map.
            </summary>
      <param name="map">Map to render.</param>
      <param name="outputPath">Path to the output file.</param>
      <exception cref="T:System.ArgumentNullException">Any argument is <see langword="null" />.</exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
    </member>
    <member name="T:Aspose.Gis.Rendering.Renderers">
      <summary>
            Renderers for all supported formats.
            </summary>
    </member>
    <member name="P:Aspose.Gis.Rendering.Renderers.Svg">
      <summary>
            A renderer that renders into the SVG format.
            </summary>
    </member>
    <member name="P:Aspose.Gis.Rendering.Renderers.Png">
      <summary>
            A renderer that renders into the PNG format.
            </summary>
    </member>
    <member name="P:Aspose.Gis.Rendering.Renderers.Jpeg">
      <summary>
            A renderer that renders into the JPEG format.
            </summary>
    </member>
    <member name="P:Aspose.Gis.Rendering.Renderers.Bmp">
      <summary>
            A renderer that renders into the BMP format.
            </summary>
    </member>
    <member name="T:Aspose.Gis.Rendering.Sld.NamespaceDoc">
      <summary>
        <c>Aspose.Gis.Rendering.Sld</c> namespace provides classes for configuring SLD import.
            </summary>
    </member>
    <member name="T:Aspose.Gis.Rendering.Sld.SldImportOptions">
      <summary>
            Options for the import of Styled Layer Descriptor file (Sld).
            </summary>
    </member>
    <member name="P:Aspose.Gis.Rendering.Sld.SldImportOptions.LoadInternetResources">
      <summary>
            Determines whether Aspose.GIS is allowed to load sources from Internet.
            If set to <see langword="false" />, schemas with absolute URIs that does not start with 'file://' would not be loaded.
            Default is <see langword="false" />.
            </summary>
    </member>
    <member name="T:Aspose.Gis.Rendering.StrokeStyle">
      <summary>
            Specifies a stroke style.
            </summary>
    </member>
    <member name="F:Aspose.Gis.Rendering.StrokeStyle.Solid">
      <summary> Specifies a plain line. </summary>
    </member>
    <member name="F:Aspose.Gis.Rendering.StrokeStyle.None">
      <summary> Specifies, that no line should be drawn. </summary>
    </member>
    <member name="F:Aspose.Gis.Rendering.StrokeStyle.Dash">
      <summary> Specifies a dash line. </summary>
    </member>
    <member name="F:Aspose.Gis.Rendering.StrokeStyle.Dot">
      <summary> Specifies a dotted line. </summary>
    </member>
    <member name="F:Aspose.Gis.Rendering.StrokeStyle.DashDot">
      <summary> Specifies alternate dots and dashes . </summary>
    </member>
    <member name="F:Aspose.Gis.Rendering.StrokeStyle.DashDotDot">
      <summary> Specifies a dash-dot-dot line. </summary>
    </member>
    <member name="F:Aspose.Gis.Rendering.StrokeStyle.Custom">
      <summary> Custom dash pattern line. </summary>
    </member>
    <member name="T:Aspose.Gis.Rendering.Symbolizers.GeometryGenerator">
      <summary>
            Decorate a symbolizer to modify feature's geometry before rendering.
            </summary>
    </member>
    <member name="P:Aspose.Gis.Rendering.Symbolizers.GeometryGenerator.Symbolizer">
      <summary>
            Specifies a symbolizer to apply to the modified geometry.
            Default is <see langword="NullVectorSymbolizer" />.
            </summary>
    </member>
    <member name="P:Aspose.Gis.Rendering.Symbolizers.GeometryGenerator.Expression">
      <summary>
            Provides a way to substitute the feature geometry with a one modified for a symbolizer.
            Default is <see langword="null" /> (use feature geometry as-is).
            </summary>
    </member>
    <member name="T:Aspose.Gis.Rendering.Symbolizers.HorizontalAnchor">
      <summary> Specifies side to be aligned horizontally. </summary>
    </member>
    <member name="F:Aspose.Gis.Rendering.Symbolizers.HorizontalAnchor.Center">
      <summary> Specifies that centers will be aligned. </summary>
    </member>
    <member name="F:Aspose.Gis.Rendering.Symbolizers.HorizontalAnchor.Left">
      <summary> Specifies that left sides will be aligned. </summary>
    </member>
    <member name="F:Aspose.Gis.Rendering.Symbolizers.HorizontalAnchor.Right">
      <summary> Specifies that right sides will be aligned. </summary>
    </member>
    <member name="T:Aspose.Gis.Rendering.Symbolizers.LayeredSymbolizer">
      <summary>
            A symbolizer that renders several other symbolizers.
            </summary>
    </member>
    <member name="M:Aspose.Gis.Rendering.Symbolizers.LayeredSymbolizer.#ctor">
      <summary>
            Creates new instance.
            </summary>
    </member>
    <member name="M:Aspose.Gis.Rendering.Symbolizers.LayeredSymbolizer.#ctor(Aspose.Gis.Rendering.Symbolizers.RenderingOrder)">
      <summary>
            Creates new instance.
            </summary>
      <param name="renderingOrder">
            Determines the rendering order.
            <ul><li><see cref="F:Aspose.Gis.Rendering.Symbolizers.RenderingOrder.ByFeatures" /> -
            render feature with all symbolizers, then proceed to the next feature. </li><li><see cref="F:Aspose.Gis.Rendering.Symbolizers.RenderingOrder.ByLayers" /> -
            render all features with a symbolizer, then proceed with drawing features to the next symbolizer. </li></ul></param>
    </member>
    <member name="P:Aspose.Gis.Rendering.Symbolizers.LayeredSymbolizer.RenderingOrder">
      <summary>
            Determines the rendering order.
            <ul><li><see cref="F:Aspose.Gis.Rendering.Symbolizers.RenderingOrder.ByFeatures" /> -
            render all symbolizers for the feature, then proceed to the next feature. </li><li><see cref="F:Aspose.Gis.Rendering.Symbolizers.RenderingOrder.ByLayers" /> -
            render all features with the symbolizer, then proceed to the next symbolizer. </li></ul></summary>
    </member>
    <member name="P:Aspose.Gis.Rendering.Symbolizers.LayeredSymbolizer.Count">
      <summary>Gets the number of symbolizers.</summary>
      <returns>The number of symbolizers. </returns>
    </member>
    <member name="P:Aspose.Gis.Rendering.Symbolizers.LayeredSymbolizer.Item(System.Int32)">
      <summary>Gets the symbolizer at the specified index .</summary>
      <param name="index">The zero-based index of the symbolizer to get. </param>
      <returns>The symbolizer at the specified index.</returns>
    </member>
    <member name="M:Aspose.Gis.Rendering.Symbolizers.LayeredSymbolizer.GetEnumerator">
      <summary>Returns an enumerator that iterates through the collection.</summary>
      <returns>An enumerator that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:Aspose.Gis.Rendering.Symbolizers.LayeredSymbolizer.Add(Aspose.Gis.Rendering.Symbolizers.VectorSymbolizer)">
      <summary>
            Adds the specified symbolizer.
            </summary>
      <param name="symbolizer">The symbolizer to add.</param>
    </member>
    <member name="T:Aspose.Gis.Rendering.Symbolizers.MarkerLine">
      <summary>
            Marker line symbolizer.
            </summary>
    </member>
    <member name="M:Aspose.Gis.Rendering.Symbolizers.MarkerLine.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Rendering.Symbolizers.MarkerLine" /> class.
            </summary>
    </member>
    <member name="M:Aspose.Gis.Rendering.Symbolizers.MarkerLine.#ctor(Aspose.Gis.Rendering.Symbolizers.MarkerLine)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Rendering.Symbolizers.MarkerLine" /> class.
            </summary>
      <param name="other">The other <see cref="T:Aspose.Gis.Rendering.Symbolizers.MarkerLine" /> to copy data from.</param>
      <exception cref="T:System.ArgumentNullException">The argument is <see langword="null" />.</exception>
    </member>
    <member name="P:Aspose.Gis.Rendering.Symbolizers.MarkerLine.Marker">
      <summary> Specifies the marker symbolizer along the line. </summary>
    </member>
    <member name="P:Aspose.Gis.Rendering.Symbolizers.MarkerLine.Interval">
      <summary> Specifies the interval between markers along the line. </summary>
    </member>
    <member name="P:Aspose.Gis.Rendering.Symbolizers.MarkerLine.OffsetAlongLine">
      <summary> Specifies the offset along the line for the first marker. </summary>
    </member>
    <member name="P:Aspose.Gis.Rendering.Symbolizers.MarkerLine.Offset">
      <summary>
            Specifies offset from the original line.
            For positive distance the offset will be at the left side of the input line (relative to the line direction).
            For a negative distance it will be at the right side.
            </summary>
    </member>
    <member name="P:Aspose.Gis.Rendering.Symbolizers.MarkerLine.RotateMarkers">
      <summary> Specifies whether markers should be rotated along the line. </summary>
    </member>
    <member name="P:Aspose.Gis.Rendering.Symbolizers.MarkerLine.FeatureBasedConfiguration">
      <summary>
            A callback that is used to configure this symbolizer before rendering a feature.
            </summary>
      <remarks>
            This callback is invoked before rendering every feature. It accepts a feature that is about to be
            rendered and a clone of this symbolizer. By changing properties of the clone, it is possible to
            update symbolizer's behavior based on feature's attributes.
            </remarks>
    </member>
    <member name="T:Aspose.Gis.Rendering.Symbolizers.MarkerPatternFill">
      <summary>
            Marker pattern fill symbolizer.
            </summary>
    </member>
    <member name="M:Aspose.Gis.Rendering.Symbolizers.MarkerPatternFill.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Rendering.Symbolizers.MarkerPatternFill" /> class.
            </summary>
    </member>
    <member name="M:Aspose.Gis.Rendering.Symbolizers.MarkerPatternFill.#ctor(Aspose.Gis.Rendering.Symbolizers.MarkerPatternFill)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Rendering.Symbolizers.MarkerPatternFill" /> class.
            </summary>
      <param name="other">The other <see cref="T:Aspose.Gis.Rendering.Symbolizers.MarkerPatternFill" /> to copy data from.</param>
      <exception cref="T:System.ArgumentNullException">The argument is <see langword="null" />.</exception>
    </member>
    <member name="P:Aspose.Gis.Rendering.Symbolizers.MarkerPatternFill.Marker">
      <summary> Specifies the marker symbolizer for filling. </summary>
    </member>
    <member name="P:Aspose.Gis.Rendering.Symbolizers.MarkerPatternFill.HorizontalInterval">
      <summary> Specifies the horizontal interval between markers. </summary>
    </member>
    <member name="P:Aspose.Gis.Rendering.Symbolizers.MarkerPatternFill.VerticalInterval">
      <summary> Specifies the vertical interval between markers. </summary>
    </member>
    <member name="P:Aspose.Gis.Rendering.Symbolizers.MarkerPatternFill.HorizontalDisplacement">
      <summary> Specifies the horizontal offset for markers in even horizontal line. </summary>
    </member>
    <member name="P:Aspose.Gis.Rendering.Symbolizers.MarkerPatternFill.VerticalDisplacement">
      <summary> Specifies the vertical offset for markers in even vertical line. </summary>
    </member>
    <member name="P:Aspose.Gis.Rendering.Symbolizers.MarkerPatternFill.FeatureBasedConfiguration">
      <summary>
            A callback that is used to configure this symbolizer before rendering a feature.
            </summary>
      <remarks>
            This callback is invoked before rendering every feature. It accepts a feature that is about to be
            rendered and a clone of this symbolizer. By changing properties of the clone, it is possible to
            update symbolizer's behavior based on feature's attributes.
            </remarks>
    </member>
    <member name="T:Aspose.Gis.Rendering.Symbolizers.MarkerShapeType">
      <summary>
            A shape type of the marker.
            </summary>
    </member>
    <member name="F:Aspose.Gis.Rendering.Symbolizers.MarkerShapeType.Circle">
      <summary> Circle shape. </summary>
    </member>
    <member name="F:Aspose.Gis.Rendering.Symbolizers.MarkerShapeType.Triangle">
      <summary> Triangle shape. </summary>
    </member>
    <member name="F:Aspose.Gis.Rendering.Symbolizers.MarkerShapeType.Square">
      <summary> Square shape. </summary>
    </member>
    <member name="F:Aspose.Gis.Rendering.Symbolizers.MarkerShapeType.Star">
      <summary> Star shape. </summary>
    </member>
    <member name="F:Aspose.Gis.Rendering.Symbolizers.MarkerShapeType.Cross">
      <summary> Cross shape. </summary>
    </member>
    <member name="F:Aspose.Gis.Rendering.Symbolizers.MarkerShapeType.X">
      <summary> 'X' letter shape. </summary>
    </member>
    <member name="T:Aspose.Gis.Rendering.Symbolizers.MixedGeometrySymbolizer">
      <summary>
            Applies correct symbolizer to a feature geometry according to its geometry type.
            </summary>
      <remarks>
            This is useful for layers of the Mixed geometry type or for layers containing geometry collections.
            </remarks>
    </member>
    <member name="P:Aspose.Gis.Rendering.Symbolizers.MixedGeometrySymbolizer.PointSymbolizer">
      <summary>
            Specifies a symbolizer to use for point geometries in the layer.
            </summary>
    </member>
    <member name="P:Aspose.Gis.Rendering.Symbolizers.MixedGeometrySymbolizer.LineSymbolizer">
      <summary>
            Specifies a symbolizer to use for line geometries in the layer.
            </summary>
    </member>
    <member name="P:Aspose.Gis.Rendering.Symbolizers.MixedGeometrySymbolizer.PolygonSymbolizer">
      <summary>
            Specifies a symbolizer to use for polygon geometries in the layer.
            </summary>
    </member>
    <member name="T:Aspose.Gis.Rendering.Symbolizers.NamespaceDoc">
      <summary>
        <c>Aspose.Gis.Rendering.Symbolizers</c> namespace provides classes for configuring rendering vector features.
            </summary>
    </member>
    <member name="T:Aspose.Gis.Rendering.Symbolizers.NullVectorSymbolizer">
      <summary>
            The <c>NullSymbolizer</c> draws nothing and effectively skips rendering of a geometry it is applied to.
            </summary>
    </member>
    <member name="P:Aspose.Gis.Rendering.Symbolizers.NullVectorSymbolizer.Instance">
      <summary>
            Gets an instance of <c>NullSymbolizer</c>.
            </summary>
    </member>
    <member name="T:Aspose.Gis.Rendering.Symbolizers.RasterImageMarker">
      <summary>
            This symbolizer renders a provided raster image.
            </summary>
    </member>
    <member name="M:Aspose.Gis.Rendering.Symbolizers.RasterImageMarker.#ctor(System.String)">
      <summary> Initializes a new instance of the <see cref="T:Aspose.Gis.Rendering.Symbolizers.RasterImageMarker" /> class. </summary>
      <param name="imagePath">Path to the file.</param>
    </member>
    <member name="M:Aspose.Gis.Rendering.Symbolizers.RasterImageMarker.#ctor(Aspose.Gis.AbstractPath)">
      <summary> Initializes a new instance of the <see cref="T:Aspose.Gis.Rendering.Symbolizers.RasterImageMarker" /> class. </summary>
      <param name="imagePath">Path to the file.</param>
    </member>
    <member name="M:Aspose.Gis.Rendering.Symbolizers.RasterImageMarker.#ctor(Aspose.Gis.Rendering.Symbolizers.RasterImageMarker)">
      <summary> Initializes a new instance of the <see cref="T:Aspose.Gis.Rendering.Symbolizers.RasterImageMarker" /> class. </summary>
      <param name="other">The other <see cref="T:Aspose.Gis.Rendering.Symbolizers.RasterImageMarker" /> to copy data from.</param>
      <exception cref="T:System.ArgumentNullException">The argument is <see langword="null" />.</exception>
    </member>
    <member name="P:Aspose.Gis.Rendering.Symbolizers.RasterImageMarker.Width">
      <summary> Specifies the width of the marker. </summary>
      <exception cref="T:System.ArgumentOutOfRangeException" accessor="set"> Value is less than zero. </exception>
    </member>
    <member name="P:Aspose.Gis.Rendering.Symbolizers.RasterImageMarker.Height">
      <summary> Specifies the height of the marker. </summary>
      <exception cref="T:System.ArgumentOutOfRangeException" accessor="set"> Value is less than zero. </exception>
    </member>
    <member name="P:Aspose.Gis.Rendering.Symbolizers.RasterImageMarker.Opacity">
      <summary> Opacity of the layer. Default value is 1.0. </summary>
      <exception cref="T:System.ArgumentOutOfRangeException">Argument is less than 0 or greater than 1.</exception>
    </member>
    <member name="P:Aspose.Gis.Rendering.Symbolizers.RasterImageMarker.HorizontalAnchorPoint">
      <summary> specifies which side of a marker shape will be aligned horizontally with the point location. </summary>
    </member>
    <member name="P:Aspose.Gis.Rendering.Symbolizers.RasterImageMarker.VerticalAnchorPoint">
      <summary> Specifies which side of a marker shape will be aligned vertically with the point location. </summary>
    </member>
    <member name="P:Aspose.Gis.Rendering.Symbolizers.RasterImageMarker.HorizontalOffset">
      <summary> Specifies horizontal offset from a point location to the shape anchor point. </summary>
    </member>
    <member name="P:Aspose.Gis.Rendering.Symbolizers.RasterImageMarker.VerticalOffset">
      <summary> Specifies vertical offset from a point location to the shape anchor point. </summary>
    </member>
    <member name="P:Aspose.Gis.Rendering.Symbolizers.RasterImageMarker.Rotation">
      <summary>
            Specifies the rotation of the symbol about its center point, in decimal degrees.
            Positive values indicate rotation in the clockwise direction, negative values indicate counter-clockwise rotation.
            </summary>
    </member>
    <member name="P:Aspose.Gis.Rendering.Symbolizers.RasterImageMarker.FeatureBasedConfiguration">
      <summary>
            A callback that is used to configure this symbolizer before rendering a feature.
            </summary>
      <remarks>
            This callback is invoked before rendering every feature. It accepts a feature that is about to be
            rendered and a clone of this symbolizer. By changing properties of the clone, it is possible to
            update symbolizer's behavior based on feature's attributes.
            </remarks>
    </member>
    <member name="M:Aspose.Gis.Rendering.Symbolizers.RasterImageMarker.Clone">
      <summary>
            Clones this instance.
            </summary>
      <returns>A clone of this instance.</returns>
    </member>
    <member name="T:Aspose.Gis.Rendering.Symbolizers.RenderingOrder">
      <summary>
            Determines the rendering order.
            </summary>
    </member>
    <member name="F:Aspose.Gis.Rendering.Symbolizers.RenderingOrder.ByFeatures">
      <summary>
            Render feature with all symbolizers, then proceed to the next feature.
            </summary>
    </member>
    <member name="F:Aspose.Gis.Rendering.Symbolizers.RenderingOrder.ByLayers">
      <summary>
            Render all features with a symbolizer, then proceed with drawing features to the next symbolizer.
            </summary>
    </member>
    <member name="T:Aspose.Gis.Rendering.Symbolizers.Rule">
      <summary>
            A user-defined rule for <see cref="T:Aspose.Gis.Rendering.Symbolizers.RuleBasedSymbolizer" />.
            </summary>
    </member>
    <member name="M:Aspose.Gis.Rendering.Symbolizers.Rule.CreateFilterRule(System.Func{Aspose.Gis.Feature,System.Boolean},Aspose.Gis.Rendering.Symbolizers.VectorSymbolizer)">
      <summary>
            Creates new rule that applies a symbolizer to feature whenever it passes filter.
            </summary>
      <param name="filter">Determines when symbolizer should be used.</param>
      <param name="symbolizer">Symbolizer to apply.</param>
      <exception cref="T:System.ArgumentNullException">Filter is <see langword="null" />.</exception>
      <returns> New Rule object. </returns>
    </member>
    <member name="M:Aspose.Gis.Rendering.Symbolizers.Rule.CreateElseRule(Aspose.Gis.Rendering.Symbolizers.VectorSymbolizer)">
      <summary>
            Creates new rule that applies a symbolizer to feature whenever it doesn't match any filter rule.
            </summary>
      <param name="symbolizer">Symbolizer to apply.</param>
      <returns> New Rule object. </returns>
    </member>
    <member name="P:Aspose.Gis.Rendering.Symbolizers.Rule.IsElseRule">
      <summary>
            Gets a value indicating whether this rule is "else-rule".
            </summary>
      <remarks>
            "Else-rule" applies symbolizer to a feature if feature doesn't match any filter rule.
            </remarks>
    </member>
    <member name="P:Aspose.Gis.Rendering.Symbolizers.Rule.IsFilterRule">
      <summary>
            Gets a value indicating whether this rule is "filter-rule".
            </summary>
      <remarks>
            "filter-rule" applies symbolizer to a feature if <see cref="P:Aspose.Gis.Rendering.Symbolizers.Rule.Filter" /> returns <see langword="true" /> for the feature.
            </remarks>
    </member>
    <member name="P:Aspose.Gis.Rendering.Symbolizers.Rule.Filter">
      <summary>
            Determines if "filter-rule" should apply symbolizer to the feature.
            If returns <see langword="true" /> symbolizer is used; otherwise, feature is skipped.
            </summary>
    </member>
    <member name="P:Aspose.Gis.Rendering.Symbolizers.Rule.Symbolizer">
      <summary>
            Symbolizer to apply to the feature.
            </summary>
    </member>
    <member name="T:Aspose.Gis.Rendering.Symbolizers.RuleBasedSymbolizer">
      <summary>
            Applies a symbolizer to feature geometries according to user-defined rules.
            </summary>
    </member>
    <member name="P:Aspose.Gis.Rendering.Symbolizers.RuleBasedSymbolizer.Count">
      <summary>Gets the number of rules.</summary>
      <returns>The number of rules. </returns>
    </member>
    <member name="P:Aspose.Gis.Rendering.Symbolizers.RuleBasedSymbolizer.Item(System.Int32)">
      <summary>Gets the rule at the specified index .</summary>
      <param name="index">The zero-based index of the rule to get. </param>
      <returns>The rule at the specified index.</returns>
    </member>
    <member name="M:Aspose.Gis.Rendering.Symbolizers.RuleBasedSymbolizer.Add(System.Func{Aspose.Gis.Feature,System.Boolean},Aspose.Gis.Rendering.Symbolizers.VectorSymbolizer)">
      <summary>
            Adds new <see cref="T:Aspose.Gis.Rendering.Symbolizers.Rule" />.
            </summary>
      <param name="filter">Determines when symbolizer should be applied to a feature.</param>
      <param name="symbolizer">Symbolizer to apply to a feature when <paramref name="filter" /> returns true.</param>
    </member>
    <member name="M:Aspose.Gis.Rendering.Symbolizers.RuleBasedSymbolizer.AddElseRule(Aspose.Gis.Rendering.Symbolizers.VectorSymbolizer)">
      <summary>
            Adds a symbolizer that will be applied to features that don't match any filtering rule.
            </summary>
      <param name="symbolizer">A symbolizer.</param>
      <exception cref="T:System.ArgumentNullException">Argument is <see langword="null" />.</exception>
    </member>
    <member name="M:Aspose.Gis.Rendering.Symbolizers.RuleBasedSymbolizer.Add(Aspose.Gis.Rendering.Symbolizers.Rule)">
      <summary>
            Adds a rule.
            </summary>
      <param name="rule">Rule to add.</param>
      <exception cref="T:System.ArgumentNullException">Argument is <see langword="null" />.</exception>
    </member>
    <member name="M:Aspose.Gis.Rendering.Symbolizers.RuleBasedSymbolizer.GetEnumerator">
      <summary>Returns an enumerator that iterates through rules.</summary>
      <returns>An enumerator that can be used to iterate through rules.</returns>
    </member>
    <member name="T:Aspose.Gis.Rendering.Symbolizers.SimpleFill">
      <summary>
            Simple polygon symbolizer.
            </summary>
    </member>
    <member name="M:Aspose.Gis.Rendering.Symbolizers.SimpleFill.#ctor">
      <summary>
            Creates new instance.
            </summary>
    </member>
    <member name="M:Aspose.Gis.Rendering.Symbolizers.SimpleFill.#ctor(Aspose.Gis.Rendering.Symbolizers.SimpleFill)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Rendering.Symbolizers.SimpleFill" /> class.
            </summary>
      <param name="other">The other <see cref="T:Aspose.Gis.Rendering.Symbolizers.SimpleFill" /> to copy data from.</param>
      <exception cref="T:System.ArgumentNullException">The argument is <see langword="null" />.</exception>
    </member>
    <member name="P:Aspose.Gis.Rendering.Symbolizers.SimpleFill.FillColor">
      <summary>
            Specifies the color and transparency for filling.
            </summary>
    </member>
    <member name="P:Aspose.Gis.Rendering.Symbolizers.SimpleFill.StrokeColor">
      <summary> Specifies the color and transparency given to the line. </summary>
    </member>
    <member name="P:Aspose.Gis.Rendering.Symbolizers.SimpleFill.StrokeWidth">
      <summary> Specifies the width of the line. </summary>
    </member>
    <member name="P:Aspose.Gis.Rendering.Symbolizers.SimpleFill.StrokeLineJoin">
      <summary> Determines how lines are rendered at intersection of line segments. </summary>
    </member>
    <member name="P:Aspose.Gis.Rendering.Symbolizers.SimpleFill.StrokeStyle">
      <summary> Specifies how the symbol lines should be drawn. </summary>
    </member>
    <member name="P:Aspose.Gis.Rendering.Symbolizers.SimpleFill.StrokeDashPattern">
      <summary>
            Specifies an array of distances that specifies the lengths of alternating dashes and spaces
            in dashed lines.
            </summary>
    </member>
    <member name="P:Aspose.Gis.Rendering.Symbolizers.SimpleFill.StrokeDashOffset">
      <summary> Specifies the distance from the start of a line to the beginning of a dash pattern. </summary>
    </member>
    <member name="P:Aspose.Gis.Rendering.Symbolizers.SimpleFill.FillStyle">
      <summary>
            Specifies the fill style.
            </summary>
    </member>
    <member name="P:Aspose.Gis.Rendering.Symbolizers.SimpleFill.HorizontalOffset">
      <summary>
            Specifies horizontal offset from a point location to the rendered shape.
            </summary>
    </member>
    <member name="P:Aspose.Gis.Rendering.Symbolizers.SimpleFill.VerticalOffset">
      <summary>
            Specifies vertical offset from a polygon location to the rendered shape.
            </summary>
    </member>
    <member name="P:Aspose.Gis.Rendering.Symbolizers.SimpleFill.FeatureBasedConfiguration">
      <summary>
            A callback that is used to configure this symbolizer before rendering a feature.
            </summary>
      <remarks>
            This callback is invoked before rendering every feature. It accepts a feature that is about to be
            rendered and a clone of this symbolizer. By changing properties of the clone, it is possible to
            update symbolizer's behavior based on feature's attributes.
            </remarks>
    </member>
    <member name="M:Aspose.Gis.Rendering.Symbolizers.SimpleFill.Clone">
      <summary>
            Clones this instance.
            </summary>
      <returns>A clone of this instance.</returns>
    </member>
    <member name="T:Aspose.Gis.Rendering.Symbolizers.SimpleLine">
      <summary>
            Simple line symbolizer.
            </summary>
    </member>
    <member name="M:Aspose.Gis.Rendering.Symbolizers.SimpleLine.#ctor">
      <summary>
            Creates new instance.
            </summary>
    </member>
    <member name="M:Aspose.Gis.Rendering.Symbolizers.SimpleLine.#ctor(Aspose.Gis.Rendering.Symbolizers.SimpleLine)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Rendering.Symbolizers.SimpleLine" /> class.
            </summary>
      <param name="other">The other <see cref="T:Aspose.Gis.Rendering.Symbolizers.SimpleLine" /> to copy data from.</param>
      <exception cref="T:System.ArgumentNullException">The argument is <see langword="null" />.</exception>
    </member>
    <member name="P:Aspose.Gis.Rendering.Symbolizers.SimpleLine.Color">
      <summary> Specifies the color and transparency given to the line. </summary>
    </member>
    <member name="P:Aspose.Gis.Rendering.Symbolizers.SimpleLine.Width">
      <summary> Specifies the width of the line. </summary>
    </member>
    <member name="P:Aspose.Gis.Rendering.Symbolizers.SimpleLine.LineJoin">
      <summary> Determines how lines are rendered at intersection of line segments. </summary>
    </member>
    <member name="P:Aspose.Gis.Rendering.Symbolizers.SimpleLine.Style">
      <summary> Specifies how the symbol lines should be drawn. </summary>
    </member>
    <member name="P:Aspose.Gis.Rendering.Symbolizers.SimpleLine.DashPattern">
      <summary>
            Specifies an array of distances that specifies the lengths of alternating dashes and spaces
            in dashed lines.
            </summary>
    </member>
    <member name="P:Aspose.Gis.Rendering.Symbolizers.SimpleLine.DashOffset">
      <summary> Specifies the distance from the start of a line to the beginning of a dash pattern. </summary>
    </member>
    <member name="P:Aspose.Gis.Rendering.Symbolizers.SimpleLine.CapStyle">
      <summary> Specifies how lines are rendered at their ends. </summary>
    </member>
    <member name="P:Aspose.Gis.Rendering.Symbolizers.SimpleLine.Offset">
      <summary>
            Specifies offset from the original line.
            For positive distance the offset will be at the left side of the input line (relative to the line direction).
            For a negative distance it will be at the right side.
            </summary>
    </member>
    <member name="P:Aspose.Gis.Rendering.Symbolizers.SimpleLine.FeatureBasedConfiguration">
      <summary>
            A callback that is used to configure this symbolizer before rendering a feature.
            </summary>
      <remarks>
            This callback is invoked before rendering every feature. It accepts a feature that is about to be
            rendered and a clone of this symbolizer. By changing properties of the clone, it is possible to
            update symbolizer's behavior based on feature's attributes.
            </remarks>
    </member>
    <member name="M:Aspose.Gis.Rendering.Symbolizers.SimpleLine.Clone">
      <summary>
            Clones this instance.
            </summary>
      <returns>A clone of this instance.</returns>
    </member>
    <member name="T:Aspose.Gis.Rendering.Symbolizers.SimpleMarker">
      <summary>
            Simple point symbolizer.
            </summary>
    </member>
    <member name="M:Aspose.Gis.Rendering.Symbolizers.SimpleMarker.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Rendering.Symbolizers.SimpleMarker" /> class.
            </summary>
    </member>
    <member name="M:Aspose.Gis.Rendering.Symbolizers.SimpleMarker.#ctor(Aspose.Gis.Rendering.Symbolizers.SimpleMarker)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Rendering.Symbolizers.SimpleMarker" /> class.
            </summary>
      <param name="other">The other <see cref="T:Aspose.Gis.Rendering.Symbolizers.SimpleMarker" /> to copy data from.</param>
      <exception cref="T:System.ArgumentNullException">The argument is <see langword="null" />.</exception>
    </member>
    <member name="P:Aspose.Gis.Rendering.Symbolizers.SimpleMarker.FillColor">
      <summary> Specifies the color and transparency for filling. </summary>
    </member>
    <member name="P:Aspose.Gis.Rendering.Symbolizers.SimpleMarker.Size">
      <summary> Specifies the size of the marker. </summary>
      <exception cref="T:System.ArgumentOutOfRangeException" accessor="set"> Value is less than zero. </exception>
    </member>
    <member name="P:Aspose.Gis.Rendering.Symbolizers.SimpleMarker.StrokeColor">
      <summary> Specifies the color and transparency given to the line. </summary>
    </member>
    <member name="P:Aspose.Gis.Rendering.Symbolizers.SimpleMarker.StrokeWidth">
      <summary> Specifies the width of the line. </summary>
      <exception cref="T:System.ArgumentOutOfRangeException" accessor="set"> Value is less than to zero. </exception>
    </member>
    <member name="P:Aspose.Gis.Rendering.Symbolizers.SimpleMarker.StrokeLineJoin">
      <summary> Determines how lines are rendered at intersection of line segments. </summary>
    </member>
    <member name="P:Aspose.Gis.Rendering.Symbolizers.SimpleMarker.StrokeStyle">
      <summary> Specifies how the symbol lines should be drawn. </summary>
    </member>
    <member name="P:Aspose.Gis.Rendering.Symbolizers.SimpleMarker.StrokeDashPattern">
      <summary>
            Specifies an array of distances that specifies the lengths of alternating dashes and spaces
            in dashed lines.
            </summary>
      <exception cref="T:System.ArgumentOutOfRangeException" accessor="set"> Any value in array is less or equal to zero. </exception>
      <exception cref="T:System.ArgumentNullException" accessor="set"> Argument is <see langword="null" />. </exception>
    </member>
    <member name="P:Aspose.Gis.Rendering.Symbolizers.SimpleMarker.StrokeDashOffset">
      <summary> Specifies the distance from the start of a line to the beginning of a dash pattern. </summary>
    </member>
    <member name="P:Aspose.Gis.Rendering.Symbolizers.SimpleMarker.ShapeType">
      <summary> Specifies the shape of the marker. </summary>
    </member>
    <member name="P:Aspose.Gis.Rendering.Symbolizers.SimpleMarker.HorizontalAnchorPoint">
      <summary> Specifies which side of a marker shape will be aligned horizontally with the point location. </summary>
    </member>
    <member name="P:Aspose.Gis.Rendering.Symbolizers.SimpleMarker.VerticalAnchorPoint">
      <summary> Specifies which side of a marker shape will be aligned vertically with the point location. </summary>
    </member>
    <member name="P:Aspose.Gis.Rendering.Symbolizers.SimpleMarker.HorizontalOffset">
      <summary> Specifies horizontal offset from a point location to the shape anchor point. </summary>
    </member>
    <member name="P:Aspose.Gis.Rendering.Symbolizers.SimpleMarker.VerticalOffset">
      <summary> Specifies vertical offset from a point location to the shape anchor point. </summary>
    </member>
    <member name="P:Aspose.Gis.Rendering.Symbolizers.SimpleMarker.Rotation">
      <summary>
            Specifies the rotation of the symbol about its center point, in decimal degrees.
            Positive values indicate rotation in the clockwise direction, negative values indicate counter-clockwise rotation.
            </summary>
    </member>
    <member name="P:Aspose.Gis.Rendering.Symbolizers.SimpleMarker.FeatureBasedConfiguration">
      <summary>
            A callback that is used to configure this symbolizer before rendering a feature.
            </summary>
      <remarks>
            This callback is invoked before rendering every feature. It accepts a feature that is about to be
            rendered and a clone of this symbolizer. By changing properties of the clone, it is possible to
            update symbolizer's behavior based on feature's attributes.
            </remarks>
    </member>
    <member name="M:Aspose.Gis.Rendering.Symbolizers.SimpleMarker.Clone">
      <summary>
            Clones this instance.
            </summary>
      <returns>A clone of this instance.</returns>
    </member>
    <member name="T:Aspose.Gis.Rendering.Symbolizers.VectorSymbolizer">
      <summary>
            The abstract root class for the symbolizers that render vector features.
            </summary>
    </member>
    <member name="P:Aspose.Gis.Rendering.Symbolizers.VectorSymbolizer.Null">
      <summary>
            The <see cref="T:Aspose.Gis.Rendering.Symbolizers.NullVectorSymbolizer" /> draws nothing and effectively skips rendering of a geometry it is applied to.
            </summary>
    </member>
    <member name="T:Aspose.Gis.Rendering.Symbolizers.VerticalAnchor">
      <summary> Specifies side to be aligned vertically. </summary>
    </member>
    <member name="F:Aspose.Gis.Rendering.Symbolizers.VerticalAnchor.Center">
      <summary> Specifies that centers will be aligned. </summary>
    </member>
    <member name="F:Aspose.Gis.Rendering.Symbolizers.VerticalAnchor.Top">
      <summary> Specifies that top sides will be aligned. </summary>
    </member>
    <member name="F:Aspose.Gis.Rendering.Symbolizers.VerticalAnchor.Bottom">
      <summary> Specifies that bottom sides will be aligned </summary>
    </member>
    <member name="T:Aspose.Gis.Rendering.Unit">
      <summary>
            A unit of measurement.
            </summary>
    </member>
    <member name="F:Aspose.Gis.Rendering.Unit.Pixels">
      <summary> Specifies pixels. </summary>
    </member>
    <member name="F:Aspose.Gis.Rendering.Unit.Points">
      <summary> Specifies points. There are 72 points in inch. </summary>
    </member>
    <member name="F:Aspose.Gis.Rendering.Unit.Millimeters">
      <summary> Specifies millimeters. </summary>
    </member>
    <member name="F:Aspose.Gis.Rendering.Unit.Inches">
      <summary> Specifies inches. One inch is 25.4 millimeters. </summary>
    </member>
    <member name="F:Aspose.Gis.Rendering.Unit.MapUnits">
      <summary> Specifies Spatial Reference specific map units. </summary>
    </member>
    <member name="F:Aspose.Gis.Rendering.Unit.MetersOnEarth">
      <summary> Specifies a length in actual meters on the Earth regardless what is the <see cref="P:Aspose.Gis.Rendering.Map.SpatialReferenceSystem" />. </summary>
    </member>
    <member name="T:Aspose.Gis.Rendering.VectorMapLayer">
      <summary>
            A layer inside <see cref="T:Aspose.Gis.Rendering.Map" /> that represents a vector layer data.
            </summary>
    </member>
    <member name="M:Aspose.Gis.Rendering.VectorMapLayer.#ctor(Aspose.Gis.FeaturesSequence)">
      <summary>
            Creates new instance with default symbolizer.
            </summary>
      <param name="featuresSequence">Features sequence.</param>
      <exception cref="T:System.ArgumentNullException">Argument is <see langword="null" />.</exception>
    </member>
    <member name="M:Aspose.Gis.Rendering.VectorMapLayer.#ctor(Aspose.Gis.FeaturesSequence,Aspose.Gis.Rendering.Symbolizers.VectorSymbolizer)">
      <summary>
            Creates new instance with default symbolizer.
            </summary>
      <param name="featuresSequence">Features sequence.</param>
      <param name="symbolizer">Symbolizer to use to render layer. If <see langword="null" />, default symbolizer will be used.</param>
      <exception cref="T:System.ArgumentNullException">Argument is <see langword="null" />.</exception>
    </member>
    <member name="M:Aspose.Gis.Rendering.VectorMapLayer.#ctor(Aspose.Gis.FeaturesSequence,Aspose.Gis.Rendering.Symbolizers.VectorSymbolizer,Aspose.Gis.Rendering.Labelings.Labeling)">
      <summary>
            Creates new instance with default symbolizer.
            </summary>
      <param name="featuresSequence">Features sequence.</param>
      <param name="symbolizer">Symbolizer to use to render layer. If <see langword="null" />, default symbolizer will be used.</param>
      <param name="labeling">
            Labeling to use to label features in layer. If <see langword="null" />, default <see cref="T:Aspose.Gis.Rendering.Labelings.NullLabeling" /> will be used.
            </param>
      <exception cref="T:System.ArgumentNullException">Argument is <see langword="null" />.</exception>
    </member>
    <member name="M:Aspose.Gis.Rendering.VectorMapLayer.#ctor(Aspose.Gis.VectorLayer,System.Boolean)">
      <summary>
            Creates new instance with default symbolizer.
            </summary>
      <param name="layer">Vector layer.</param>
      <param name="keepOpen">
        <see langword="true" /> to leave the layer open after the <see cref="T:Aspose.Gis.Rendering.VectorMapLayer" /> object is disposed; otherwise, <see langword="false" />.
            </param>
      <exception cref="T:System.ArgumentNullException">Layer is <see langword="null" />.</exception>
    </member>
    <member name="M:Aspose.Gis.Rendering.VectorMapLayer.#ctor(Aspose.Gis.VectorLayer,Aspose.Gis.Rendering.Symbolizers.VectorSymbolizer,System.Boolean)">
      <summary>
            Creates new instance.
            </summary>
      <param name="layer">Vector layer.</param>
      <param name="symbolizer">Symbolizer to use to render layer. If <see langword="null" />, default symbolizer will be used.</param>
      <param name="keepOpen">
        <see langword="true" /> to leave the layer open after the <see cref="T:Aspose.Gis.Rendering.VectorMapLayer" /> object is disposed; otherwise, <see langword="false" />.
            </param>
      <exception cref="T:System.ArgumentNullException">Layer is <see langword="null" />.</exception>
    </member>
    <member name="M:Aspose.Gis.Rendering.VectorMapLayer.#ctor(Aspose.Gis.VectorLayer,Aspose.Gis.Rendering.Symbolizers.VectorSymbolizer,Aspose.Gis.Rendering.Labelings.Labeling,System.Boolean)">
      <summary>
            Creates new instance.
            </summary>
      <param name="layer">Vector layer.</param>
      <param name="symbolizer">
            Symbolizer to use to render layer. If <see langword="null" />, default symbolizer will be used.
            </param>
      <param name="labeling">
            Labeling to use to label features in layer. If <see langword="null" />, default <see cref="T:Aspose.Gis.Rendering.Labelings.NullLabeling" /> will be used.
            </param>
      <param name="keepOpen">
        <see langword="true" /> to leave the layer open after the <see cref="T:Aspose.Gis.Rendering.VectorMapLayer" /> object is disposed; otherwise, <see langword="false" />.
            </param>
      <exception cref="T:System.ArgumentNullException">Layer is <see langword="null" />.</exception>
    </member>
    <member name="P:Aspose.Gis.Rendering.VectorMapLayer.FeaturesSequence">
      <summary>
            The features sequence represented by this <c>VectorMapLayer</c>.
            </summary>
    </member>
    <member name="P:Aspose.Gis.Rendering.VectorMapLayer.Symbolizer">
      <summary>
            Symbolizer to use to render features of the layer.
            </summary>
    </member>
    <member name="P:Aspose.Gis.Rendering.VectorMapLayer.Labeling">
      <summary>
            Labeling to use to label features of the layer.
            </summary>
    </member>
    <member name="M:Aspose.Gis.Rendering.VectorMapLayer.ImportSld(System.String,Aspose.Gis.Rendering.Sld.SldImportOptions)">
      <summary>
            Imports style from Styled Layer Descriptor file located at the specified path.
            </summary>
      <param name="path">Path to the Styled Layer Descriptor file.</param>
      <param name="options">Import options.</param>
      <exception cref="T:System.ArgumentNullException">Argument is <see langword="null" />.</exception>
      <exception cref="T:System.Xml.XmlException">An error occurred while parsing the XML.</exception>
      <exception cref="T:System.FormatException">No SLD style was found in the XML.</exception>
      <remarks>
            This method overwrites value of the <see cref="P:Aspose.Gis.Rendering.VectorMapLayer.Symbolizer" /> property.
            </remarks>
    </member>
    <member name="M:Aspose.Gis.Rendering.VectorMapLayer.ImportSld(Aspose.Gis.AbstractPath,Aspose.Gis.Rendering.Sld.SldImportOptions)">
      <summary>
            Imports style from Styled Layer Descriptor file located at the specified path.
            </summary>
      <param name="path">Path to the Styled Layer Descriptor file.</param>
      <param name="options">Import options.</param>
      <exception cref="T:System.ArgumentNullException">Argument is <see langword="null" />.</exception>
      <exception cref="T:System.Xml.XmlException">An error occurred while parsing the XML.</exception>
      <exception cref="T:System.FormatException">No SLD style was found in the XML.</exception>
      <remarks>
            This method overwrites value of the <see cref="P:Aspose.Gis.Rendering.VectorMapLayer.Symbolizer" /> property.
            </remarks>
    </member>
    <member name="M:Aspose.Gis.Rendering.VectorMapLayer.ImportSldFromString(System.String,Aspose.Gis.Rendering.Sld.SldImportOptions)">
      <summary>
            Imports style from the specified Styled Layer Descriptor string.
            </summary>
      <param name="sld">Styled Layer Descriptor.</param>
      <param name="options">Import options.</param>
      <exception cref="T:System.ArgumentNullException">Argument is <see langword="null" />.</exception>
      <exception cref="T:System.Xml.XmlException">An error occurred while parsing the XML.</exception>
      <exception cref="T:System.FormatException">No SLD style was found in the XML.</exception>
      <remarks>
            This method overwrites value of the <see cref="P:Aspose.Gis.Rendering.VectorMapLayer.Symbolizer" /> property.
            </remarks>
    </member>
    <member name="M:Aspose.Gis.Rendering.VectorMapLayer.Dispose">
      <summary>
            Disposes resources.
            </summary>
    </member>
    <member name="T:Aspose.Gis.SavingOptions">
      <summary>
            Options for saving <see cref="T:Aspose.Gis.FeaturesSequence" /> to file.
            </summary>
    </member>
    <member name="P:Aspose.Gis.SavingOptions.DriverOptions">
      <summary> Driver-specific options for the output layer. </summary>
    </member>
    <member name="P:Aspose.Gis.SavingOptions.SpatialReferenceSystem">
      <summary> Driver-specific options for the output layer.</summary>
      <remarks> If not specified <see cref="P:Aspose.Gis.SavingOptions.SpatialReferenceSystem" /> of the input features sequence is used. </remarks>
    </member>
    <member name="P:Aspose.Gis.SavingOptions.AttributesConverter">
      <summary>
            A custom converter for attributes.
            If not <see langword="null" />, it is called for each attribute of the source layer and is expected to change it if necessary.
            </summary>
      <remarks> Attribute name and data type cannot be changed. </remarks>
    </member>
    <member name="T:Aspose.Gis.SpatialReferencing.Axis">
      <summary>
            An axis describes one dimension of SRS.
            </summary>
    </member>
    <member name="M:Aspose.Gis.SpatialReferencing.Axis.#ctor(System.String,Aspose.Gis.SpatialReferencing.AxisDirection)">
      <summary>
            Creates new instance.
            </summary>
      <param name="name"> Name of the axis. </param>
      <param name="direction"> Direction of the axis. </param>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.Axis.Name">
      <summary> Name of this axis. </summary>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.Axis.Direction">
      <summary> Direction of this axis. </summary>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.Axis.IsEastWestAxis">
      <summary> Detects if direction of axis is East or West. </summary>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.Axis.IsNorthSouthAxis">
      <summary> Detects if direction of axis is North or South. </summary>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.Axis.IsUpDownAxis">
      <summary> Detects if direction of axis is Up or Down. </summary>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.Axis.IsOtherAxis">
      <summary> Detects if this axis direction is Other. </summary>
    </member>
    <member name="T:Aspose.Gis.SpatialReferencing.AxisDirection">
      <summary>
            Axis direction defines direction at which axis is pointing.
            </summary>
    </member>
    <member name="F:Aspose.Gis.SpatialReferencing.AxisDirection.Invalid">
      <summary>
            Default value.
            </summary>
    </member>
    <member name="F:Aspose.Gis.SpatialReferencing.AxisDirection.North">
      <summary>
            Axis pointing to the north.
            </summary>
    </member>
    <member name="F:Aspose.Gis.SpatialReferencing.AxisDirection.South">
      <summary>
            Axis pointing to the south.
            </summary>
    </member>
    <member name="F:Aspose.Gis.SpatialReferencing.AxisDirection.East">
      <summary>
            Axis pointing to the east.
            </summary>
    </member>
    <member name="F:Aspose.Gis.SpatialReferencing.AxisDirection.West">
      <summary>
            Axis pointing to the west.
            </summary>
    </member>
    <member name="F:Aspose.Gis.SpatialReferencing.AxisDirection.Up">
      <summary>
            Axis pointing up.
            </summary>
    </member>
    <member name="F:Aspose.Gis.SpatialReferencing.AxisDirection.Down">
      <summary>
            Axis pointing down.
            </summary>
    </member>
    <member name="F:Aspose.Gis.SpatialReferencing.AxisDirection.Other">
      <summary>
            Axis pointing to some other direction. This might be 'X' axis in geocentric SRS (it points to prime meridian).
            </summary>
    </member>
    <member name="T:Aspose.Gis.SpatialReferencing.BursaWolfParameters">
      <summary>
            Class that contains parameters of Bursa-Wolf formula to transform to another datum.
            </summary>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.BursaWolfParameters.Null">
      <summary>
            Special value, indicating that parameters are unknown.
            </summary>
    </member>
    <member name="M:Aspose.Gis.SpatialReferencing.BursaWolfParameters.#ctor(System.Double,System.Double,System.Double)">
      <summary>
            Creates new instance of <see cref="T:Aspose.Gis.SpatialReferencing.BursaWolfParameters" />.
            </summary>
      <param name="dx"> Dx in meters. </param>
      <param name="dy"> Dy in meters. </param>
      <param name="dz"> Dz in meters. </param>
    </member>
    <member name="M:Aspose.Gis.SpatialReferencing.BursaWolfParameters.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
      <summary>
            Creates new instance of <see cref="T:Aspose.Gis.SpatialReferencing.BursaWolfParameters" />.
            </summary>
      <param name="dx"> Dx in meters. </param>
      <param name="dy"> Dy in meters. </param>
      <param name="dz"> Dz in meters. </param>
      <param name="rx"> Rx in seconds. </param>
      <param name="ry"> Ry in seconds. </param>
      <param name="rz"> Rz in seconds. </param>
      <param name="scale"> Scale in parts per million. </param>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.BursaWolfParameters.Dx">
      <summary> Dx in meters. </summary>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.BursaWolfParameters.Dy">
      <summary> Dy in meters. </summary>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.BursaWolfParameters.Dz">
      <summary> Dz in meters. </summary>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.BursaWolfParameters.Rx">
      <summary> Rx in seconds. </summary>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.BursaWolfParameters.Ry">
      <summary> Ry in seconds. </summary>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.BursaWolfParameters.Rz">
      <summary> Rz in seconds. </summary>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.BursaWolfParameters.Scale">
      <summary> Scale in parts per million. </summary>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.BursaWolfParameters.IsNull">
      <summary>
            Determine whether this instance is <see cref="P:Aspose.Gis.SpatialReferencing.BursaWolfParameters.Null" />.
            </summary>
    </member>
    <member name="M:Aspose.Gis.SpatialReferencing.BursaWolfParameters.Equals(System.Object)">
      <summary>Determines whether the specified object is equal to the current object.</summary>
      <param name="obj">The object to compare with the current object. </param>
      <returns>true if the specified object  is equal to the current object; otherwise, false.</returns>
    </member>
    <member name="M:Aspose.Gis.SpatialReferencing.BursaWolfParameters.Equals(Aspose.Gis.SpatialReferencing.BursaWolfParameters)">
      <summary>Indicates whether the current object is equal to another object of the same type.</summary>
      <param name="other">An object to compare with this object.</param>
      <returns>true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.</returns>
    </member>
    <member name="M:Aspose.Gis.SpatialReferencing.BursaWolfParameters.op_Equality(Aspose.Gis.SpatialReferencing.BursaWolfParameters,Aspose.Gis.SpatialReferencing.BursaWolfParameters)">
      <summary>
            Implements the operator ==.
            </summary>
      <param name="a">The A instance.</param>
      <param name="b">The B instance.</param>
      <returns>
            The result of the operator.
            </returns>
    </member>
    <member name="M:Aspose.Gis.SpatialReferencing.BursaWolfParameters.op_Inequality(Aspose.Gis.SpatialReferencing.BursaWolfParameters,Aspose.Gis.SpatialReferencing.BursaWolfParameters)">
      <summary>
            Implements the operator !=.
            </summary>
      <param name="a">The A instance.</param>
      <param name="b">The B instance.</param>
      <returns>
            The result of the operator.
            </returns>
    </member>
    <member name="M:Aspose.Gis.SpatialReferencing.BursaWolfParameters.GetHashCode">
      <summary>Serves as the default hash function. </summary>
      <returns>A hash code for the current object.</returns>
      <remarks>
            Since Equals of this class uses comparison of doubles with delta,
            nothing better then a constant can be used for this method.
            You are encouraged not to use objects of this class as keys in hash table, to avoid performance losidentifier2s.
            </remarks>
    </member>
    <member name="T:Aspose.Gis.SpatialReferencing.CompoundSpatialReferenceSystem">
      <summary>
            Compound SRS unites two underlying SRS, none of which can be compound.
            </summary>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.CompoundSpatialReferenceSystem.Type">
      <summary>
            Type of this Compound SRS. Can be <see cref="F:Aspose.Gis.SpatialReferencing.SpatialReferenceSystemType.Geographic" /> if
            this Compound SRS is combination of geographic and vertical SRS, or <see cref="F:Aspose.Gis.SpatialReferencing.SpatialReferenceSystemType.Projected" /> if
            this Compound SRS is combination of projected and vertical SRS.
            </summary>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.CompoundSpatialReferenceSystem.AsGeographic">
      <summary>
            Return geographic representation of this SRS. If this compound SRS indeed represents a geographic SRS, the result will
            be three dimensional geographic SRS (with longitude, latitude, height dimensions). Otherwise an exception will be thrown.
            </summary>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.CompoundSpatialReferenceSystem.AsProjected">
      <summary>
            Return projected representation of this SRS. If this compound SRS indeed represents a projected SRS, the result will
            be three dimensional projected SRS (with X, Y, height dimensions). Otherwise an exception will be thrown.
            </summary>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.CompoundSpatialReferenceSystem.IsCompound">
      <summary>
            Returns <see langword="true" />.
            </summary>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.CompoundSpatialReferenceSystem.AsCompound">
      <summary>
            Return this.
            </summary>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.CompoundSpatialReferenceSystem.Head">
      <summary>
            First underlying SRS.
            </summary>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.CompoundSpatialReferenceSystem.Tail">
      <summary>
            Second underlying SRS.
            </summary>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.CompoundSpatialReferenceSystem.DimensionsCount">
      <summary>
            Number of dimensions. For compound SRS this is sum of number of dimensions of underlying SRS.
            </summary>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.CompoundSpatialReferenceSystem.HasPrimeMeridian">
      <summary>
            Compound SRS has prime meridian if any of underlying SRS have prime meridian.
            </summary>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.CompoundSpatialReferenceSystem.PrimeMeridian">
      <summary>
            Return prime meridian of this SRS.
            If both <see cref="P:Aspose.Gis.SpatialReferencing.CompoundSpatialReferenceSystem.Head" /> and <see cref="P:Aspose.Gis.SpatialReferencing.CompoundSpatialReferenceSystem.Tail" /> have prime meridian - return prime meridian of head.
            </summary>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.CompoundSpatialReferenceSystem.HasGeographicDatum">
      <summary>
            Compound SRS have geographic datum if any of underlying SRS have geographic datum.
            </summary>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.CompoundSpatialReferenceSystem.GeographicDatum">
      <summary>
            Return geographic datum of this SRS.
            If both <see cref="P:Aspose.Gis.SpatialReferencing.CompoundSpatialReferenceSystem.Head" /> and <see cref="P:Aspose.Gis.SpatialReferencing.CompoundSpatialReferenceSystem.Tail" /> have geographic datum - return geographic datum of head.
            </summary>
    </member>
    <member name="M:Aspose.Gis.SpatialReferencing.CompoundSpatialReferenceSystem.GetAxis(System.Int32)">
      <summary>
            Get <see cref="T:Aspose.Gis.SpatialReferencing.Axis" /> that describes dimension.
            </summary>
      <param name="dimension"> Number of dimension. </param>
      <returns> Axis that describes dimension. </returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="dimension" /> is less then 0 or greater or equals to <see cref="P:Aspose.Gis.SpatialReferencing.CompoundSpatialReferenceSystem.DimensionsCount" /></exception>
    </member>
    <member name="M:Aspose.Gis.SpatialReferencing.CompoundSpatialReferenceSystem.GetUnit(System.Int32)">
      <summary>
            Get <see cref="T:Aspose.Gis.SpatialReferencing.Unit" /> of dimension.
            </summary>
      <param name="dimension"> Number of dimension. </param>
      <returns> Unit of dimension. </returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="dimension" /> is less then 0 or greater or equals to <see cref="P:Aspose.Gis.SpatialReferencing.CompoundSpatialReferenceSystem.DimensionsCount" /></exception>
    </member>
    <member name="M:Aspose.Gis.SpatialReferencing.CompoundSpatialReferenceSystem.Validate(System.String@)">
      <summary>
            Determine if this SRS is valid. See <see cref="M:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.Validate(System.String@)" /> for validity description.
            </summary>
      <param name="errorMessage"> Description of invalidity (if result is <see langword="false" />)</param>
      <returns> If this SRS is valid - <see langword="true" />, otherwise - <see langword="false" />.</returns>
    </member>
    <member name="M:Aspose.Gis.SpatialReferencing.CompoundSpatialReferenceSystem.IsEquivalent(Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
      <summary>
            Detects whether this SRS is equivalent to other SRS. <seealso cref="M:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.IsEquivalent(Aspose.Gis.SpatialReferencing.SpatialReferenceSystem,Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)" />.
            </summary>
      <param name="other">Other SRS.</param>
      <returns>bool value, indicating whether this SRS is equivalent to other SRS.</returns>
    </member>
    <member name="T:Aspose.Gis.SpatialReferencing.Ellipsoid">
      <summary>
            Ellipsoid represents an ellipsoid, which approximates earth.
            </summary>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.Ellipsoid.Wgs84">
      <summary>
            WGS 84 Ellipsoid.
            </summary>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.Ellipsoid.Wgs72">
      <summary>
            WGS 72 Ellipsoid.
            </summary>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.Ellipsoid.Grs80">
      <summary>
            GRS 1980 Ellipsoid.
            </summary>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.Ellipsoid.Airy">
      <summary>
            Airy ellipsoid.
            </summary>
    </member>
    <member name="M:Aspose.Gis.SpatialReferencing.Ellipsoid.IsEquivalent(Aspose.Gis.SpatialReferencing.Ellipsoid,Aspose.Gis.SpatialReferencing.Ellipsoid)">
      <summary>
            Determines if two ellipsoids are equivalent.
            If ellipsoid A is equivalent to ellipsoid B, then they have same semi major axis and inverse flattening.
            </summary>
      <param name="ellipsoid1"> First ellipsoid. </param>
      <param name="ellipsoid2"> Second ellipsoid. </param>
      <returns> bool value, indicating whether two ellipsoids are equivalent. </returns>
    </member>
    <member name="M:Aspose.Gis.SpatialReferencing.Ellipsoid.#ctor(System.String,System.Double,System.Double,Aspose.Gis.SpatialReferencing.Identifier)">
      <summary>
            Creates new Ellipsoid.
            </summary>
      <param name="name"> Name of the ellipsoid. </param>
      <param name="semiMajorAxis"> Semi major axis of ellipsoid. </param>
      <param name="inverseFlattening"> Inverse flattening of ellipsoid. Should be 0 to create a spheroid. </param>
      <param name="identifier"> Identifier of the ellipsoid. </param>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.Ellipsoid.IsValid">
      <summary> Detects whether ellipsoid is valid: its semi major axis is more then 0 and inverse flattening is positive or equal to 0. </summary>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.Ellipsoid.IsSphere">
      <summary> Detects whether this ellipsoid is a sphere. </summary>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.Ellipsoid.SemiMajorAxis">
      <summary> Semi major axis of ellipsoid. </summary>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.Ellipsoid.InverseFlattening">
      <summary> Inverse flattening of ellipsoid. 0 if this is a sphere. </summary>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.Ellipsoid.SemiMinorAxis">
      <summary> Semi minor axis of ellipsoid. Equals to semi major axis if this is a sphere. </summary>
    </member>
    <member name="M:Aspose.Gis.SpatialReferencing.Ellipsoid.IsEquivalent(Aspose.Gis.SpatialReferencing.Ellipsoid)">
      <summary>
            Determines if two ellipsoids are equivalent.
            If ellipsoid A is equivalent to ellipsoid B, then they have same semi major axis and inverse flattening.
            </summary>
      <param name="other"> Other ellipsoid. </param>
      <returns> bool value, indicating whether two ellipsoids are equivalent. </returns>
    </member>
    <member name="T:Aspose.Gis.SpatialReferencing.GeocentricAxisesOrder">
      <summary>
            Represents order of axises in geocentric SRS.
            </summary>
    </member>
    <member name="F:Aspose.Gis.SpatialReferencing.GeocentricAxisesOrder.Invalid">
      <summary> Geocentric SRS is invalid and axises order can not be determined. </summary>
    </member>
    <member name="F:Aspose.Gis.SpatialReferencing.GeocentricAxisesOrder.XYZ">
      <summary> Order is X, Y, Z. </summary>
    </member>
    <member name="F:Aspose.Gis.SpatialReferencing.GeocentricAxisesOrder.XZY">
      <summary> Order is X, Z, Y. </summary>
    </member>
    <member name="F:Aspose.Gis.SpatialReferencing.GeocentricAxisesOrder.YXZ">
      <summary> Order is Y, X, Z. </summary>
    </member>
    <member name="F:Aspose.Gis.SpatialReferencing.GeocentricAxisesOrder.YZX">
      <summary> Order is Y, Z, X. </summary>
    </member>
    <member name="F:Aspose.Gis.SpatialReferencing.GeocentricAxisesOrder.ZXY">
      <summary> Order is Z, X, Y. </summary>
    </member>
    <member name="F:Aspose.Gis.SpatialReferencing.GeocentricAxisesOrder.ZYX">
      <summary> Order is Z, Y, X. </summary>
    </member>
    <member name="T:Aspose.Gis.SpatialReferencing.GeocentricSpatialReferenceSystem">
      <summary>
            Geocentric SRS is 3 dimensional cartesian SRS with origin at earth center.
            </summary>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.GeocentricSpatialReferenceSystem.LinearUnit">
      <summary>
            Unit, used in this SRS.
            </summary>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.GeocentricSpatialReferenceSystem.AxisesOrder">
      <summary>
            Order of axises in this SRS.
            If this SRS is not valid and has wrong axises directions, <see cref="F:Aspose.Gis.SpatialReferencing.GeocentricAxisesOrder.Invalid" /> is returned.
            </summary>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.GeocentricSpatialReferenceSystem.Type">
      <summary>
            Return <see cref="F:Aspose.Gis.SpatialReferencing.SpatialReferenceSystemType.Geocentric" />.
            </summary>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.GeocentricSpatialReferenceSystem.AsGeocentric">
      <summary>
            Return this.
            </summary>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.GeocentricSpatialReferenceSystem.DimensionsCount">
      <summary>
            Return 3, since geocentric SRS is always three dimensional.
            </summary>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.GeocentricSpatialReferenceSystem.HasGeographicDatum">
      <summary>
            Return <see langword="true" />, since geocentric SRS always have geographic datum.
            </summary>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.GeocentricSpatialReferenceSystem.GeographicDatum">
      <summary>
            Return geographic datum of this SRS.
            </summary>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.GeocentricSpatialReferenceSystem.HasPrimeMeridian">
      <summary>
            Return <see langword="true" />, since geocentric SRS always have prime meridian.
            </summary>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.GeocentricSpatialReferenceSystem.PrimeMeridian">
      <summary>
            Return prime meridian of this SRS.
            </summary>
    </member>
    <member name="M:Aspose.Gis.SpatialReferencing.GeocentricSpatialReferenceSystem.GetAxis(System.Int32)">
      <summary>
            Get <see cref="T:Aspose.Gis.SpatialReferencing.Axis" /> that describes dimension.
            </summary>
      <param name="dimension"> Number of dimension. </param>
      <returns> Axis that describes dimension. </returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="dimension" /> is less then 0 or greater or equals to <see cref="P:Aspose.Gis.SpatialReferencing.GeocentricSpatialReferenceSystem.DimensionsCount" /></exception>
    </member>
    <member name="M:Aspose.Gis.SpatialReferencing.GeocentricSpatialReferenceSystem.GetUnit(System.Int32)">
      <summary>
            Get <see cref="T:Aspose.Gis.SpatialReferencing.Unit" /> of dimension.
            </summary>
      <param name="dimension"> Number of dimension. </param>
      <returns> Unit of dimension. </returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="dimension" /> is less then 0 or greater or equals to <see cref="P:Aspose.Gis.SpatialReferencing.GeocentricSpatialReferenceSystem.DimensionsCount" /></exception>
    </member>
    <member name="M:Aspose.Gis.SpatialReferencing.GeocentricSpatialReferenceSystem.Validate(System.String@)">
      <summary>
            Determine if this SRS is valid. See <see cref="M:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.Validate(System.String@)" /> for validity description.
            </summary>
      <param name="errorMessage"> Description of invalidity (if result is <see langword="false" />)</param>
      <returns> If this SRS is valid - <see langword="true" />, otherwise - <see langword="false" />.</returns>
    </member>
    <member name="T:Aspose.Gis.SpatialReferencing.GeocentricSpatialReferenceSystemParameters">
      <summary>
            Parameters to create geocentric SRS.
            Parameters have reasonable defaults, so you will have to assign only some of them.
            If you assign <see langword="null" /> to any parameter, a default value will be used.
            </summary>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.GeocentricSpatialReferenceSystemParameters.Name">
      <summary>
            Name of geocentric SRS. Default is "Unnamed".
            </summary>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.GeocentricSpatialReferenceSystemParameters.Datum">
      <summary>
            Datum of geocentric SRS. Default is <see cref="P:Aspose.Gis.SpatialReferencing.GeographicDatum.Wgs84" />.
            </summary>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.GeocentricSpatialReferenceSystemParameters.PrimeMeridian">
      <summary>
            Prime meridian of this SRS. Default is <see cref="P:Aspose.Gis.SpatialReferencing.PrimeMeridian.Greenwich" />.
            </summary>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.GeocentricSpatialReferenceSystemParameters.LinearUnit">
      <summary>
            Units to be used in this SRS. Defaults to <see cref="P:Aspose.Gis.SpatialReferencing.Unit.Meter" />.
            </summary>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.GeocentricSpatialReferenceSystemParameters.XAxis">
      <summary>
            Axis of geocentric SRS that describes 'X' dimension (axis that points at prime meridian). 
            </summary>
      <exception cref="T:System.ArgumentException"> Axis direction is not <see cref="F:Aspose.Gis.SpatialReferencing.AxisDirection.Other" />. </exception>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.GeocentricSpatialReferenceSystemParameters.YAxis">
      <summary>
            Axis of geocentric SRS that describes 'Y' dimension (axis that points to the left or to the right of X axis on equatorial plane).
            Defaults to axis with <see cref="F:Aspose.Gis.SpatialReferencing.AxisDirection.East" /> direction.
            </summary>
      <exception cref="T:System.ArgumentException">
            Axis direction is not <see cref="F:Aspose.Gis.SpatialReferencing.AxisDirection.West" /> or <see cref="F:Aspose.Gis.SpatialReferencing.AxisDirection.East" />.
            </exception>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.GeocentricSpatialReferenceSystemParameters.ZAxis">
      <summary>
            Axis of geocentric SRS that describes 'Z' dimension (axis that points to the north or south pole).
            Defaults to axis with <see cref="F:Aspose.Gis.SpatialReferencing.AxisDirection.North" /> direction.
            </summary>
      <exception cref="T:System.ArgumentException">
            Axis direction is not <see cref="F:Aspose.Gis.SpatialReferencing.AxisDirection.North" /> or <see cref="F:Aspose.Gis.SpatialReferencing.AxisDirection.South" />.
            </exception>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.GeocentricSpatialReferenceSystemParameters.AxisesOrder">
      <summary>
            Order of axises. Defaults to <see cref="F:Aspose.Gis.SpatialReferencing.GeocentricAxisesOrder.XYZ" />.
            </summary>
      <exception cref="T:System.ArgumentException"> Thrown in setter when argument is not a valid enum member. </exception>
    </member>
    <member name="T:Aspose.Gis.SpatialReferencing.GeographicAxisesOrder">
      <summary>
            Represents order of axises in geographic SRS.
            </summary>
    </member>
    <member name="F:Aspose.Gis.SpatialReferencing.GeographicAxisesOrder.Invalid">
      <summary>
            Geographic SRS is invalid and axises order can not be determined.
            </summary>
    </member>
    <member name="F:Aspose.Gis.SpatialReferencing.GeographicAxisesOrder.LongitudeLatitude">
      <summary>
            Order is (Longitude, Latitude).
            </summary>
    </member>
    <member name="F:Aspose.Gis.SpatialReferencing.GeographicAxisesOrder.LatitudeLongitude">
      <summary>
            Order is (Latitude, Longitude).
            </summary>
    </member>
    <member name="T:Aspose.Gis.SpatialReferencing.GeographicDatum">
      <summary>
            Geographic datum relates longitude and latitude to particular place on earth.
            </summary>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.GeographicDatum.Wgs84">
      <summary>
            WGS 84 datum.
            </summary>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.GeographicDatum.Wgs72">
      <summary>
            WGS 72 datum.
            </summary>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.GeographicDatum.Nad83">
      <summary>
            NAD 83 datum.
            </summary>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.GeographicDatum.Etrs89">
      <summary>
            ETRS 89 datum.
            </summary>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.GeographicDatum.Osgb36">
      <summary>
            OSGB 1936 datum.
            </summary>
    </member>
    <member name="M:Aspose.Gis.SpatialReferencing.GeographicDatum.IsEquivalent(Aspose.Gis.SpatialReferencing.GeographicDatum,Aspose.Gis.SpatialReferencing.GeographicDatum)">
      <summary>
            Determines if two datums are equivalent.
            Same coordinates of equivalent datums match same place on Earth.
            Some parameters of equivalent datums can be different, for example <see cref="P:Aspose.Gis.SpatialReferencing.IdentifiableObject.Name" />.
            </summary>
      <param name="datum1"> First datum. </param>
      <param name="datum2"> Second datum. </param>
      <returns> bool value, indicating whether two datums are equivalent. </returns>
    </member>
    <member name="M:Aspose.Gis.SpatialReferencing.GeographicDatum.#ctor(System.String,Aspose.Gis.SpatialReferencing.Ellipsoid,Aspose.Gis.SpatialReferencing.BursaWolfParameters,Aspose.Gis.SpatialReferencing.Identifier)">
      <summary>
            Creates new instance.
            </summary>
      <param name="name"> Name of this datum. </param>
      <param name="ellipsoid"> Ellipsoid of this datum. Can't be null. </param>
      <param name="toWgs84Parameters">
            Parameters, that can be given to bursa wolf formula, to convert coordinates in this datum to coordinates in WGS84 datum.
            If this datum is close to WGS84 and no transformation needed, pass bursa wolf parameters with all values set to 0.
            If null, ToWgs84 will be set to <see cref="P:Aspose.Gis.SpatialReferencing.BursaWolfParameters.IsNull" /> parameters.
            </param>
      <param name="identifier"> Identifier of this datum. </param>
      <exception cref="T:System.ArgumentNullException">
        <see cref="F:Aspose.Gis.SpatialReferencing.GeographicDatum.ellipsoid" /> is null. </exception>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.GeographicDatum.Ellipsoid">
      <summary>
            Ellipsoid, used in this datum to approximate Earth.
            </summary>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.GeographicDatum.ToWgs84Parameters">
      <summary>
            BursaWolfParamters that can be used to transform coordinates in this datum to coordinates in WGS84 datum.
            </summary>
    </member>
    <member name="M:Aspose.Gis.SpatialReferencing.GeographicDatum.IsEquivalent(Aspose.Gis.SpatialReferencing.GeographicDatum)">
      <summary>
            Determines if two datums are equivalent.
            Same coordinates of equivalent datums match same place on Earth.
            Some parameters of equivalent datums can be different, for example <see cref="P:Aspose.Gis.SpatialReferencing.IdentifiableObject.Name" />.
            </summary>
      <param name="other"> Other datum. </param>
      <returns> bool value, indicating whether two datums are equivalent. </returns>
    </member>
    <member name="T:Aspose.Gis.SpatialReferencing.GeographicSpatialReferenceSystem">
      <summary>
            A Geographic SRS is an SRS that is based on longitude and latitude.
            A Geographic SRS can be two dimensional or three dimensional.
            If geographic SRS is three dimensional, then it is actually a compound SRS of two dimensional SRS and vertical SRS.
            </summary>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.GeographicSpatialReferenceSystem.Type">
      <summary>
            Returns <see cref="F:Aspose.Gis.SpatialReferencing.SpatialReferenceSystemType.Geographic" />.
            </summary>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.GeographicSpatialReferenceSystem.AsGeographic">
      <summary>
            Returns this.
            </summary>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.GeographicSpatialReferenceSystem.DimensionsCount">
      <summary>
            Returns dimensions count in this SRS. For geographic SRS this can be:
            two - if this is single geographic SRS.
            three - if this is compound SRS, which consists of single, two dimensional, geographic SRS and vertical SRS, that adds third dimension.
            </summary>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.GeographicSpatialReferenceSystem.HasPrimeMeridian">
      <summary>
            Returns <see langword="true" />, since geographic SRS always have prime meridian.
            </summary>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.GeographicSpatialReferenceSystem.HasGeographicDatum">
      <summary>
            Returns <see langword="true" />, since geographic SRS always have prime meridian.
            </summary>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.GeographicSpatialReferenceSystem.AngularUnit">
      <summary>
            Unit, used for angular dimensions, in this SRS.
            </summary>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.GeographicSpatialReferenceSystem.AxisesOrder">
      <summary>
            Order of axises in this SRS.
            If this SRS is not valid and has wrong axises directions, <see cref="F:Aspose.Gis.SpatialReferencing.GeographicAxisesOrder.Invalid" /> is returned.
            </summary>
    </member>
    <member name="T:Aspose.Gis.SpatialReferencing.GeographicSpatialReferenceSystemParameters">
      <summary>
            Parameters to create geographic SRS.
            Parameters have reasonable defaults, so you will have to assign only some of them.
            If you assign <see langword="null" /> to any parameter, a default value will be used.
            </summary>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.GeographicSpatialReferenceSystemParameters.Name">
      <summary>
            Name of geographic SRS. Default is "Unnamed".
            </summary>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.GeographicSpatialReferenceSystemParameters.Datum">
      <summary>
            Datum of geographic SRS. Default is <see cref="P:Aspose.Gis.SpatialReferencing.GeographicDatum.Wgs84" />.
            </summary>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.GeographicSpatialReferenceSystemParameters.PrimeMeridian">
      <summary>
            Prime meridian of this SRS. Default is <see cref="P:Aspose.Gis.SpatialReferencing.PrimeMeridian.Greenwich" />.
            </summary>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.GeographicSpatialReferenceSystemParameters.AngularUnit">
      <summary>
            Units to be used in this SRS. Default is <see cref="P:Aspose.Gis.SpatialReferencing.Unit.Degree" />.
            </summary>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.GeographicSpatialReferenceSystemParameters.LongitudeAxis">
      <summary>
            Axis that describes longitude. Default is axis with east direction.
            </summary>
      <exception cref="T:System.ArgumentException">
            Thrown from setter if axis direction is not <see cref="F:Aspose.Gis.SpatialReferencing.AxisDirection.East" /> or <see cref="F:Aspose.Gis.SpatialReferencing.AxisDirection.West" />.
            </exception>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.GeographicSpatialReferenceSystemParameters.LatitudeAxis">
      <summary>
            Axis that describes latitude. Defaults is axis with north direction.
            </summary>
      <exception cref="T:System.ArgumentException">
            Thrown from setter if axis direction is not <see cref="F:Aspose.Gis.SpatialReferencing.AxisDirection.North" /> or <see cref="F:Aspose.Gis.SpatialReferencing.AxisDirection.South" />.
            </exception>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.GeographicSpatialReferenceSystemParameters.AxisesOrder">
      <summary>
            Order of axises. Defaults to <see cref="F:Aspose.Gis.SpatialReferencing.GeographicAxisesOrder.LongitudeLatitude" />.
            </summary>
      <exception cref="T:System.ArgumentException"> Thrown in setter when argument is not a valid enum member. </exception>
    </member>
    <member name="T:Aspose.Gis.SpatialReferencing.IdentifiableObject">
      <summary>
            Represents an object that might have EPSG code and name.
            </summary>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.IdentifiableObject.Name">
      <summary>
            Name of this object.
            </summary>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.IdentifiableObject.EpsgCode">
      <summary>
            If this objects identifier is EPSG identifier - return its code. Otherwise - return -1.
            </summary>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.IdentifiableObject.Identifier">
      <summary>
            Identifier of this identifiable object.
            </summary>
    </member>
    <member name="T:Aspose.Gis.SpatialReferencing.Identifier">
      <summary>
            Represents an identifier - a reference to external description of an object.
            If you create a SRS from WKT, <see cref="T:Aspose.Gis.SpatialReferencing.Identifier" /> corresponds to "AUTHORITY" keyword.
            </summary>
      <example>
            WGS 84 Spatial reference system have EPSG code 4326, so it might contain identifier:
            <code>new <see cref="T:Aspose.Gis.SpatialReferencing.Identifier" /> { <see cref="P:Aspose.Gis.SpatialReferencing.Identifier.AuthorityName" /> = "EPSG", <see cref="P:Aspose.Gis.SpatialReferencing.Identifier.AuthorityUniqueIdentifier" /> = 4326 };</code>
            WGS 84 Ellipsoid have EPSG code 7030, and it might contain identifier:
            <code>new <see cref="T:Aspose.Gis.SpatialReferencing.Identifier" /> { <see cref="P:Aspose.Gis.SpatialReferencing.Identifier.AuthorityName" /> = "EPSG", <see cref="P:Aspose.Gis.SpatialReferencing.Identifier.AuthorityUniqueIdentifier" /> = 7030 };</code></example>
    </member>
    <member name="M:Aspose.Gis.SpatialReferencing.Identifier.Epsg(System.Int32)">
      <summary>
            Creates new Identifier that represents EPSG identifier with code <paramref name="epsgCode" />.
            </summary>
      <param name="epsgCode"> Epsg code. </param>
      <returns>
            New identifier with <see cref="P:Aspose.Gis.SpatialReferencing.Identifier.AuthorityName" /> "EPSG" and <see cref="P:Aspose.Gis.SpatialReferencing.Identifier.AuthorityUniqueIdentifier" /><paramref name="epsgCode" />.
            If <paramref name="epsgCode" /> is less then 0 - return <see langword="null" />;
            </returns>
    </member>
    <member name="M:Aspose.Gis.SpatialReferencing.Identifier.#ctor(System.String,System.String)">
      <summary>
            Create new instance.
            </summary>
      <param name="authorityName">
        <see cref="P:Aspose.Gis.SpatialReferencing.Identifier.AuthorityName" />. </param>
      <param name="authorityUniqueIdentifier">
        <see cref="P:Aspose.Gis.SpatialReferencing.Identifier.AuthorityUniqueIdentifier" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="authorityName" /> or <paramref name="authorityUniqueIdentifier" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.Identifier.AuthorityName">
      <summary>
            A name of authority, which gave an <see cref="P:Aspose.Gis.SpatialReferencing.Identifier.AuthorityUniqueIdentifier" />.
            </summary>
      <example>EPSG</example>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.Identifier.AuthorityUniqueIdentifier">
      <summary>
            A unique way to represent an object within a <see cref="P:Aspose.Gis.SpatialReferencing.Identifier.AuthorityName" />.
            </summary>
      <example>4326</example>
    </member>
    <member name="M:Aspose.Gis.SpatialReferencing.Identifier.GetEpsgCode">
      <summary>
            If this object represents a valid EPSG identifier (e.g. - authority name is "EPSG" and authority unique identifier is integer) -
            return it. Otherwise - return -1.
            </summary>
      <returns>
            EPSG identifier represented by this object. If this object doesn't represent an EPSG identifier - return -1.
            </returns>
    </member>
    <member name="M:Aspose.Gis.SpatialReferencing.Identifier.Equals(System.Object)">
      <summary>Determines whether the specified object is equal to the current object.</summary>
      <param name="obj">The object to compare with the current object. </param>
      <returns>true if the specified object is equal to the current object; otherwise, false.</returns>
    </member>
    <member name="M:Aspose.Gis.SpatialReferencing.Identifier.Equals(Aspose.Gis.SpatialReferencing.Identifier)">
      <summary>Indicates whether the current object is equal to another object of the same type.</summary>
      <param name="other">An object to compare with this object.</param>
      <returns>true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.</returns>
    </member>
    <member name="M:Aspose.Gis.SpatialReferencing.Identifier.GetHashCode">
      <summary>Serves as the default hash function. </summary>
      <returns>A hash code for the current object.</returns>
    </member>
    <member name="M:Aspose.Gis.SpatialReferencing.Identifier.op_Equality(Aspose.Gis.SpatialReferencing.Identifier,Aspose.Gis.SpatialReferencing.Identifier)">
      <summary>
            Implements the operator ==.
            </summary>
      <param name="a">The A instance.</param>
      <param name="b">The B instance.</param>
      <returns>
            The result of the operator.
            </returns>
    </member>
    <member name="M:Aspose.Gis.SpatialReferencing.Identifier.op_Inequality(Aspose.Gis.SpatialReferencing.Identifier,Aspose.Gis.SpatialReferencing.Identifier)">
      <summary>
            Implements the operator !=.
            </summary>
      <param name="a">The A instance.</param>
      <param name="b">The B instance.</param>
      <returns>
            The result of the operator.
            </returns>
    </member>
    <member name="T:Aspose.Gis.SpatialReferencing.LocalDatum">
      <summary>
            Indicates method used for measurements in local spatial reference system.
            </summary>
    </member>
    <member name="M:Aspose.Gis.SpatialReferencing.LocalDatum.#ctor(System.String,System.Int32,Aspose.Gis.SpatialReferencing.Identifier)">
      <summary>
            Create new instance.
            </summary>
      <param name="name"> name of datum. </param>
      <param name="datumType"> integer number, representing type of datum. </param>
      <param name="identifier"> identifier of datum. </param>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.LocalDatum.DatumType">
      <summary>
            An integer number, indicating measurement method that had been used.
            </summary>
    </member>
    <member name="T:Aspose.Gis.SpatialReferencing.LocalSpatialReferenceSystem">
      <summary>
            Local SRS related coordinates to some object, not earth.
            </summary>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.LocalSpatialReferenceSystem.Type">
      <summary>
            Return <see cref="F:Aspose.Gis.SpatialReferencing.SpatialReferenceSystemType.Local" />.
            </summary>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.LocalSpatialReferenceSystem.AsLocal">
      <summary>
            Return this.
            </summary>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.LocalSpatialReferenceSystem.LocalDatum">
      <summary>
            Datum, that describes measurements method.
            </summary>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.LocalSpatialReferenceSystem.Unit">
      <summary>
            Unit of this SRS.
            </summary>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.LocalSpatialReferenceSystem.DimensionsCount">
      <summary>
            Number of dimensions in this SRS.
            </summary>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.LocalSpatialReferenceSystem.HasPrimeMeridian">
      <summary>
            Returns <see langword="false" />, since Local SRS doesn't have prime meridian.
            </summary>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.LocalSpatialReferenceSystem.PrimeMeridian">
      <summary>
            Throws <see cref="T:System.InvalidOperationException" />, since Local SRS doesn't have prime meridian.
            </summary>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.LocalSpatialReferenceSystem.HasGeographicDatum">
      <summary>
            Returns <see langword="false" />, since Local SRS doesn't have geographic datum.
            </summary>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.LocalSpatialReferenceSystem.GeographicDatum">
      <summary>
            Throws <see cref="T:System.InvalidOperationException" />, since Local SRS doesn't have geographic datum.
            </summary>
    </member>
    <member name="M:Aspose.Gis.SpatialReferencing.LocalSpatialReferenceSystem.Validate(System.String@)">
      <summary>
            Determine if this SRS is valid. See <see cref="M:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.Validate(System.String@)" /> for validity description.
            </summary>
      <param name="errorMessage"> Description of invalidity (if result is <see langword="false" />)</param>
      <returns> If this SRS is valid - <see langword="true" />, otherwise - <see langword="false" />.</returns>
    </member>
    <member name="M:Aspose.Gis.SpatialReferencing.LocalSpatialReferenceSystem.GetAxis(System.Int32)">
      <summary>
            Get <see cref="T:Aspose.Gis.SpatialReferencing.Axis" /> that describes dimension.
            </summary>
      <param name="dimension"> Number of dimension. </param>
      <returns> Axis that describes dimension. </returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="dimension" /> is less then 0 or greater or equals to <see cref="P:Aspose.Gis.SpatialReferencing.LocalSpatialReferenceSystem.DimensionsCount" /></exception>
    </member>
    <member name="M:Aspose.Gis.SpatialReferencing.LocalSpatialReferenceSystem.GetUnit(System.Int32)">
      <summary>
            Get <see cref="P:Aspose.Gis.SpatialReferencing.LocalSpatialReferenceSystem.Unit" /> of dimension.
            </summary>
      <param name="dimension"> Number of dimension. </param>
      <returns> Unit of dimension. </returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="dimension" /> is less then 0 or greater or equals to <see cref="P:Aspose.Gis.SpatialReferencing.LocalSpatialReferenceSystem.DimensionsCount" /></exception>
    </member>
    <member name="M:Aspose.Gis.SpatialReferencing.LocalSpatialReferenceSystem.IsEquivalent(Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
      <summary>
            Detects whether this SRS is equivalent to other SRS. <seealso cref="M:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.IsEquivalent(Aspose.Gis.SpatialReferencing.SpatialReferenceSystem,Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)" />.
            </summary>
      <param name="other">Other SRS.</param>
      <returns>bool value, indicating whether this SRS is equivalent to other SRS.</returns>
    </member>
    <member name="T:Aspose.Gis.SpatialReferencing.NamespaceDoc">
      <summary>
        <c>Aspose.Gis.SpatialReferencing</c> namespace provides classes for working with spatial references (coordinate reference systems).
            </summary>
    </member>
    <member name="T:Aspose.Gis.SpatialReferencing.ParameterType">
      <summary>
            Determines type of parameter in <see cref="T:Aspose.Gis.SpatialReferencing.Projection" />.
            </summary>
    </member>
    <member name="F:Aspose.Gis.SpatialReferencing.ParameterType.Other">
      <summary>
            Type of parameter is unknown or none of the below.
            </summary>
    </member>
    <member name="F:Aspose.Gis.SpatialReferencing.ParameterType.Linear">
      <summary>
            Type of parameter is linear (for example "false_easting").
            </summary>
    </member>
    <member name="F:Aspose.Gis.SpatialReferencing.ParameterType.Angular">
      <summary>
            Type of parameter is angular (for example "longitude_of_origin").
            </summary>
    </member>
    <member name="T:Aspose.Gis.SpatialReferencing.PrimeMeridian">
      <summary>
            PrimeMeridian represents a meridian at which longitude is defined to be 0.
            </summary>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.PrimeMeridian.Greenwich">
      <summary>
            Greenwich meridian.
            </summary>
    </member>
    <member name="M:Aspose.Gis.SpatialReferencing.PrimeMeridian.#ctor(System.String,System.Double,Aspose.Gis.SpatialReferencing.Identifier)">
      <summary> Creates new instance. </summary>
      <param name="name"> Name of this prime meridian. </param>
      <param name="longitude"> Longitude of prime meridian relative to Greenwich in degrees. </param>
      <param name="identifier"> Identifier of prime meridian. </param>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.PrimeMeridian.Longitude">
      <summary>
            Distance from Greenwich meridian to prime meridian in degrees.
            </summary>
    </member>
    <member name="T:Aspose.Gis.SpatialReferencing.ProjectedAxisesOrder">
      <summary>
            Represents order of axises in geographic SRS.
            </summary>
    </member>
    <member name="F:Aspose.Gis.SpatialReferencing.ProjectedAxisesOrder.Invalid">
      <summary>
            Projected SRS is invalid and axises order can not be determined.
            </summary>
    </member>
    <member name="F:Aspose.Gis.SpatialReferencing.ProjectedAxisesOrder.XY">
      <summary>
            Order is (X, Y). (X is horizontal (East, West), Y is vertical (North, South)).
            </summary>
    </member>
    <member name="F:Aspose.Gis.SpatialReferencing.ProjectedAxisesOrder.YX">
      <summary>
            Order is (Y, X). (X is horizontal axis (East, West), Y is vertical axis (North, South)).
            </summary>
    </member>
    <member name="T:Aspose.Gis.SpatialReferencing.ProjectedSpatialReferenceSystem">
      <summary>
            Projected SRS is a result of application a projection to geographic SRS.
            A projected SRS can be two dimensional or three dimensional.
            If projected SRS is three dimensional, then it is actually a compound SRS of two dimensional projected SRS and one dimensional vertical SRS.
            </summary>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.ProjectedSpatialReferenceSystem.Type">
      <summary>
            Returns <see cref="F:Aspose.Gis.SpatialReferencing.SpatialReferenceSystemType.Projected" />.
            </summary>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.ProjectedSpatialReferenceSystem.AsProjected">
      <summary>
            Return this.
            </summary>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.ProjectedSpatialReferenceSystem.DimensionsCount">
      <summary>
            Returns dimensions count in this SRS. For projected SRS this can be:
            two - if this is single projected SRS.
            three - if this is compound SRS, which consists of single, two dimensional, projected SRS and vertical SRS, that adds third dimension.
            </summary>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.ProjectedSpatialReferenceSystem.HasPrimeMeridian">
      <summary>
            Returns true, since projected SRS always have prime meridian.
            </summary>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.ProjectedSpatialReferenceSystem.HasGeographicDatum">
      <summary>
            Returns true, since projected SRS always have prime meridian.
            </summary>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.ProjectedSpatialReferenceSystem.Base">
      <summary>
            Geographic SRS to which <see cref="P:Aspose.Gis.SpatialReferencing.ProjectedSpatialReferenceSystem.Projection" /> was applied to get this SRS.
            </summary>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.ProjectedSpatialReferenceSystem.Projection">
      <summary>
            Projection, that was applied to <see cref="P:Aspose.Gis.SpatialReferencing.ProjectedSpatialReferenceSystem.Base" /> to get this SRS.
            </summary>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.ProjectedSpatialReferenceSystem.LinearUnit">
      <summary>
            Unit, that is used for linear dimensions in this SRS and for linear parameters of <see cref="P:Aspose.Gis.SpatialReferencing.ProjectedSpatialReferenceSystem.Projection" />.
            </summary>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.ProjectedSpatialReferenceSystem.AngularUnit">
      <summary>
            Unit, that is used for angular values in this SRS and for angular parameters of <see cref="P:Aspose.Gis.SpatialReferencing.ProjectedSpatialReferenceSystem.Projection" />.
            Matches angular unit of <see cref="P:Aspose.Gis.SpatialReferencing.ProjectedSpatialReferenceSystem.Base" />.
            </summary>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.ProjectedSpatialReferenceSystem.AxisesOrder">
      <summary>
            Order of axises in this SRS.
            If this SRS is not valid and has wrong axises directions, <see cref="F:Aspose.Gis.SpatialReferencing.ProjectedAxisesOrder.Invalid" /> is returned.
            </summary>
    </member>
    <member name="T:Aspose.Gis.SpatialReferencing.ProjectedSpatialReferenceSystemParameters">
      <summary>
            Parameters to create projected SRS. Some of parameters have defaults.
            Some parameters have reasonable defaults, so you don't have to assign only them.
            If you assign <see langword="null" /> to those parameters, a default value will be used.
            <see cref="P:Aspose.Gis.SpatialReferencing.ProjectedSpatialReferenceSystemParameters.ProjectionMethodName" /> and <see cref="P:Aspose.Gis.SpatialReferencing.ProjectedSpatialReferenceSystemParameters.Base" /> don't have defaults -
            you have to assign some non <see langword="null" /> value to this properties.
            </summary>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.ProjectedSpatialReferenceSystemParameters.Name">
      <summary>
            Name of projected SRS. Default is "Unnamed".
            </summary>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.ProjectedSpatialReferenceSystemParameters.LinearUnit">
      <summary>
            Units to be used in this SRS. Default is <see cref="P:Aspose.Gis.SpatialReferencing.Unit.Meter" />.
            </summary>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.ProjectedSpatialReferenceSystemParameters.Base">
      <summary>
            Base geographic SRS (SRS to which projection is applied).
            You MUST set this property to not <see langword="null" /> value in order to create valid SRS,
            this property does not have any default.
            </summary>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.ProjectedSpatialReferenceSystemParameters.XAxis">
      <summary>
            Axis that describes X (horizontal) dimension. Defaults to axis with east direction.
            </summary>
      <exception cref="T:System.ArgumentException">
            Thrown from setter if axis direction is not <see cref="F:Aspose.Gis.SpatialReferencing.AxisDirection.East" /> or <see cref="F:Aspose.Gis.SpatialReferencing.AxisDirection.West" />.
            </exception>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.ProjectedSpatialReferenceSystemParameters.YAxis">
      <summary>
            Axis that describes Y (vertical) dimension. Defaults to axis with north direction.
            </summary>
      <exception cref="T:System.ArgumentException">
            Thrown from setter if axis direction is not <see cref="F:Aspose.Gis.SpatialReferencing.AxisDirection.North" /> or <see cref="F:Aspose.Gis.SpatialReferencing.AxisDirection.South" />.
            </exception>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.ProjectedSpatialReferenceSystemParameters.AxisesOrder">
      <summary>
            Order of axises. Defaults to <see cref="F:Aspose.Gis.SpatialReferencing.ProjectedAxisesOrder.XY" />.
            </summary>
      <exception cref="T:System.ArgumentException"> Thrown in setter when argument is not a valid enum member. </exception>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.ProjectedSpatialReferenceSystemParameters.ProjectionMethodName">
      <summary>
            Name of projection method. There is no default and you MUST set this parameter to not <see langword="null" /> value, since
            projected SRS with no projection name is useless.
            </summary>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.ProjectedSpatialReferenceSystemParameters.ProjectionMethodIdentifier">
      <summary>
            Identifier of projection method. There is no default value, you might set this parameter to not <see langword="null" /> value,
            if you want attach identifier to projection. If you do so - its up to you to ensure that identifier in consistent projection method
            name (projection method name will not change when you set this property).
            </summary>
    </member>
    <member name="M:Aspose.Gis.SpatialReferencing.ProjectedSpatialReferenceSystemParameters.AddProjectionParameter(System.String,System.Double)">
      <summary>
            Adds projection parameter to this SRS. If parameter with such name already was added - update it.
            </summary>
      <param name="parameterName"> Name of projection parameter. </param>
      <param name="value">
            Value of parameter. Unit of value should be in <see cref="P:Aspose.Gis.SpatialReferencing.ProjectedSpatialReferenceSystemParameters.LinearUnit" />
            or <see cref="P:Aspose.Gis.SpatialReferencing.GeographicSpatialReferenceSystem.AngularUnit" /> of <see cref="P:Aspose.Gis.SpatialReferencing.ProjectedSpatialReferenceSystemParameters.Base" />.
            </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="parameterName" /> is null. </exception>
    </member>
    <member name="M:Aspose.Gis.SpatialReferencing.ProjectedSpatialReferenceSystemParameters.GetProjectionParameter(System.String)">
      <summary>
            Gets projection parameter with specified name.
            </summary>
      <param name="parameterName"> Name of parameter. </param>
      <returns> Projection parameter value. </returns>
      <exception cref="T:System.ArgumentNullException"> Parameter name is null. </exception>
      <exception cref="T:System.InvalidOperationException"> Parameter with such name is not set. </exception>
    </member>
    <member name="T:Aspose.Gis.SpatialReferencing.Projection">
      <summary>
            Represents a projection method with parameters, that transforms (longitude, latitude) to (x, y).
            </summary>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.Projection.LinearParametersUnit">
      <summary>
            Unit that is used for linear parameters.
            </summary>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.Projection.AngularParametersUnit">
      <summary>
            Unit that is used for angular parameters.
            </summary>
    </member>
    <member name="M:Aspose.Gis.SpatialReferencing.Projection.GetParameterValue(System.String,Aspose.Gis.SpatialReferencing.ParameterType)">
      <summary>
            Gets parameter with specified name of this projection.
            </summary>
      <param name="name"> Name of parameter. </param>
      <param name="type">
            Type of parameter.
            Defines unit factor that will be deapplied:
            if type is <see cref="F:Aspose.Gis.SpatialReferencing.ParameterType.Linear" /> then <see cref="P:Aspose.Gis.SpatialReferencing.Projection.LinearParametersUnit" /> will be deapplied and result will be in meters.
            if type is <see cref="F:Aspose.Gis.SpatialReferencing.ParameterType.Angular" /> then <see cref="P:Aspose.Gis.SpatialReferencing.Projection.AngularParametersUnit" /> will be deapplied and result will be in radians.
            if type is <see cref="F:Aspose.Gis.SpatialReferencing.ParameterType.Other" /> parameter value will be returned 'as is'.
            </param>
      <exception cref="T:System.ArgumentNullException"> Argument is null. </exception>
      <exception cref="T:System.InvalidOperationException"> There is no parameter with this name. </exception>
      <returns>Parameter with specified name.</returns>
    </member>
    <member name="M:Aspose.Gis.SpatialReferencing.Projection.TryGetParameterValue(System.String,Aspose.Gis.SpatialReferencing.ParameterType)">
      <summary>
            Gets parameter with specified name of this projection. If there are no such parameter - returns <see langword="null" />.
            </summary>
      <param name="name"> Name of parameter. </param>
      <param name="type">
            Type of parameter.
            Defines unit factor that will be deapplied:
            if type is <see cref="F:Aspose.Gis.SpatialReferencing.ParameterType.Linear" /> then <see cref="P:Aspose.Gis.SpatialReferencing.Projection.LinearParametersUnit" /> will be deapplied and result will be in meters.
            if type is <see cref="F:Aspose.Gis.SpatialReferencing.ParameterType.Angular" /> then <see cref="P:Aspose.Gis.SpatialReferencing.Projection.AngularParametersUnit" /> will be deapplied and result will be in radians.
            if type is <see cref="F:Aspose.Gis.SpatialReferencing.ParameterType.Other" /> parameter value will be returned 'as is'.
            </param>
      <exception cref="T:System.ArgumentNullException"> Argument is null. </exception>
      <returns>Parameter with specified name or <see langword="null" /> if it is not present.</returns>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.Projection.ParametersNames">
      <summary>
            Gets an enumerable collection of names of parameters given to this projection
            </summary>
    </member>
    <member name="M:Aspose.Gis.SpatialReferencing.Projection.IsEquivalent(Aspose.Gis.SpatialReferencing.Projection)">
      <summary>
            Determines is two projections are equivalent. Equivalent projections map (longitude, latitude) to (x, y) in the
            same way.
            </summary>
      <param name="other">Other projection</param>
      <returns>
        <see langword="true" /> if projections are equivalent, <see langword="false" /> otherwise.</returns>
    </member>
    <member name="T:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem">
      <summary>
            Spatial reference system maps coordinates to places on Earth.
            There are different types of SRS, see <see cref="P:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.Type" />.
            What's more, if type of SRS is <see cref="F:Aspose.Gis.SpatialReferencing.SpatialReferenceSystemType.Geographic" /> or
            <see cref="F:Aspose.Gis.SpatialReferencing.SpatialReferenceSystemType.Projected" />, SRS can be compound or single, see <see cref="P:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.IsCompound" />.
            </summary>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.Wgs84">
      <summary>
            WGS 84 (EPSG:4326) spatial reference system.
            </summary>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.WebMercator">
      <summary>
            Web Mercator (EPSG:3857) spatial reference system.
            </summary>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.Wgs72">
      <summary>
            WGS 72 (EPSG:4322) spatial reference system.
            </summary>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.Nad83">
      <summary>
            NAD 83 (EPSG:4269) spatial reference system.
            </summary>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.Etrs89">
      <summary>
            ETRS 89 (EPSG:4258) spatial reference system.
            </summary>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.Etrs89LambertConformalConic">
      <summary>
            ETRS 89 / Lambert Conformal Conic (EPSG:3034) spatial reference system.
            </summary>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.Etrs89LambertAzimuthalEqualArea">
      <summary>
            ETRS 89 / ETRS Lambert Azimuthal Equal Area (EPSG:3035) spatial reference system.
            </summary>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.Osgb36">
      <summary>
            OSGB 36 (EPSG:4277) spatial reference system.
            </summary>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.Osgb36BritishNationalGrid">
      <summary>
            OSGB 36 / British National Grid (EPSG:27700) spatial reference system.
            </summary>
    </member>
    <member name="M:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.IsEquivalent(Aspose.Gis.SpatialReferencing.SpatialReferenceSystem,Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
      <summary>
            Determines if two SRS are equivalent.
            Same coordinates of equivalent SRS match same place on Earth.
            Some parameters of equivalent SRS can be different, for example <see cref="P:Aspose.Gis.SpatialReferencing.IdentifiableObject.Name" />.
            </summary>
      <param name="srs1"> First SRS. </param>
      <param name="srs2"> Second SRS. </param>
      <returns> bool value, indicating whether two SRS are equivalent. </returns>
    </member>
    <member name="M:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.TryCreateFromWkt(System.String,Aspose.Gis.SpatialReferencing.SpatialReferenceSystem@)">
      <summary>
            Creates a new <c>SpatialReferenceSystem</c> based on WKT (Well-Known Text) string.
            </summary>
      <param name="wkt"> WKT string. </param>
      <param name="value">
            When this methods returns <see langword="true" />, contains an SRS created from WKT; otherwise,
            contains <see langword="null" />.
            </param>
      <returns>
        <see langword="true" /> if SRS was successfully created; <see langword="false" /> otherwise.</returns>
      <seealso cref="M:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.CreateFromWkt(System.String)" />
    </member>
    <member name="M:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.CreateFromWkt(System.String)">
      <summary>
            Creates a new <c>SpatialReferenceSystem</c> based on WKT (Well-Known Text) string.
            </summary>
      <param name="wkt"> WKT string. </param>
      <returns> New <c>SpatialReferenceSystem</c>. </returns>
      <exception cref="T:System.ArgumentNullException"> Argument is <see langword="null" />. </exception>
      <exception cref="T:System.FormatException"> Hierarchy of wkt values, their order or types, is wrong. </exception>
      <exception cref="T:System.NotSupportedException"> WKT root element is not supported (for examples it is FITTED_CS). </exception>
      <seealso cref="M:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.TryCreateFromWkt(System.String,Aspose.Gis.SpatialReferencing.SpatialReferenceSystem@)" />
    </member>
    <member name="M:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.CreateFromEpsg(System.Int32)">
      <summary>
            Create a spatial reference system based the specified EPSG code.
            </summary>
      <param name="epsg">EPSG code of the spatial reference system.</param>
      <returns>A new spatial reference system with the specified EPSG code.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException"> Argument is not positive. </exception>
      <exception cref="T:System.NotSupportedException">The specified EPSG code is unknown.</exception>
      <seealso cref="M:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.TryCreateFromEpsg(System.Int32,Aspose.Gis.SpatialReferencing.SpatialReferenceSystem@)" />
    </member>
    <member name="M:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.TryCreateFromEpsg(System.Int32,Aspose.Gis.SpatialReferencing.SpatialReferenceSystem@)">
      <summary>
            Create a spatial reference system based the specified EPSG code.
            </summary>
      <param name="epsg">EPSG code of the spatial reference system.</param>
      <param name="value">
            When this methods returns <see langword="true" />, contains a SRS with the specified EPSG code; otherwise,
            contains <see langword="null" />.
            </param>
      <returns>
        <see langword="true" /> if specified EPSG code is known and SRS was created; <see langword="false" /> otherwise.</returns>
      <seealso cref="M:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.CreateFromEpsg(System.Int32)" />
    </member>
    <member name="M:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.CreateGeographic(Aspose.Gis.SpatialReferencing.GeographicSpatialReferenceSystemParameters,Aspose.Gis.SpatialReferencing.Identifier)">
      <summary>
            Create geographic SRS from custom parameters.
            </summary>
      <param name="parameters"> Parameters to create from. </param>
      <param name="identifier">
            Identifier, that will be attached to SRS. Attaching an Identifier will not modify other SRS parameters.
            Its up to you to ensure consistency of identifier and SRS parameters.
            </param>
      <returns> New Geographic SRS. </returns>
    </member>
    <member name="M:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.CreateGeocentric(Aspose.Gis.SpatialReferencing.GeocentricSpatialReferenceSystemParameters,Aspose.Gis.SpatialReferencing.Identifier)">
      <summary>
            Create geocentric SRS from custom parameters.
            </summary>
      <param name="parameters"> Parameters to create from. </param>
      <param name="identifier">
            Identifier, that will be attached to SRS. Attaching an Identifier will not modify other SRS parameters.
            Its up to you to ensure consistency of identifier and SRS parameters.
            </param>
      <returns> New Geocentric SRS. </returns>
    </member>
    <member name="M:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.CreateProjected(Aspose.Gis.SpatialReferencing.ProjectedSpatialReferenceSystemParameters,Aspose.Gis.SpatialReferencing.Identifier)">
      <summary>
            Create projected SRS from custom parameters.
            </summary>
      <param name="parameters"> Parameters to create from. </param>
      <param name="identifier">
            Identifier, that will be attached to SRS. Attaching an Identifier will not modify other SRS parameters.
            Its up to you to ensure consistency of identifier and SRS parameters.
            </param>
      <returns> New Projected SRS. </returns>
      <exception cref="T:System.InvalidOperationException">
            Base SRS in parameters is <see langword="null" />.
            Projection method in parameters is <see langword="null" />.
            </exception>
    </member>
    <member name="M:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.CreateVertical(System.String,Aspose.Gis.SpatialReferencing.VerticalDatum,Aspose.Gis.SpatialReferencing.Unit,Aspose.Gis.SpatialReferencing.Axis,Aspose.Gis.SpatialReferencing.Identifier)">
      <summary>
            Create vertical SRS.
            </summary>
      <param name="name"> Name of SRS. If <see langword="null" />. </param>
      <param name="verticalDatum"> Datum to be used in SRS. </param>
      <param name="verticalUnit">
            Unit to be used in SRS. If <see langword="null" />, <see cref="P:Aspose.Gis.SpatialReferencing.Unit.Meter" /> will be used.
            </param>
      <param name="verticalAxis">
            Axis with "up" or "down" direction, to be used in SRS. If <see langword="null" />, axis with up direction will be used.
            </param>
      <param name="identifier">
            Identifier, that will be attached to SRS. Attaching an Identifier will not modify other SRS parameters.
            Its up to you to ensure consistency of identifier and SRS parameters.
            </param>
      <returns> New Vertical SRS. </returns>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="verticalAxis" /> direction is not up or down. </exception>
      <exception cref="T:System.ArgumentNullException"> Some of required parameters is null. </exception>
    </member>
    <member name="M:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.CreateCompound(System.String,Aspose.Gis.SpatialReferencing.SpatialReferenceSystem,Aspose.Gis.SpatialReferencing.SpatialReferenceSystem,Aspose.Gis.SpatialReferencing.Identifier)">
      <summary>
            Create compound SRS.
            </summary>
      <param name="name"> Name of new SRS. </param>
      <param name="head"> Head SRS of new SRS. </param>
      <param name="tail"> Tail SRS of new SRS. </param>
      <param name="identifier">
            Identifier, that will be attached to SRS. Attaching an Identifier will not modify other SRS parameters.
            Its up to you to ensure consistency of identifier and SRS parameters.
            </param>
      <returns> New Compound SRS.</returns>
      <exception cref="T:System.ArgumentNullException"> Any argument except <paramref name="identifier" /> is <see langword="null" />. </exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="head" /> or <paramref name="tail" /> are compound SRS themselves. </exception>
    </member>
    <member name="M:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.CreateLocal(System.String,Aspose.Gis.SpatialReferencing.LocalDatum,Aspose.Gis.SpatialReferencing.Unit,System.Collections.Generic.ICollection{Aspose.Gis.SpatialReferencing.Axis},Aspose.Gis.SpatialReferencing.Identifier)">
      <summary>
            Create local SRS.
            </summary>
      <param name="name"> Name of SRS. </param>
      <param name="datum"> Datum to be used in SRS. </param>
      <param name="unit"> Unit to be used in SRS. </param>
      <param name="axises"> Axises to be used in SRS. Must be non empty</param>
      <param name="identifier">
            Identifier, that will be attached to SRS. Attaching an Identifier will not modify other SRS parameters.
            Its up to you to ensure consistency of identifier and SRS parameters.
            </param>
      <returns> New Local SRS. </returns>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="axises" /> is empty. </exception>
      <exception cref="T:System.ArgumentNullException"> Any argument, except <paramref name="identifier" /> is null. </exception>
    </member>
    <member name="M:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.Validate(System.String@)">
      <summary>
            Determine if this SRS is valid.
            </summary>
      <remarks>
            Valid SRS must have valid ellipsoid.
            - Geographic SRS must have exactly one East/West axis, exactly one North/South axis, and optional Up/Down axis
              (optional axis is present when geographic SRS is a compound of 2D geographic SRS and vertical SRS).
            - Projected SRS must have exactly one East/West axis, exactly one North/South axis, and optional Up/Down axis
              (optional axis is present when projected SRS is a compound of 2D geographic SRS and vertical SRS).
            - Geocentric SRS must have exactly one East/West axis, exactly one North/South axis and exactly one Other axis.
            - Vertical SRS must have exactly one Up/Down axis.
            - Local SRS must have at least one axis. Axises directions doesn't meter.
            - Compound SRS must be a combination of a valid Geographic/Projected and a valid Vertical SRS.
            </remarks>
      <param name="errorMessage"> If method return <see langword="false" />, then this is description of invalidity. </param>
      <returns>
        <see langword="true" /> if SRS is valid, <see langword="false" /> otherwise. </returns>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.IsValid">
      <summary>
            Same as <see cref="M:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.Validate(System.String@)" />, but don't return error message.
            </summary>
      <returns>
        <see langword="true" /> if SRS is valid, <see langword="false" /> otherwise. </returns>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.Type">
      <summary>
            Gets type of this SRS, see <see cref="T:Aspose.Gis.SpatialReferencing.SpatialReferenceSystemType" />.
            </summary>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.IsCompound">
      <summary>
            Returns whether this SRS is compound (a union of two SRS).
            Following combinations of SRS in compound SRS are considered valid:
            Geographic SRS + Vertical SRS, in this case type of compound SRS will be <see cref="F:Aspose.Gis.SpatialReferencing.SpatialReferenceSystemType.Geographic" />.
            Projected SRS + Vertical SRS, in this case type of compound SRS will be <see cref="F:Aspose.Gis.SpatialReferencing.SpatialReferenceSystemType.Projected" />.
            If combination of SRSs differs, type of compound SRS will be <see cref="F:Aspose.Gis.SpatialReferencing.SpatialReferenceSystemType.Unknown" />.
            </summary>
      <remarks>
            In WKT this is COMPD_CS.
            </remarks>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.IsSingle">
      <summary>
            Returns whether this SRS is single (not a union of two SRS).
            </summary>
      <remarks>
            In WKT this is any coordinate system, except COMPD_CS.
            </remarks>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.AsGeographic">
      <summary>
            Returns this SRS converted to <see cref="T:Aspose.Gis.SpatialReferencing.GeographicSpatialReferenceSystem" />.
            Use <see cref="P:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.Type" /> to find out if conversion is possible.
            </summary>
      <exception cref="T:System.InvalidOperationException">
            Conversion is not possible.
            </exception>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.AsProjected">
      <summary>
            Returns this SRS converted to <see cref="T:Aspose.Gis.SpatialReferencing.ProjectedSpatialReferenceSystem" />.
            Use <see cref="P:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.Type" /> to find out if conversion is possible.
            </summary>
      <exception cref="T:System.InvalidOperationException">
            Conversion is not possible.
            </exception>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.AsGeocentric">
      <summary>
            Returns this SRS converted to <see cref="T:Aspose.Gis.SpatialReferencing.GeocentricSpatialReferenceSystem" />.
            Use <see cref="P:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.Type" /> to find out if conversion is possible.
            </summary>
      <exception cref="T:System.InvalidOperationException">
            Conversion is not possible.
            </exception>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.AsVertical">
      <summary>
            Returns this SRS converted to <see cref="T:Aspose.Gis.SpatialReferencing.VerticalSpatialReferenceSystem" />.
            Use <see cref="P:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.Type" /> to find out if conversion is possible.
            </summary>
      <exception cref="T:System.InvalidOperationException">
            Conversion is not possible.
            </exception>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.AsLocal">
      <summary>
            Returns this SRS converted to <see cref="T:Aspose.Gis.SpatialReferencing.LocalSpatialReferenceSystem" />.
            Use <see cref="P:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.Type" /> to find out if conversion is possible.
            </summary>
      <exception cref="T:System.InvalidOperationException">
            Conversion is not possible.
            </exception>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.AsCompound">
      <summary>
            Returns this SRS converted to <see cref="T:Aspose.Gis.SpatialReferencing.CompoundSpatialReferenceSystem" />.
            Use <see cref="P:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.IsCompound" /> to find out if conversion is possible.
            </summary>
      <exception cref="T:System.InvalidOperationException">
            Conversion is not possible.
            </exception>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.DimensionsCount">
      <summary>
            Returns number of dimensions in this SRS.
            </summary>
    </member>
    <member name="M:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.GetAxis(System.Int32)">
      <summary>
            Get <see cref="T:Aspose.Gis.SpatialReferencing.Axis" /> that describes dimension.
            </summary>
      <param name="dimension"> Number of dimension. </param>
      <returns> Axis that describes dimension. </returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="dimension" /> is less then 0 or greater or equals to <see cref="P:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.DimensionsCount" /></exception>
    </member>
    <member name="M:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.GetUnit(System.Int32)">
      <summary>
            Get <see cref="T:Aspose.Gis.SpatialReferencing.Unit" /> of dimension.
            </summary>
      <param name="dimension"> Number of dimension. </param>
      <returns> Unit of dimension. </returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="dimension" /> is less then 0 or greater or equals to <see cref="P:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.DimensionsCount" /></exception>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.HasPrimeMeridian">
      <summary>
            Returns whether this SRS has prime meridian.
            This is true for every geographic, projected and geocentric SRS.
            </summary>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.PrimeMeridian">
      <summary>
            Returns prime meridian of this SRS.
            </summary>
      <exception cref="T:System.InvalidOperationException">
            This SRS does not have prime meridian. <see cref="P:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.HasPrimeMeridian" /></exception>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.HasGeographicDatum">
      <summary>
            Determines whether this SRS has geographic datum.
            This is true for every geographic, projected and geocentric SRS.
            </summary>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.GeographicDatum">
      <summary>
            Returns geographic datum of this SRS.
            </summary>
      <exception cref="T:System.InvalidOperationException">
            This SRS does not have geographic datum. <see cref="P:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.HasGeographicDatum" /></exception>
    </member>
    <member name="M:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.ExportToWkt">
      <summary>
            Returns representation of this SRS as WKT string.
            The result WKT string will match OGC 01-009 specification, usually named "WKT1".
            </summary>
      <returns> WKT representation of this SRS. </returns>
      <exception cref="T:System.InvalidOperationException">
            This SRS representation would contain <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.PositiveInfinity" /> or <see cref="F:System.Double.NegativeInfinity" />.
            </exception>
    </member>
    <member name="M:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.TryCreateTransformationTo(Aspose.Gis.SpatialReferencing.SpatialReferenceSystem,Aspose.Gis.SpatialReferencing.SpatialReferenceSystemTransformation@)">
      <summary>
            Creates transformation from this <c>SpatialReferenceSystem</c> to another <c>SpatialReferenceSystem</c>.
            </summary>
      <param name="targetSrs">Another <c>SpatialReferenceSystem</c>.</param>
      <returns>Transformation from this <c>SpatialReferenceSystem</c> to another <c>SpatialReferenceSystem</c>.</returns>
      <returns>
        <see langword="true" /> if transformation was created successfully; <see langword="false" /> otherwise.</returns>
      <param name="value">
            When this methods returns <see langword="true" />, contains a transformation; otherwise, contains <see langword="null" />.
            </param>
      <seealso cref="M:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.CreateTransformationTo(Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)" />
    </member>
    <member name="M:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.CreateTransformationTo(Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
      <summary>
            Creates transformation from this <c>SpatialReferenceSystem</c> to another <c>SpatialReferenceSystem</c>.
            </summary>
      <param name="targetSrs">Another <c>SpatialReferenceSystem</c>.</param>
      <returns>Transformation from this <c>SpatialReferenceSystem</c> to another <c>SpatialReferenceSystem</c>.</returns>
      <exception cref="T:System.NotSupportedException">
            Transformation between this <c>SpatialReferenceSystem</c> and argument is not supported.
            This can happen, because one of the projections is not supported, or one of the systems is <see cref="T:Aspose.Gis.SpatialReferencing.VerticalSpatialReferenceSystem" /> or
            <see cref="T:Aspose.Gis.SpatialReferencing.LocalSpatialReferenceSystem" />.
            </exception>
      <exception cref="T:Aspose.Gis.SpatialReferencing.TransformationException">
            Transformation is failed to be created because of wrong parameters inside <c>SpatialReferenceSystem</c>.
            </exception>
      <seealso cref="M:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.TryCreateTransformationTo(Aspose.Gis.SpatialReferencing.SpatialReferenceSystem,Aspose.Gis.SpatialReferencing.SpatialReferenceSystemTransformation@)" />
    </member>
    <member name="M:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.IsEquivalent(Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
      <summary>
            Detects whether this SRS is equivalent to other SRS. <seealso cref="M:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.IsEquivalent(Aspose.Gis.SpatialReferencing.SpatialReferenceSystem,Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)" />.
            </summary>
      <param name="other">Other SRS.</param>
      <returns>bool value, indicating whether this SRS is equivalent to other SRS.</returns>
    </member>
    <member name="T:Aspose.Gis.SpatialReferencing.SpatialReferenceSystemTransformation">
      <summary>
            Spatial reference system transformation transforms geometries from source spatial reference system to target spatial reference system.
            </summary>
    </member>
    <member name="M:Aspose.Gis.SpatialReferencing.SpatialReferenceSystemTransformation.#ctor(Aspose.Gis.SpatialReferencing.SpatialReferenceSystem,Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
      <summary>
            Creates new instance.
            </summary>
      <param name="sourceSrs"> Source <see cref="T:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem" />. </param>
      <param name="targetSrs"> Target <see cref="T:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem" />. </param>
      <exception cref="T:System.NotSupportedException">
            Transformation between given spatial reference systems is not supported.
            </exception>
      <exception cref="T:Aspose.Gis.SpatialReferencing.TransformationException"> Transformation is failed to be created because of wrong parameters inside SRS. </exception>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.SpatialReferenceSystemTransformation.Source">
      <summary>
            Source spatial reference system.
            </summary>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.SpatialReferenceSystemTransformation.Target">
      <summary>
            Target spatial reference system.
            </summary>
    </member>
    <member name="M:Aspose.Gis.SpatialReferencing.SpatialReferenceSystemTransformation.Transform(Aspose.Gis.Geometries.IGeometry)">
      <summary>
            Transforms geometry from source spatial reference system to target spatial reference system.
            </summary>
      <param name="geometry"> Geometry to transform. </param>
      <returns> New geometry in target spatial reference system. </returns>
      <exception cref="T:System.ArgumentNullException"> Geometry is <see langword="null" />. </exception>
      <exception cref="T:System.ArgumentException">
            Geometries <see cref="P:Aspose.Gis.Geometries.IGeometry.SpatialReferenceSystem" /> is not <see langword="null" /> and doesn't equivalent to
            <see cref="P:Aspose.Gis.SpatialReferencing.SpatialReferenceSystemTransformation.Source" /></exception>
      <exception cref="T:Aspose.Gis.SpatialReferencing.TransformationException"> Transformation failed. </exception>
    </member>
    <member name="T:Aspose.Gis.SpatialReferencing.SpatialReferenceSystemType">
      <summary>
            Represents type of spatial reference system.
            </summary>
    </member>
    <member name="F:Aspose.Gis.SpatialReferencing.SpatialReferenceSystemType.Unknown">
      <summary>
            Default value.
            Can be returned from <see cref="P:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.Type" /> if this is a compound SRS with invalid combination of
            underlying SRSs. See <see cref="P:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.IsCompound" />.
            </summary>
    </member>
    <member name="F:Aspose.Gis.SpatialReferencing.SpatialReferenceSystemType.Geographic">
      <summary>
            Geographic SRS is based on angular longitude and angular latitude.
            Geographic SRS can be converted to <see cref="T:Aspose.Gis.SpatialReferencing.GeographicSpatialReferenceSystem" />
            via <see cref="P:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.AsGeographic" /> method.
            </summary>
    </member>
    <member name="F:Aspose.Gis.SpatialReferencing.SpatialReferenceSystemType.Geocentric">
      <summary>
            Geocentric SRS is three dimensional cartesian SRS with origin at Earth center.
            Geocentric SRS can be converted to <see cref="T:Aspose.Gis.SpatialReferencing.GeocentricSpatialReferenceSystem" />
            via <see cref="P:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.AsGeocentric" /> method.
            </summary>
    </member>
    <member name="F:Aspose.Gis.SpatialReferencing.SpatialReferenceSystemType.Projected">
      <summary>
            Projected SRS is based on linear X and linear Y. It is the result of application a projection on a <see cref="F:Aspose.Gis.SpatialReferencing.SpatialReferenceSystemType.Geographic" /> SRS.
            Projected SRS can be converted to <see cref="T:Aspose.Gis.SpatialReferencing.ProjectedSpatialReferenceSystem" />
            via <see cref="P:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.AsProjected" /> method.
            </summary>
    </member>
    <member name="F:Aspose.Gis.SpatialReferencing.SpatialReferenceSystemType.Vertical">
      <summary>
            Vertical SRS describes linear height coordinate.
            Vertical SRS can be converted to <see cref="T:Aspose.Gis.SpatialReferencing.VerticalSpatialReferenceSystem" />
            via <see cref="P:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.AsVertical" /> method.
            </summary>
    </member>
    <member name="F:Aspose.Gis.SpatialReferencing.SpatialReferenceSystemType.Local">
      <summary>
            Local SRS relates coordinates to some object, other them Earth.
            Local SRS can be converted to <see cref="T:Aspose.Gis.SpatialReferencing.LocalSpatialReferenceSystem" />
            via <see cref="P:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.AsLocal" /> method.
            </summary>
    </member>
    <member name="T:Aspose.Gis.SpatialReferencing.TransformationException">
      <summary>
            Transformation exception is thrown when error occurs during transformation of coordinate or during transformation creation.
            </summary>
    </member>
    <member name="M:Aspose.Gis.SpatialReferencing.TransformationException.#ctor">
      <summary>
            Create new instance.
            </summary>
    </member>
    <member name="M:Aspose.Gis.SpatialReferencing.TransformationException.#ctor(System.String)">
      <summary>
            Create new instance.
            </summary>
      <param name="message">Error message.</param>
    </member>
    <member name="M:Aspose.Gis.SpatialReferencing.TransformationException.#ctor(System.String,System.Exception)">
      <summary>
            Create new instance.
            </summary>
      <param name="message">Error message.</param>
      <param name="inner">Inner exception</param>
    </member>
    <member name="M:Aspose.Gis.SpatialReferencing.TransformationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Create new instance.
            </summary>
      <param name="info">Serialization info.</param>
      <param name="context">Streaming context.</param>
    </member>
    <member name="T:Aspose.Gis.SpatialReferencing.Unit">
      <summary>
            Represent measurement unit.
            </summary>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.Unit.Meter">
      <summary> Get Unit that represents meters. </summary>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.Unit.Radian">
      <summary> Get Unit that represents radians. </summary>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.Unit.Degree">
      <summary> Get Unit that represents degrees. </summary>
    </member>
    <member name="M:Aspose.Gis.SpatialReferencing.Unit.#ctor(System.String,System.Double,Aspose.Gis.SpatialReferencing.Identifier)">
      <summary>
            Create new instance.
            </summary>
      <param name="name">Name of unit.</param>
      <param name="factor">Factor to meter, if this is length unit, or to radian, if this is angle unit.</param>
      <param name="identifier">Identifier of unit.</param>
    </member>
    <member name="M:Aspose.Gis.SpatialReferencing.Unit.Apply(System.Double)">
      <summary>
            Converts argument to unit, described by this instance.
            </summary>
      <param name="value"> Value to convert. Must be in radians or meters. </param>
      <returns> Value, converted to this unit. </returns>
    </member>
    <member name="M:Aspose.Gis.SpatialReferencing.Unit.Deapply(System.Double)">
      <summary>
            Converts argument from unit, described by this instance, to radians or meters.
            </summary>
      <param name="value"> Value to convert. </param>
      <returns> Value converted to radians or meters. </returns>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.Unit.Factor">
      <summary>
            Factor to meter, if this is length unit, factor to radian, if this is angle unit.
            </summary>
    </member>
    <member name="T:Aspose.Gis.SpatialReferencing.VerticalDatum">
      <summary>
            Indicates method used for vertical measurements.
            </summary>
    </member>
    <member name="M:Aspose.Gis.SpatialReferencing.VerticalDatum.#ctor(System.String,System.Int32,Aspose.Gis.SpatialReferencing.Identifier)">
      <summary>
            Create new instance.
            </summary>
      <param name="name"> name of datum. </param>
      <param name="datumType"> integer number, representing type of datum. </param>
      <param name="identifier"> identifier of datum. </param>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.VerticalDatum.DatumType">
      <summary>
            An integer number, indicating method that had been used.
            </summary>
    </member>
    <member name="T:Aspose.Gis.SpatialReferencing.VerticalSpatialReferenceSystem">
      <summary>
            Vertical SRS is a one dimensional SRS that describes height coordinates.
            </summary>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.VerticalSpatialReferenceSystem.VerticalUnit">
      <summary>
            Unit that is used in this SRS.
            </summary>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.VerticalSpatialReferenceSystem.VerticalDatum">
      <summary>
            Datum that is used in this SRS.
            </summary>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.VerticalSpatialReferenceSystem.Type">
      <summary>
            Return <see cref="F:Aspose.Gis.SpatialReferencing.SpatialReferenceSystemType.Vertical" />.
            </summary>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.VerticalSpatialReferenceSystem.AsVertical">
      <summary>
            Returns this SRS.
            </summary>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.VerticalSpatialReferenceSystem.DimensionsCount">
      <summary>
            Returns 1, since vertical SRS is always one dimensional.
            </summary>
    </member>
    <member name="M:Aspose.Gis.SpatialReferencing.VerticalSpatialReferenceSystem.GetAxis(System.Int32)">
      <summary>
            Get <see cref="T:Aspose.Gis.SpatialReferencing.Axis" /> that describes dimension.
            </summary>
      <param name="dimension"> Number of dimension. </param>
      <returns> Axis that describes dimension. </returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="dimension" /> is less then 0 or greater or equals to <see cref="P:Aspose.Gis.SpatialReferencing.VerticalSpatialReferenceSystem.DimensionsCount" /></exception>
    </member>
    <member name="M:Aspose.Gis.SpatialReferencing.VerticalSpatialReferenceSystem.GetUnit(System.Int32)">
      <summary>
            Get <see cref="T:Aspose.Gis.SpatialReferencing.Unit" /> of dimension.
            </summary>
      <param name="dimension"> Number of dimension. </param>
      <returns> Unit of dimension. </returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="dimension" /> is less then 0 or greater or equals to <see cref="P:Aspose.Gis.SpatialReferencing.VerticalSpatialReferenceSystem.DimensionsCount" /></exception>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.VerticalSpatialReferenceSystem.HasGeographicDatum">
      <summary>
            Returns <see langword="false" />, since Vertical SRS doesn't have geographic datum.
            </summary>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.VerticalSpatialReferenceSystem.GeographicDatum">
      <summary>
            Throws <see cref="T:System.InvalidOperationException" />, since Vertical SRS doesn't have geographic datum.
            </summary>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.VerticalSpatialReferenceSystem.HasPrimeMeridian">
      <summary>
            Returns <see langword="false" />, since Vertical SRS doesn't have prime meridian.
            </summary>
    </member>
    <member name="P:Aspose.Gis.SpatialReferencing.VerticalSpatialReferenceSystem.PrimeMeridian">
      <summary>
            Throws <see cref="T:System.InvalidOperationException" />, since Vertical SRS doesn't have prime meridian.
            </summary>
    </member>
    <member name="M:Aspose.Gis.SpatialReferencing.VerticalSpatialReferenceSystem.Validate(System.String@)">
      <summary>
            Determine if this SRS is valid. See <see cref="M:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.Validate(System.String@)" /> for validity description.
            </summary>
      <param name="errorMessage"> Description of invalidity (if result is <see langword="false" />)</param>
      <returns> If this SRS is valid - <see langword="true" />, otherwise - <see langword="false" />.</returns>
    </member>
    <member name="M:Aspose.Gis.SpatialReferencing.VerticalSpatialReferenceSystem.IsEquivalent(Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
      <summary>
            Detects whether this SRS is equivalent to other SRS. <seealso cref="M:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.IsEquivalent(Aspose.Gis.SpatialReferencing.SpatialReferenceSystem,Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)" />.
            </summary>
      <param name="other">Other SRS.</param>
      <returns>bool value, indicating whether this SRS is equivalent to other SRS.</returns>
    </member>
    <member name="T:Aspose.Gis.VectorLayer">
      <summary>
            Represents a vector layer.
            A vector layer is a collection of geographic features, stored in a file.
            </summary>
    </member>
    <member name="M:Aspose.Gis.VectorLayer.Open(System.String,Aspose.Gis.FileDriver)">
      <summary>
            Open the layer for reading.
            </summary>
      <param name="path">Path to the file.</param>
      <param name="driver">Driver to use.</param>
      <returns>A read-only layer.</returns>
      <exception cref="T:System.ArgumentException">Options object has an incorrect type for this driver.</exception>
      <exception cref="T:System.ArgumentNullException">The path is <see langword="null" />.</exception>
      <exception cref="T:Aspose.Gis.GisException">Error reading the feature from the file.</exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
    </member>
    <member name="M:Aspose.Gis.VectorLayer.Open(Aspose.Gis.AbstractPath,Aspose.Gis.FileDriver)">
      <summary>
            Open the layer for reading.
            </summary>
      <param name="path">Path to the file.</param>
      <param name="driver">Driver to use.</param>
      <returns>A read-only layer.</returns>
      <exception cref="T:System.ArgumentException">Options object has an incorrect type for this driver.</exception>
      <exception cref="T:System.ArgumentNullException">The path is <see langword="null" />.</exception>
      <exception cref="T:Aspose.Gis.GisException">Error reading the feature from the file.</exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
    </member>
    <member name="M:Aspose.Gis.VectorLayer.Open(System.String,Aspose.Gis.FileDriver,Aspose.Gis.DriverOptions)">
      <summary>
            Open the layer for reading.
            </summary>
      <param name="path">Path to the file.</param>
      <param name="driver">Driver to use.</param>
      <param name="options">Driver-specific options.</param>
      <returns>A read-only layer.</returns>
      <exception cref="T:System.ArgumentException">Options object has an incorrect type for this driver.</exception>
      <exception cref="T:System.ArgumentNullException">The path is <see langword="null" />.</exception>
      <exception cref="T:Aspose.Gis.GisException">Error reading the feature from the file.</exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
    </member>
    <member name="M:Aspose.Gis.VectorLayer.Open(Aspose.Gis.AbstractPath,Aspose.Gis.FileDriver,Aspose.Gis.DriverOptions)">
      <summary>
            Open the layer for reading.
            </summary>
      <param name="path">Path to the file.</param>
      <param name="driver">Driver to use.</param>
      <param name="options">Driver-specific options.</param>
      <returns>A read-only layer.</returns>
      <exception cref="T:System.ArgumentException">Options object has an incorrect type for this driver.</exception>
      <exception cref="T:System.ArgumentNullException">The path is <see langword="null" />.</exception>
      <exception cref="T:Aspose.Gis.GisException">Error reading the feature from the file.</exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
    </member>
    <member name="M:Aspose.Gis.VectorLayer.Create(System.String,Aspose.Gis.FileDriver)">
      <summary>
            Creates the layer and opens it for adding new features.
            </summary>
      <param name="path">Path to the file.</param>
      <param name="driver">Driver to use.</param>
      <returns>A write-only layer.</returns>
      <exception cref="T:System.ArgumentNullException">The path is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Options object has an incorrect type for this driver.</exception>
      <exception cref="T:Aspose.Gis.GisException">Error writing the feature to the file.</exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
    </member>
    <member name="M:Aspose.Gis.VectorLayer.Create(System.String,Aspose.Gis.FileDriver,Aspose.Gis.DriverOptions)">
      <summary>
            Creates the layer and opens it for adding new features.
            </summary>
      <param name="path">Path to the file.</param>
      <param name="driver">Driver to use.</param>
      <param name="options">Driver-specific options.</param>
      <returns>A write-only layer.</returns>
      <exception cref="T:System.ArgumentNullException">The path is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Options object has an incorrect type for this driver.</exception>
      <exception cref="T:Aspose.Gis.GisException">Error writing the feature to the file.</exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
    </member>
    <member name="M:Aspose.Gis.VectorLayer.Create(Aspose.Gis.AbstractPath,Aspose.Gis.FileDriver)">
      <summary>
            Creates the layer and opens it for adding new features.
            </summary>
      <param name="path">Path to the file.</param>
      <param name="driver">Driver to use.</param>
      <returns>A write-only layer.</returns>
      <exception cref="T:System.ArgumentNullException">The path is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Options object has an incorrect type for this driver.</exception>
      <exception cref="T:Aspose.Gis.GisException">Error writing the feature to the file.</exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
    </member>
    <member name="M:Aspose.Gis.VectorLayer.Create(Aspose.Gis.AbstractPath,Aspose.Gis.FileDriver,Aspose.Gis.DriverOptions)">
      <summary>
            Creates the layer and opens it for adding new features.
            </summary>
      <param name="path">Path to the file.</param>
      <param name="driver">Driver to use.</param>
      <param name="options">Driver-specific options.</param>
      <returns>A write-only layer.</returns>
      <exception cref="T:System.ArgumentNullException">The path is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Options object has an incorrect type for this driver.</exception>
      <exception cref="T:Aspose.Gis.GisException">Error writing the feature to the file.</exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
    </member>
    <member name="M:Aspose.Gis.VectorLayer.Create(System.String,Aspose.Gis.FileDriver,Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
      <summary>
            Creates the layer and opens it for appending.
            </summary>
      <param name="path">Path to the file.</param>
      <param name="driver">Driver to use.</param>
      <param name="spatialReferenceSystem">Spatial reference system.</param>
      <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
      <exception cref="T:System.ArgumentNullException">The path is <see langword="null" />.</exception>
      <exception cref="T:Aspose.Gis.GisException">Error reading or writing the feature to/from the file.</exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
      <exception cref="T:System.NotSupportedException">
            Spatial reference system is not supported by the driver.
            Use <see cref="M:Aspose.Gis.FileDriver.SupportsSpatialReferenceSystem(Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)" /> to check whether spatial reference system is supported.
            </exception>
    </member>
    <member name="M:Aspose.Gis.VectorLayer.Create(Aspose.Gis.AbstractPath,Aspose.Gis.FileDriver,Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
      <summary>
            Creates the layer and opens it for appending.
            </summary>
      <param name="path">Path to the file.</param>
      <param name="driver">Driver to use.</param>
      <param name="spatialReferenceSystem">Spatial reference system.</param>
      <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
      <exception cref="T:System.ArgumentNullException">The path is <see langword="null" />.</exception>
      <exception cref="T:Aspose.Gis.GisException">Error reading or writing the feature to/from the file.</exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
      <exception cref="T:System.NotSupportedException">
            Spatial reference system is not supported by the driver.
            Use <see cref="M:Aspose.Gis.FileDriver.SupportsSpatialReferenceSystem(Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)" /> to check whether spatial reference system is supported.
            </exception>
    </member>
    <member name="M:Aspose.Gis.VectorLayer.Create(System.String,Aspose.Gis.FileDriver,Aspose.Gis.DriverOptions,Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
      <summary>
            Creates the layer and opens it for appending.
            </summary>
      <param name="path">Path to the file.</param>
      <param name="driver">Driver to use.</param>
      <param name="options">Driver-specific options.</param>
      <param name="spatialReferenceSystem">Spatial reference system.</param>
      <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
      <exception cref="T:System.ArgumentNullException">The path is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Options object has an incorrect type for this driver.</exception>
      <exception cref="T:Aspose.Gis.GisException">Error reading or writing the feature to/from the file.</exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
      <exception cref="T:System.NotSupportedException">
            Spatial reference system is not supported by the driver.
            Use <see cref="M:Aspose.Gis.FileDriver.SupportsSpatialReferenceSystem(Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)" /> to check whether spatial reference system is supported.
            </exception>
    </member>
    <member name="M:Aspose.Gis.VectorLayer.Create(Aspose.Gis.AbstractPath,Aspose.Gis.FileDriver,Aspose.Gis.DriverOptions,Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
      <summary>
            Creates the layer and opens it for appending.
            </summary>
      <param name="path">Path to the file.</param>
      <param name="driver">Driver to use.</param>
      <param name="options">Driver-specific options.</param>
      <param name="spatialReferenceSystem">Spatial reference system.</param>
      <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
      <exception cref="T:System.ArgumentNullException">The path is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Options object has an incorrect type for this driver.</exception>
      <exception cref="T:Aspose.Gis.GisException">Error reading or writing the feature to/from the file.</exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
      <exception cref="T:System.NotSupportedException">
            Spatial reference system is not supported by the driver.
            Use <see cref="M:Aspose.Gis.FileDriver.SupportsSpatialReferenceSystem(Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)" /> to check whether spatial reference system is supported.
            </exception>
    </member>
    <member name="M:Aspose.Gis.VectorLayer.Convert(System.String,Aspose.Gis.FileDriver,System.String,Aspose.Gis.FileDriver)">
      <summary>
            Convert a layer to a different format.
            </summary>
      <param name="sourcePath">Path to the layer that will be converted.</param>
      <param name="sourceDriver">The format driver for the source layer.</param>
      <param name="destinationPath">Path to the layer that will created as a result of conversion.</param>
      <param name="destinationDriver">The format driver for the destination layer.</param>
      <exception cref="T:System.ArgumentNullException">Either of paths is <see langword="null" />.</exception>
    </member>
    <member name="M:Aspose.Gis.VectorLayer.Convert(Aspose.Gis.AbstractPath,Aspose.Gis.FileDriver,Aspose.Gis.AbstractPath,Aspose.Gis.FileDriver)">
      <summary>
            Convert a layer to a different format.
            </summary>
      <param name="sourcePath">Path to the layer that will be converted.</param>
      <param name="sourceDriver">The format driver for the source layer.</param>
      <param name="destinationPath">Path to the layer that will created as a result of conversion.</param>
      <param name="destinationDriver">The format driver for the destination layer.</param>
      <exception cref="T:System.ArgumentNullException">Either of paths is <see langword="null" />.</exception>
    </member>
    <member name="M:Aspose.Gis.VectorLayer.Convert(System.String,Aspose.Gis.FileDriver,System.String,Aspose.Gis.FileDriver,Aspose.Gis.ConversionOptions)">
      <summary>
            Convert a layer to a different format.
            </summary>
      <param name="sourcePath">Path to the layer that will be converted.</param>
      <param name="sourceDriver">The format driver for the source layer.</param>
      <param name="destinationPath">Path to the layer that will created as a result of conversion.</param>
      <param name="destinationDriver">The format driver for the destination layer.</param>
      <param name="options">Options for the conversion procedure.</param>
      <exception cref="T:System.ArgumentNullException">Either of paths is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Options object has an incorrect type for this driver.</exception>
      <exception cref="T:Aspose.Gis.GisException">Error reading or writing the feature to/from the file.</exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
      <exception cref="T:System.NotSupportedException">
            Spatial reference system specified in <paramref name="options" /> is not supported by <paramref name="destinationDriver" />.
            </exception>
      <exception cref="T:Aspose.Gis.SpatialReferencing.TransformationException">
            Transformation of features geometry from source spatial reference system to target spatial reference system failed.
            </exception>
    </member>
    <member name="M:Aspose.Gis.VectorLayer.Convert(Aspose.Gis.AbstractPath,Aspose.Gis.FileDriver,Aspose.Gis.AbstractPath,Aspose.Gis.FileDriver,Aspose.Gis.ConversionOptions)">
      <summary>
            Convert a layer to a different format.
            </summary>
      <param name="sourcePath">Path to the layer that will be converted.</param>
      <param name="sourceDriver">The format driver for the source layer.</param>
      <param name="destinationPath">Path to the layer that will created as a result of conversion.</param>
      <param name="destinationDriver">The format driver for the destination layer.</param>
      <param name="options">Options for the conversion procedure.</param>
      <exception cref="T:System.ArgumentNullException">Either of paths is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Options object has an incorrect type for this driver.</exception>
      <exception cref="T:Aspose.Gis.GisException">Error reading or writing the feature to/from the file.</exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
      <exception cref="T:System.NotSupportedException">
            Spatial reference system specified in <paramref name="options" /> is not supported by <paramref name="destinationDriver" />.
            </exception>
      <exception cref="T:Aspose.Gis.SpatialReferencing.TransformationException">
            Transformation of features geometry from source spatial reference system to target spatial reference system failed.
            </exception>
    </member>
    <member name="P:Aspose.Gis.VectorLayer.Count">
      <summary>
            Gets the number of features in this layer.
            </summary>
      <value>
            The number of features in this layer.
            </value>
      <exception cref="T:System.InvalidOperationException"> is thrown if layer is opened write-only.</exception>
    </member>
    <member name="P:Aspose.Gis.VectorLayer.Item(System.Int32)">
      <summary>
            Gets the <see cref="T:Aspose.Gis.Feature" /> at the specified index.
            </summary>
      <value>
            The <see cref="T:Aspose.Gis.Feature" />.
            </value>
      <param name="index">The index of the feature.</param>
      <exception cref="T:System.InvalidOperationException"> is thrown if layer is opened write-only.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Index is out of range.</exception>
      <exception cref="T:Aspose.Gis.GisException">Error reading the feature from the file.</exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
    </member>
    <member name="P:Aspose.Gis.VectorLayer.GeometryType">
      <summary>
            Gets the type of the geometry for the layer.
            </summary>
      <value>
            The type of the geometry.
            </value>
      <exception cref="T:System.InvalidOperationException"> is thrown if layer is opened write-only.</exception>
    </member>
    <member name="P:Aspose.Gis.VectorLayer.Driver">
      <summary>
            Gets the <see cref="P:Aspose.Gis.VectorLayer.Driver" /> that instantiated this layer.
            </summary>
    </member>
    <member name="M:Aspose.Gis.VectorLayer.ConstructFeature">
      <summary>
            Creates (but does not add to the layer) a new feature with attributes matching the collection of attributes of this layer.
            When done with setting data for the feature, use <see cref="M:Aspose.Gis.VectorLayer.Add(Aspose.Gis.Feature)" /> to add the feature to the layer.
            </summary>
      <returns>A new feature.</returns>
      <remarks>
            Changes to <see cref="P:Aspose.Gis.VectorLayer.Attributes" /> are not allowed after calling this method.
            </remarks>
    </member>
    <member name="M:Aspose.Gis.VectorLayer.CopyAttributes(Aspose.Gis.FeaturesSequence)">
      <summary>
            Copies attributes of other <see cref="T:Aspose.Gis.VectorLayer" /> to this one.
            </summary>
      <param name="featuresSequence">The features sequence to copy attributes from.</param>
      <exception cref="T:System.ArgumentNullException">The input layer is <see langword="null" />.</exception>
    </member>
    <member name="M:Aspose.Gis.VectorLayer.CopyAttributes(Aspose.Gis.FeaturesSequence,Aspose.Gis.IAttributesConverter)">
      <summary>
            Copies attributes of other <see cref="T:Aspose.Gis.VectorLayer" /> to this one.
            </summary>
      <param name="featuresSequence">The features sequence to copy attributes from.</param>
      <param name="converter">An instance of custom <see cref="T:Aspose.Gis.IAttributesConverter" /> that will process the attributes one by one.</param>
      <exception cref="T:System.ArgumentNullException">The input layer is <see langword="null" />.</exception>
    </member>
    <member name="M:Aspose.Gis.VectorLayer.Dispose">
      <summary>
            Releases the resources used by the <see cref="T:Aspose.Gis.VectorLayer" />.
            </summary>
    </member>
    <member name="M:Aspose.Gis.VectorLayer.Add(Aspose.Gis.Feature)">
      <summary>
            Adds a new feature to the layer, if supported by the <see cref="T:Aspose.Gis.VectorLayer" />'s <see cref="P:Aspose.Gis.VectorLayer.Driver" />.
            </summary>
      <param name="feature">The feature to add.</param>
      <exception cref="T:System.InvalidOperationException"> is thrown if the layer is read-only.</exception>
    </member>
    <member name="M:Aspose.Gis.VectorLayer.NearestTo(System.Double,System.Double)">
      <summary>Gets the nearest feature to the provided coordinate.</summary>
      <param name="x">X of the coordinate.</param>
      <param name="y">Y of the coordinate.</param>
      <returns>The nearest feature to the provided coordinate.</returns>
    </member>
    <member name="M:Aspose.Gis.VectorLayer.NearestTo(Aspose.Gis.Geometries.IPoint)">
      <summary>Gets the nearest feature to the provided point.</summary>
      <param name="point">The point.</param>
      <returns>The nearest feature to the provided point.</returns>
      <exception cref="T:System.ArgumentNullException">Point is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Point is empty or not valid.</exception>
    </member>
    <member name="M:Aspose.Gis.VectorLayer.UseAttributesIndex(System.String,System.String,System.Boolean)">
      <summary>
            Loads attribute index to speed up filtering by attributes value in filter methods like <see cref="M:Aspose.Gis.FeaturesSequence.WhereGreater``1(System.String,``0)" />.
            If index does not exist creates it first. Use <paramref name="forceRebuild" /> to force index recreation.
            </summary>
      <param name="indexPath">Path to the index file.</param>
      <param name="attributeName">Name of the attribute to build index on.</param>
      <param name="forceRebuild">Whether to recreate index even if it already exists.</param>
      <exception cref="T:System.ArgumentNullException">Argument is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Attribute with such name does not exist in the layer.</exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
      <exception cref="T:System.InvalidOperationException">Index for the specified attribute already loaded for this layer.</exception>
      <exception cref="T:Aspose.Gis.GisException">File exists and it is not an attribute index file created by Aspose.GIS.</exception>
    </member>
    <member name="M:Aspose.Gis.VectorLayer.UseAttributesIndex(Aspose.Gis.AbstractPath,System.String,System.Boolean)">
      <summary>
            Loads attribute index to speed up filtering by attributes value in filter methods like <see cref="M:Aspose.Gis.FeaturesSequence.WhereGreater``1(System.String,``0)" />.
            If index does not exist creates it first. Use <paramref name="forceRebuild" /> to force index recreation.
            </summary>
      <param name="indexPath">Path to the index file.</param>
      <param name="attributeName">Name of the attribute to build index on.</param>
      <param name="forceRebuild">Whether to recreate index even if it already exists.</param>
      <exception cref="T:System.ArgumentNullException">Argument is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Attribute with such name does not exist in the layer.</exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
      <exception cref="T:System.InvalidOperationException">Index for the specified attribute already loaded for this layer.</exception>
      <exception cref="T:Aspose.Gis.GisException">File exists and it is not an attribute index file created by Aspose.GIS.</exception>
    </member>
    <member name="M:Aspose.Gis.VectorLayer.UseSpatialIndex(System.String,System.Boolean)">
      <summary>
            Loads spatial index to speed up filtering by attributes value in filter methods like <see cref="M:Aspose.Gis.FeaturesSequence.WhereIntersects(Aspose.Gis.Geometries.IGeometry)" />
            and <see cref="M:Aspose.Gis.VectorLayer.NearestTo(System.Double,System.Double)" />.
            If index does not exist creates it first. Use <paramref name="forceRebuild" /> to force index recreation.
            </summary>
      <param name="indexPath">Path to the index file.</param>
      <param name="forceRebuild">Whether to recreate index even if it already exists.</param>
      <exception cref="T:System.ArgumentNullException">Path is <see langword="null" />.</exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
      <exception cref="T:System.InvalidOperationException">Spatial index is already loaded for this layer.</exception>
      <exception cref="T:Aspose.Gis.GisException">File exists and it is not a spatial index file created by Aspose.GIS.</exception>
    </member>
    <member name="M:Aspose.Gis.VectorLayer.UseSpatialIndex(Aspose.Gis.AbstractPath,System.Boolean)">
      <summary>
            Loads spatial index to speed up filtering by attributes value in filter methods like <see cref="M:Aspose.Gis.FeaturesSequence.WhereIntersects(Aspose.Gis.Geometries.IGeometry)" />
            and <see cref="M:Aspose.Gis.VectorLayer.NearestTo(System.Double,System.Double)" />.
            If index does not exist creates it first. Use <paramref name="forceRebuild" /> to force index recreation.
            </summary>
      <param name="indexPath">Path to the index file.</param>
      <param name="forceRebuild">Whether to recreate index even if it already exists.</param>
      <exception cref="T:System.ArgumentNullException">Path is <see langword="null" />.</exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
      <exception cref="T:System.InvalidOperationException">Spatial index is already loaded for this layer.</exception>
      <exception cref="T:Aspose.Gis.GisException">File exists and it is not a spatial index file created by Aspose.GIS.</exception>
    </member>
    <member name="P:Aspose.Gis.VectorLayer.Attributes">
      <summary> Gets the collection of custom attributes for features in this <see cref="T:Aspose.Gis.VectorLayer" />. </summary>
      <value> The collection of attributes. </value>
    </member>
    <member name="M:Aspose.Gis.VectorLayer.#ctor(Aspose.Gis.DriverOptions)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.VectorLayer" /> class.
            </summary>
      <param name="options">Open options.</param>
    </member>
    <member name="M:Aspose.Gis.VectorLayer.Dispose(System.Boolean)">
      <summary>
            Releases the resources used by the <see cref="T:Aspose.Gis.VectorLayer" />.
            </summary>
      <param name="disposing">
        <see langword="true" /> to release both managed and unmanaged resources;
            <see langword="false" /> to release only unmanaged resources.
            </param>
    </member>
  </members>
</doc>